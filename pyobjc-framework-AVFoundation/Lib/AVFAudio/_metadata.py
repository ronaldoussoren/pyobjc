# This file is generated by objective.metadata
#
# Last update: Sat Aug  2 11:19:43 2025
#
# flake8: noqa

import objc, sys
from typing import NewType

if sys.maxsize > 2**32:

    def sel32or64(a, b):
        return b

else:

    def sel32or64(a, b):
        return a


if objc.arch == "arm64":

    def selAorI(a, b):
        return a

else:

    def selAorI(a, b):
        return b


misc = {}
misc.update(
    {
        "AVAudio3DPoint": objc.createStructType(
            "AVFAudio.AVAudio3DPoint", b"{AVAudio3DPoint=fff}", ["x", "y", "z"]
        ),
        "AVAudioConverterPrimeInfo": objc.createStructType(
            "AVFAudio.AVAudioConverterPrimeInfo",
            b"{AVAudioConverterPrimeInfo=II}",
            ["leadingFrames", "trailingFrames"],
        ),
        "AVAudio3DVectorOrientation": objc.createStructType(
            "AVFAudio.AVAudio3DVectorOrientation",
            b"{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}",
            ["forward", "up"],
        ),
        "AVAudio3DAngularOrientation": objc.createStructType(
            "AVFAudio.AVAudio3DAngularOrientation",
            b"{AVAudio3DAngularOrientation=fff}",
            ["yaw", "pitch", "roll"],
        ),
        "AVAudioVoiceProcessingOtherAudioDuckingConfiguration": objc.createStructType(
            "AVFAudio.AVAudioVoiceProcessingOtherAudioDuckingConfiguration",
            b"{AVAudioVoiceProcessingOtherAudioDuckingConfiguration=Zq}",
            ["enableAdvancedDucking", "duckingLevel"],
        ),
        "AVBeatRange": objc.createStructType(
            "AVFAudio.AVBeatRange", b"{_AVBeatRange=dd}", ["start", "length"]
        ),
        "AVAudio3DVector": objc.createStructType(
            "AVFAudio.AVAudio3DVector", b"{AVAudio3DPoint=fff}", ["x", "y", "z"]
        ),
    }
)
constants = """$AVAudioApplicationInputMuteStateChangeNotification$AVAudioApplicationMuteStateKey$AVAudioBitRateStrategy_Constant$AVAudioBitRateStrategy_LongTermAverage$AVAudioBitRateStrategy_Variable$AVAudioBitRateStrategy_VariableConstrained$AVAudioEngineConfigurationChangeNotification$AVAudioFileTypeKey$AVAudioSequencerInfoDictionaryKeyAlbum$AVAudioSequencerInfoDictionaryKeyApproximateDurationInSeconds$AVAudioSequencerInfoDictionaryKeyArtist$AVAudioSequencerInfoDictionaryKeyChannelLayout$AVAudioSequencerInfoDictionaryKeyComments$AVAudioSequencerInfoDictionaryKeyComposer$AVAudioSequencerInfoDictionaryKeyCopyright$AVAudioSequencerInfoDictionaryKeyEncodingApplication$AVAudioSequencerInfoDictionaryKeyGenre$AVAudioSequencerInfoDictionaryKeyISRC$AVAudioSequencerInfoDictionaryKeyKeySignature$AVAudioSequencerInfoDictionaryKeyLyricist$AVAudioSequencerInfoDictionaryKeyNominalBitRate$AVAudioSequencerInfoDictionaryKeyRecordedDate$AVAudioSequencerInfoDictionaryKeySourceBitDepth$AVAudioSequencerInfoDictionaryKeySourceEncoder$AVAudioSequencerInfoDictionaryKeySubTitle$AVAudioSequencerInfoDictionaryKeyTempo$AVAudioSequencerInfoDictionaryKeyTimeSignature$AVAudioSequencerInfoDictionaryKeyTitle$AVAudioSequencerInfoDictionaryKeyTrackNumber$AVAudioSequencerInfoDictionaryKeyYear$AVAudioSessionAvailableInputsChangeNotification$AVAudioSessionCategoryAmbient$AVAudioSessionCategoryAudioProcessing$AVAudioSessionCategoryMultiRoute$AVAudioSessionCategoryPlayAndRecord$AVAudioSessionCategoryPlayback$AVAudioSessionCategoryRecord$AVAudioSessionCategorySoloAmbient$AVAudioSessionInterruptionNotification$AVAudioSessionInterruptionOptionKey$AVAudioSessionInterruptionReasonKey$AVAudioSessionInterruptionTypeKey$AVAudioSessionInterruptionWasSuspendedKey$AVAudioSessionLocationLower$AVAudioSessionLocationUpper$AVAudioSessionMediaServicesWereLostNotification$AVAudioSessionMediaServicesWereResetNotification$AVAudioSessionMicrophoneInjectionCapabilitiesChangeNotification$AVAudioSessionMicrophoneInjectionIsAvailableKey$AVAudioSessionModeDefault$AVAudioSessionModeGameChat$AVAudioSessionModeMeasurement$AVAudioSessionModeMoviePlayback$AVAudioSessionModeShortFormVideo$AVAudioSessionModeSpokenAudio$AVAudioSessionModeVideoChat$AVAudioSessionModeVideoRecording$AVAudioSessionModeVoiceChat$AVAudioSessionModeVoicePrompt$AVAudioSessionMuteStateKey$AVAudioSessionOrientationBack$AVAudioSessionOrientationBottom$AVAudioSessionOrientationFront$AVAudioSessionOrientationLeft$AVAudioSessionOrientationRight$AVAudioSessionOrientationTop$AVAudioSessionOutputMuteStateChangeNotification$AVAudioSessionPolarPatternCardioid$AVAudioSessionPolarPatternOmnidirectional$AVAudioSessionPolarPatternStereo$AVAudioSessionPolarPatternSubcardioid$AVAudioSessionPortAVB$AVAudioSessionPortAirPlay$AVAudioSessionPortBluetoothA2DP$AVAudioSessionPortBluetoothHFP$AVAudioSessionPortBluetoothLE$AVAudioSessionPortBuiltInMic$AVAudioSessionPortBuiltInReceiver$AVAudioSessionPortBuiltInSpeaker$AVAudioSessionPortCarAudio$AVAudioSessionPortContinuityMicrophone$AVAudioSessionPortDisplayPort$AVAudioSessionPortFireWire$AVAudioSessionPortHDMI$AVAudioSessionPortHeadphones$AVAudioSessionPortHeadsetMic$AVAudioSessionPortLineIn$AVAudioSessionPortLineOut$AVAudioSessionPortPCI$AVAudioSessionPortThunderbolt$AVAudioSessionPortUSBAudio$AVAudioSessionPortVirtual$AVAudioSessionRenderingCapabilitiesChangeNotification$AVAudioSessionRenderingModeChangeNotification$AVAudioSessionRenderingModeNewRenderingModeKey$AVAudioSessionRouteChangeNotification$AVAudioSessionRouteChangePreviousRouteKey$AVAudioSessionRouteChangeReasonKey$AVAudioSessionSilenceSecondaryAudioHintNotification$AVAudioSessionSilenceSecondaryAudioHintTypeKey$AVAudioSessionSpatialAudioEnabledKey$AVAudioSessionSpatialPlaybackCapabilitiesChangedNotification$AVAudioSessionUserIntentToUnmuteOutputNotification$AVAudioUnitComponentManagerRegistrationsChangedNotification$AVAudioUnitComponentTagsDidChangeNotification$AVAudioUnitManufacturerNameApple$AVAudioUnitTypeEffect$AVAudioUnitTypeFormatConverter$AVAudioUnitTypeGenerator$AVAudioUnitTypeMIDIProcessor$AVAudioUnitTypeMixer$AVAudioUnitTypeMusicDevice$AVAudioUnitTypeMusicEffect$AVAudioUnitTypeOfflineEffect$AVAudioUnitTypeOutput$AVAudioUnitTypePanner$AVChannelLayoutKey$AVEncoderASPFrequencyKey$AVEncoderAudioQualityForVBRKey$AVEncoderAudioQualityKey$AVEncoderBitDepthHintKey$AVEncoderBitRateKey$AVEncoderBitRatePerChannelKey$AVEncoderBitRateStrategyKey$AVEncoderContentSourceKey$AVEncoderDynamicRangeControlConfigurationKey$AVExtendedNoteOnEventDefaultInstrument@I$AVFormatIDKey$AVLinearPCMBitDepthKey$AVLinearPCMIsBigEndianKey$AVLinearPCMIsFloatKey$AVLinearPCMIsNonInterleaved$AVNumberOfChannelsKey$AVSampleRateConverterAlgorithmKey$AVSampleRateConverterAlgorithm_Mastering$AVSampleRateConverterAlgorithm_MinimumPhase$AVSampleRateConverterAlgorithm_Normal$AVSampleRateConverterAudioQualityKey$AVSampleRateKey$AVSpeechSynthesisAvailableVoicesDidChangeNotification$AVSpeechSynthesisIPANotationAttribute$AVSpeechSynthesisVoiceIdentifierAlex$AVSpeechUtteranceDefaultSpeechRate@f$AVSpeechUtteranceMaximumSpeechRate@f$AVSpeechUtteranceMinimumSpeechRate@f$"""
enums = """$AVAUDIOENGINE_HAVE_AUAUDIOUNIT@1$AVAUDIOENGINE_HAVE_MUSICPLAYER@1$AVAUDIOFORMAT_HAVE_CMFORMATDESCRIPTION@1$AVAUDIOIONODE_HAVE_AUDIOUNIT@1$AVAUDIONODE_HAVE_AUAUDIOUNIT@1$AVAUDIOUNITCOMPONENT_HAVE_AUDIOCOMPONENT@1$AVAUDIOUNIT_HAVE_AUDIOUNIT@1$AVAudio3DMixingPointSourceInHeadModeBypass@1$AVAudio3DMixingPointSourceInHeadModeMono@0$AVAudio3DMixingRenderingAlgorithmAuto@7$AVAudio3DMixingRenderingAlgorithmEqualPowerPanning@0$AVAudio3DMixingRenderingAlgorithmHRTF@2$AVAudio3DMixingRenderingAlgorithmHRTFHQ@6$AVAudio3DMixingRenderingAlgorithmSoundField@3$AVAudio3DMixingRenderingAlgorithmSphericalHead@1$AVAudio3DMixingRenderingAlgorithmStereoPassThrough@5$AVAudio3DMixingSourceModeAmbienceBed@3$AVAudio3DMixingSourceModeBypass@1$AVAudio3DMixingSourceModePointSource@2$AVAudio3DMixingSourceModeSpatializeIfMono@0$AVAudioApplicationMicrophoneInjectionPermissionDenied@1684369017$AVAudioApplicationMicrophoneInjectionPermissionGranted@1735552628$AVAudioApplicationMicrophoneInjectionPermissionServiceDisabled@1936876659$AVAudioApplicationMicrophoneInjectionPermissionUndetermined@1970168948$AVAudioApplicationRecordPermissionDenied@1684369017$AVAudioApplicationRecordPermissionGranted@1735552628$AVAudioApplicationRecordPermissionUndetermined@1970168948$AVAudioContentSource_AV_Spatial_Live@41$AVAudioContentSource_AV_Spatial_Offline@39$AVAudioContentSource_AV_Traditional_Live@40$AVAudioContentSource_AV_Traditional_Offline@38$AVAudioContentSource_AppleAV_Spatial_Live@9$AVAudioContentSource_AppleAV_Spatial_Offline@7$AVAudioContentSource_AppleAV_Traditional_Live@8$AVAudioContentSource_AppleAV_Traditional_Offline@6$AVAudioContentSource_AppleCapture_Spatial@2$AVAudioContentSource_AppleCapture_Spatial_Enhanced@3$AVAudioContentSource_AppleCapture_Traditional@1$AVAudioContentSource_AppleMusic_Spatial@5$AVAudioContentSource_AppleMusic_Traditional@4$AVAudioContentSource_ApplePassthrough@10$AVAudioContentSource_Capture_Spatial@34$AVAudioContentSource_Capture_Spatial_Enhanced@35$AVAudioContentSource_Capture_Traditional@33$AVAudioContentSource_Music_Spatial@37$AVAudioContentSource_Music_Traditional@36$AVAudioContentSource_Passthrough@42$AVAudioContentSource_Reserved@0$AVAudioContentSource_Unspecified@-1$AVAudioConverterInputStatus_EndOfStream@2$AVAudioConverterInputStatus_HaveData@0$AVAudioConverterInputStatus_NoDataNow@1$AVAudioConverterOutputStatus_EndOfStream@2$AVAudioConverterOutputStatus_Error@3$AVAudioConverterOutputStatus_HaveData@0$AVAudioConverterOutputStatus_InputRanDry@1$AVAudioConverterPrimeMethod_None@2$AVAudioConverterPrimeMethod_Normal@1$AVAudioConverterPrimeMethod_Pre@0$AVAudioDynamicRangeControlConfiguration_Capture@4$AVAudioDynamicRangeControlConfiguration_Movie@3$AVAudioDynamicRangeControlConfiguration_Music@1$AVAudioDynamicRangeControlConfiguration_None@0$AVAudioDynamicRangeControlConfiguration_Speech@2$AVAudioEngineManualRenderingErrorInitialized@-80801$AVAudioEngineManualRenderingErrorInvalidMode@-80800$AVAudioEngineManualRenderingErrorNotRunning@-80802$AVAudioEngineManualRenderingModeOffline@0$AVAudioEngineManualRenderingModeRealtime@1$AVAudioEngineManualRenderingStatusCannotDoInCurrentContext@2$AVAudioEngineManualRenderingStatusError@-1$AVAudioEngineManualRenderingStatusInsufficientDataFromInputNode@1$AVAudioEngineManualRenderingStatusSuccess@0$AVAudioEnvironmentDistanceAttenuationModelExponential@1$AVAudioEnvironmentDistanceAttenuationModelInverse@2$AVAudioEnvironmentDistanceAttenuationModelLinear@3$AVAudioEnvironmentOutputTypeAuto@0$AVAudioEnvironmentOutputTypeBuiltInSpeakers@2$AVAudioEnvironmentOutputTypeExternalSpeakers@3$AVAudioEnvironmentOutputTypeHeadphones@1$AVAudioOtherFormat@0$AVAudioPCMFormatFloat32@1$AVAudioPCMFormatFloat64@2$AVAudioPCMFormatInt16@3$AVAudioPCMFormatInt32@4$AVAudioPlayerNodeBufferInterrupts@2$AVAudioPlayerNodeBufferInterruptsAtLoop@4$AVAudioPlayerNodeBufferLoops@1$AVAudioPlayerNodeCompletionDataConsumed@0$AVAudioPlayerNodeCompletionDataPlayedBack@2$AVAudioPlayerNodeCompletionDataRendered@1$AVAudioQualityHigh@96$AVAudioQualityLow@32$AVAudioQualityMax@127$AVAudioQualityMedium@64$AVAudioQualityMin@0$AVAudioRoutingArbitrationCategoryPlayAndRecord@1$AVAudioRoutingArbitrationCategoryPlayAndRecordVoice@2$AVAudioRoutingArbitrationCategoryPlayback@0$AVAudioSessionActivationOptionNone@0$AVAudioSessionCategoryOptionAllowAirPlay@64$AVAudioSessionCategoryOptionAllowBluetooth@4$AVAudioSessionCategoryOptionAllowBluetoothA2DP@32$AVAudioSessionCategoryOptionAllowBluetoothHFP@4$AVAudioSessionCategoryOptionBluetoothHighQualityRecording@524288$AVAudioSessionCategoryOptionDefaultToSpeaker@8$AVAudioSessionCategoryOptionDuckOthers@2$AVAudioSessionCategoryOptionInterruptSpokenAudioAndMixWithOthers@17$AVAudioSessionCategoryOptionMixWithOthers@1$AVAudioSessionCategoryOptionOverrideMutedMicrophoneInterruption@128$AVAudioSessionIOTypeAggregated@1$AVAudioSessionIOTypeNotSpecified@0$AVAudioSessionInterruptionFlags_ShouldResume@1$AVAudioSessionInterruptionOptionShouldResume@1$AVAudioSessionInterruptionReasonAppWasSuspended@1$AVAudioSessionInterruptionReasonBuiltInMicMuted@2$AVAudioSessionInterruptionReasonDefault@0$AVAudioSessionInterruptionReasonRouteDisconnected@4$AVAudioSessionInterruptionTypeBegan@1$AVAudioSessionInterruptionTypeEnded@0$AVAudioSessionMicrophoneInjectionModeNone@0$AVAudioSessionMicrophoneInjectionModeSpokenAudio@1$AVAudioSessionPortOverrideNone@0$AVAudioSessionPortOverrideSpeaker@1936747378$AVAudioSessionPromptStyleNone@1852796517$AVAudioSessionPromptStyleNormal@1852992876$AVAudioSessionPromptStyleShort@1936224884$AVAudioSessionRecordPermissionDenied@1684369017$AVAudioSessionRecordPermissionGranted@1735552628$AVAudioSessionRecordPermissionUndetermined@1970168948$AVAudioSessionRenderingModeDolbyAtmos@5$AVAudioSessionRenderingModeDolbyAudio@4$AVAudioSessionRenderingModeMonoStereo@1$AVAudioSessionRenderingModeNotApplicable@0$AVAudioSessionRenderingModeSpatialAudio@3$AVAudioSessionRenderingModeSurround@2$AVAudioSessionRouteChangeReasonCategoryChange@3$AVAudioSessionRouteChangeReasonNewDeviceAvailable@1$AVAudioSessionRouteChangeReasonNoSuitableRouteForCategory@7$AVAudioSessionRouteChangeReasonOldDeviceUnavailable@2$AVAudioSessionRouteChangeReasonOverride@4$AVAudioSessionRouteChangeReasonRouteConfigurationChange@8$AVAudioSessionRouteChangeReasonUnknown@0$AVAudioSessionRouteChangeReasonWakeFromSleep@6$AVAudioSessionRouteSharingPolicyDefault@0$AVAudioSessionRouteSharingPolicyIndependent@2$AVAudioSessionRouteSharingPolicyLongForm@1$AVAudioSessionRouteSharingPolicyLongFormAudio@1$AVAudioSessionRouteSharingPolicyLongFormVideo@3$AVAudioSessionSetActiveFlags_NotifyOthersOnDeactivation@1$AVAudioSessionSetActiveOptionNotifyOthersOnDeactivation@1$AVAudioSessionSilenceSecondaryAudioHintTypeBegin@1$AVAudioSessionSilenceSecondaryAudioHintTypeEnd@0$AVAudioStereoOrientationLandscapeLeft@4$AVAudioStereoOrientationLandscapeRight@3$AVAudioStereoOrientationNone@0$AVAudioStereoOrientationPortrait@1$AVAudioStereoOrientationPortraitUpsideDown@2$AVAudioUnitDistortionPresetDrumsBitBrush@0$AVAudioUnitDistortionPresetDrumsBufferBeats@1$AVAudioUnitDistortionPresetDrumsLoFi@2$AVAudioUnitDistortionPresetMultiBrokenSpeaker@3$AVAudioUnitDistortionPresetMultiCellphoneConcert@4$AVAudioUnitDistortionPresetMultiDecimated1@5$AVAudioUnitDistortionPresetMultiDecimated2@6$AVAudioUnitDistortionPresetMultiDecimated3@7$AVAudioUnitDistortionPresetMultiDecimated4@8$AVAudioUnitDistortionPresetMultiDistortedCubed@10$AVAudioUnitDistortionPresetMultiDistortedFunk@9$AVAudioUnitDistortionPresetMultiDistortedSquared@11$AVAudioUnitDistortionPresetMultiEcho1@12$AVAudioUnitDistortionPresetMultiEcho2@13$AVAudioUnitDistortionPresetMultiEchoTight1@14$AVAudioUnitDistortionPresetMultiEchoTight2@15$AVAudioUnitDistortionPresetMultiEverythingIsBroken@16$AVAudioUnitDistortionPresetSpeechAlienChatter@17$AVAudioUnitDistortionPresetSpeechCosmicInterference@18$AVAudioUnitDistortionPresetSpeechGoldenPi@19$AVAudioUnitDistortionPresetSpeechRadioTower@20$AVAudioUnitDistortionPresetSpeechWaves@21$AVAudioUnitEQFilterTypeBandPass@5$AVAudioUnitEQFilterTypeBandStop@6$AVAudioUnitEQFilterTypeHighPass@2$AVAudioUnitEQFilterTypeHighShelf@8$AVAudioUnitEQFilterTypeLowPass@1$AVAudioUnitEQFilterTypeLowShelf@7$AVAudioUnitEQFilterTypeParametric@0$AVAudioUnitEQFilterTypeResonantHighPass@4$AVAudioUnitEQFilterTypeResonantHighShelf@10$AVAudioUnitEQFilterTypeResonantLowPass@3$AVAudioUnitEQFilterTypeResonantLowShelf@9$AVAudioUnitReverbPresetCathedral@8$AVAudioUnitReverbPresetLargeChamber@7$AVAudioUnitReverbPresetLargeHall@4$AVAudioUnitReverbPresetLargeHall2@12$AVAudioUnitReverbPresetLargeRoom@2$AVAudioUnitReverbPresetLargeRoom2@9$AVAudioUnitReverbPresetMediumChamber@6$AVAudioUnitReverbPresetMediumHall@3$AVAudioUnitReverbPresetMediumHall2@10$AVAudioUnitReverbPresetMediumHall3@11$AVAudioUnitReverbPresetMediumRoom@1$AVAudioUnitReverbPresetPlate@5$AVAudioUnitReverbPresetSmallRoom@0$AVAudioVoiceProcessingOtherAudioDuckingLevelDefault@0$AVAudioVoiceProcessingOtherAudioDuckingLevelMax@30$AVAudioVoiceProcessingOtherAudioDuckingLevelMid@20$AVAudioVoiceProcessingOtherAudioDuckingLevelMin@10$AVAudioVoiceProcessingSpeechActivityEnded@1$AVAudioVoiceProcessingSpeechActivityStarted@0$AVMIDIControlChangeMessageTypeAllNotesOff@123$AVMIDIControlChangeMessageTypeAllSoundOff@120$AVMIDIControlChangeMessageTypeAttackTime@73$AVMIDIControlChangeMessageTypeBalance@8$AVMIDIControlChangeMessageTypeBankSelect@0$AVMIDIControlChangeMessageTypeBreath@2$AVMIDIControlChangeMessageTypeBrightness@74$AVMIDIControlChangeMessageTypeChorusLevel@93$AVMIDIControlChangeMessageTypeDataEntry@6$AVMIDIControlChangeMessageTypeDecayTime@75$AVMIDIControlChangeMessageTypeExpression@11$AVMIDIControlChangeMessageTypeFilterResonance@71$AVMIDIControlChangeMessageTypeFoot@4$AVMIDIControlChangeMessageTypeHold2Pedal@69$AVMIDIControlChangeMessageTypeLegatoPedal@68$AVMIDIControlChangeMessageTypeModWheel@1$AVMIDIControlChangeMessageTypeMonoModeOff@127$AVMIDIControlChangeMessageTypeMonoModeOn@126$AVMIDIControlChangeMessageTypeOmniModeOff@124$AVMIDIControlChangeMessageTypeOmniModeOn@125$AVMIDIControlChangeMessageTypePan@10$AVMIDIControlChangeMessageTypePortamento@65$AVMIDIControlChangeMessageTypePortamentoTime@5$AVMIDIControlChangeMessageTypeRPN_LSB@100$AVMIDIControlChangeMessageTypeRPN_MSB@101$AVMIDIControlChangeMessageTypeReleaseTime@72$AVMIDIControlChangeMessageTypeResetAllControllers@121$AVMIDIControlChangeMessageTypeReverbLevel@91$AVMIDIControlChangeMessageTypeSoft@67$AVMIDIControlChangeMessageTypeSostenuto@66$AVMIDIControlChangeMessageTypeSustain@64$AVMIDIControlChangeMessageTypeVibratoDelay@78$AVMIDIControlChangeMessageTypeVibratoDepth@77$AVMIDIControlChangeMessageTypeVibratoRate@76$AVMIDIControlChangeMessageTypeVolume@7$AVMIDIMetaEventTypeCopyright@2$AVMIDIMetaEventTypeCuePoint@7$AVMIDIMetaEventTypeEndOfTrack@47$AVMIDIMetaEventTypeInstrument@4$AVMIDIMetaEventTypeKeySignature@89$AVMIDIMetaEventTypeLyric@5$AVMIDIMetaEventTypeMarker@6$AVMIDIMetaEventTypeMidiChannel@32$AVMIDIMetaEventTypeMidiPort@33$AVMIDIMetaEventTypeProprietaryEvent@127$AVMIDIMetaEventTypeSequenceNumber@0$AVMIDIMetaEventTypeSmpteOffset@84$AVMIDIMetaEventTypeTempo@81$AVMIDIMetaEventTypeText@1$AVMIDIMetaEventTypeTimeSignature@88$AVMIDIMetaEventTypeTrackName@3$AVMusicSequenceLoadSMF_ChannelsToTracks@1$AVMusicSequenceLoadSMF_PreserveTracks@0$AVMusicTrackLoopCountForever@-1$AVSpeechBoundaryImmediate@0$AVSpeechBoundaryWord@1$AVSpeechSynthesisMarkerMarkBookmark@4$AVSpeechSynthesisMarkerMarkParagraph@3$AVSpeechSynthesisMarkerMarkPhoneme@0$AVSpeechSynthesisMarkerMarkSentence@2$AVSpeechSynthesisMarkerMarkWord@1$AVSpeechSynthesisPersonalVoiceAuthorizationStatusAuthorized@3$AVSpeechSynthesisPersonalVoiceAuthorizationStatusDenied@1$AVSpeechSynthesisPersonalVoiceAuthorizationStatusNotDetermined@0$AVSpeechSynthesisPersonalVoiceAuthorizationStatusUnsupported@2$AVSpeechSynthesisVoiceGenderFemale@2$AVSpeechSynthesisVoiceGenderMale@1$AVSpeechSynthesisVoiceGenderUnspecified@0$AVSpeechSynthesisVoiceQualityDefault@1$AVSpeechSynthesisVoiceQualityEnhanced@2$AVSpeechSynthesisVoiceQualityPremium@3$AVSpeechSynthesisVoiceTraitIsNoveltyVoice@1$AVSpeechSynthesisVoiceTraitIsPersonalVoice@2$AVSpeechSynthesisVoiceTraitNone@0$"""
misc.update(
    {
        "AVAudioSessionActivationOptions": NewType(
            "AVAudioSessionActivationOptions", int
        ),
        "AVAudioConverterOutputStatus": NewType("AVAudioConverterOutputStatus", int),
        "AVSpeechSynthesisVoiceGender": NewType("AVSpeechSynthesisVoiceGender", int),
        "AVAudioSessionIOType": NewType("AVAudioSessionIOType", int),
        "AVMusicTrackLoopCount": NewType("AVMusicTrackLoopCount", int),
        "AVAudioUnitDistortionPreset": NewType("AVAudioUnitDistortionPreset", int),
        "AVAudioSessionPromptStyle": NewType("AVAudioSessionPromptStyle", int),
        "AVAudio3DMixingRenderingAlgorithm": NewType(
            "AVAudio3DMixingRenderingAlgorithm", int
        ),
        "AVAudio3DMixingPointSourceInHeadMode": NewType(
            "AVAudio3DMixingPointSourceInHeadMode", int
        ),
        "AVAudioVoiceProcessingSpeechActivityEvent": NewType(
            "AVAudioVoiceProcessingSpeechActivityEvent", int
        ),
        "AVAudioContentSource": NewType("AVAudioContentSource", int),
        "AVSpeechSynthesisPersonalVoiceAuthorizationStatus": NewType(
            "AVSpeechSynthesisPersonalVoiceAuthorizationStatus", int
        ),
        "AVAudioDynamicRangeControlConfiguration": NewType(
            "AVAudioDynamicRangeControlConfiguration", int
        ),
        "AVMusicSequenceLoadOptions": NewType("AVMusicSequenceLoadOptions", int),
        "AVSpeechSynthesisMarkerMark": NewType("AVSpeechSynthesisMarkerMark", int),
        "AVAudioSessionRouteChangeReason": NewType(
            "AVAudioSessionRouteChangeReason", int
        ),
        "AVAudioSessionInterruptionOptions": NewType(
            "AVAudioSessionInterruptionOptions", int
        ),
        "AVAudioSessionCategoryOptions": NewType("AVAudioSessionCategoryOptions", int),
        "AVAudioSessionSilenceSecondaryAudioHintType": NewType(
            "AVAudioSessionSilenceSecondaryAudioHintType", int
        ),
        "AVAudioEngineManualRenderingStatus": NewType(
            "AVAudioEngineManualRenderingStatus", int
        ),
        "AVAudioSessionInterruptionReason": NewType(
            "AVAudioSessionInterruptionReason", int
        ),
        "AVSpeechSynthesisVoiceQuality": NewType("AVSpeechSynthesisVoiceQuality", int),
        "AVMIDIControlChangeMessageType": NewType(
            "AVMIDIControlChangeMessageType", int
        ),
        "AVAudioSessionMicrophoneInjectionMode": NewType(
            "AVAudioSessionMicrophoneInjectionMode", int
        ),
        "AVAudioSessionRecordPermission": NewType(
            "AVAudioSessionRecordPermission", int
        ),
        "AVAudioCommonFormat": NewType("AVAudioCommonFormat", int),
        "AVAudioPlayerNodeBufferOptions": NewType(
            "AVAudioPlayerNodeBufferOptions", int
        ),
        "AVAudioSessionSetActiveOptions": NewType(
            "AVAudioSessionSetActiveOptions", int
        ),
        "AVAudioEngineManualRenderingMode": NewType(
            "AVAudioEngineManualRenderingMode", int
        ),
        "AVAudioSessionInterruptionType": NewType(
            "AVAudioSessionInterruptionType", int
        ),
        "AVAudioSessionPortOverride": NewType("AVAudioSessionPortOverride", int),
        "AVAudioUnitEQFilterType": NewType("AVAudioUnitEQFilterType", int),
        "AVAudioRoutingArbitrationCategory": NewType(
            "AVAudioRoutingArbitrationCategory", int
        ),
        "AVAudioPlayerNodeCompletionCallbackType": NewType(
            "AVAudioPlayerNodeCompletionCallbackType", int
        ),
        "AVSpeechSynthesisVoiceTraits": NewType("AVSpeechSynthesisVoiceTraits", int),
        "AVAudioApplicationRecordPermission": NewType(
            "AVAudioApplicationRecordPermission", int
        ),
        "AVAudioQuality": NewType("AVAudioQuality", int),
        "AVAudioSessionRouteSharingPolicy": NewType(
            "AVAudioSessionRouteSharingPolicy", int
        ),
        "AVAudioStereoOrientation": NewType("AVAudioStereoOrientation", int),
        "AVAudioConverterPrimeMethod": NewType("AVAudioConverterPrimeMethod", int),
        "AVAudioEnvironmentOutputType": NewType("AVAudioEnvironmentOutputType", int),
        "AVMIDIMetaEventType": NewType("AVMIDIMetaEventType", int),
        "AVAudioVoiceProcessingOtherAudioDuckingLevel": NewType(
            "AVAudioVoiceProcessingOtherAudioDuckingLevel", int
        ),
        "AVAudioConverterInputStatus": NewType("AVAudioConverterInputStatus", int),
        "AVAudioEngineManualRenderingError": NewType(
            "AVAudioEngineManualRenderingError", int
        ),
        "AVSpeechBoundary": NewType("AVSpeechBoundary", int),
        "AVAudioEnvironmentDistanceAttenuationModel": NewType(
            "AVAudioEnvironmentDistanceAttenuationModel", int
        ),
        "AVAudioUnitReverbPreset": NewType("AVAudioUnitReverbPreset", int),
        "AVAudioApplicationMicrophoneInjectionPermission": NewType(
            "AVAudioApplicationMicrophoneInjectionPermission", int
        ),
        "AVAudioSessionRenderingMode": NewType("AVAudioSessionRenderingMode", int),
        "AVAudio3DMixingSourceMode": NewType("AVAudio3DMixingSourceMode", int),
    }
)
misc.update({})
misc.update({})
functions = {
    "AVMakeBeatRange": (b"{_AVBeatRange=dd}dd",),
    "AVAudioMake3DPoint": (b"{AVAudio3DPoint=fff}fff",),
    "AVAudioMake3DVector": (b"{AVAudio3DPoint=fff}fff",),
    "AVAudioMake3DAngularOrientation": (b"{AVAudio3DAngularOrientation=fff}fff",),
    "AVAudioMake3DVectorOrientation": (
        b"{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}{AVAudio3DPoint=fff}{AVAudio3DPoint=fff}",
    ),
}
aliases = {
    "AVAudioSessionRouteSharingPolicyLongForm": "AVAudioSessionRouteSharingPolicyLongFormAudio",
    "AVMusicTimeStampEndOfTrack": "DBL_MAX",
    "AVLinearPCMIsNonInterleavedKey": "AVLinearPCMIsNonInterleaved",
}
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b"AVAudioApplication", b"isInputMuted", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioApplication",
        b"requestMicrophoneInjectionPermissionWithCompletionHandler:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"q"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioApplication",
        b"requestRecordPermissionWithCompletionHandler:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"Z"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioApplication",
        b"setInputMuteStateChangeHandler:error:",
        {
            "retval": {"type": b"Z"},
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"Z"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"Z"}},
                    }
                }
            },
        },
    )
    r(
        b"AVAudioApplication",
        b"setInputMuted:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(b"AVAudioChannelLayout", b"isEqual:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioConverter",
        b"convertToBuffer:error:withInputFromBlock:",
        {
            "arguments": {
                4: {
                    "callable": {
                        "retval": {"type": b"@"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"I"},
                            2: {"type": b"^q"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioConverter",
        b"convertToBuffer:fromBuffer:error:",
        {"retval": {"type": b"Z"}},
    )
    r(b"AVAudioConverter", b"dither", {"retval": {"type": b"Z"}})
    r(b"AVAudioConverter", b"downmix", {"retval": {"type": b"Z"}})
    r(b"AVAudioConverter", b"setDither:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVAudioConverter", b"setDownmix:", {"arguments": {2: {"type": b"Z"}}})
    r(
        b"AVAudioEngine",
        b"connectMIDI:to:format:block:",
        {
            "arguments": {
                5: {
                    "callable": {
                        "retval": {"type": b"i"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"q"},
                            2: {"type": b"C"},
                            3: {"type": b"q"},
                            4: {"type": b"^C"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioEngine",
        b"connectMIDI:to:format:eventListBlock:",
        {
            "arguments": {
                5: {
                    "callable": {
                        "retval": {"type": b"i"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"q"},
                            2: {"type": b"C"},
                            3: {
                                "type": b"^{MIDIEventList=iI[1{MIDIEventPacket=QI[64I]}]}"
                            },
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioEngine",
        b"connectMIDI:toNodes:format:block:",
        {
            "arguments": {
                5: {
                    "callable": {
                        "retval": {"type": b"i"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"q"},
                            2: {"type": b"C"},
                            3: {"type": b"q"},
                            4: {"type": b"^C"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioEngine",
        b"connectMIDI:toNodes:format:eventListBlock:",
        {
            "arguments": {
                5: {
                    "callable": {
                        "retval": {"type": b"i"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"q"},
                            2: {"type": b"C"},
                            3: {
                                "type": b"^{MIDIEventList=iI[1{MIDIEventPacket=QI[64I]}]}"
                            },
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioEngine",
        b"enableManualRenderingMode:format:maximumFrameCount:error:",
        {"retval": {"type": b"Z"}},
    )
    r(b"AVAudioEngine", b"isAutoShutdownEnabled", {"retval": {"type": b"Z"}})
    r(b"AVAudioEngine", b"isInManualRenderingMode", {"retval": {"type": b"Z"}})
    r(b"AVAudioEngine", b"isRunning", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioEngine",
        b"manualRenderingBlock",
        {
            "retval": {
                "callable": {
                    "retval": {"type": b"v"},
                    "arguments": {0: {"type": b"^v"}},
                }
            }
        },
    )
    r(b"AVAudioEngine", b"setAutoShutdownEnabled:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVAudioEngine", b"startAndReturnError:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioEnvironmentNode",
        b"isListenerHeadTrackingEnabled",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioEnvironmentNode",
        b"setListenerHeadTrackingEnabled:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(b"AVAudioEnvironmentReverbParameters", b"enable", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioEnvironmentReverbParameters",
        b"setEnable:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioFile",
        b"initForReading:commonFormat:interleaved:error:",
        {"arguments": {4: {"type": b"Z"}}},
    )
    r(
        b"AVAudioFile",
        b"initForWriting:settings:commonFormat:interleaved:error:",
        {"arguments": {5: {"type": b"Z"}}},
    )
    r(b"AVAudioFile", b"isOpen", {"retval": {"type": b"Z"}})
    r(b"AVAudioFile", b"readIntoBuffer:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioFile", b"readIntoBuffer:frameCount:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioFile", b"writeFromBuffer:error:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioFormat",
        b"initWithCommonFormat:sampleRate:channels:interleaved:",
        {"arguments": {5: {"type": b"Z"}}},
    )
    r(
        b"AVAudioFormat",
        b"initWithCommonFormat:sampleRate:interleaved:channelLayout:",
        {"arguments": {4: {"type": b"Z"}}},
    )
    r(b"AVAudioFormat", b"isEqual:", {"retval": {"type": b"Z"}})
    r(b"AVAudioFormat", b"isInterleaved", {"retval": {"type": b"Z"}})
    r(b"AVAudioFormat", b"isStandard", {"retval": {"type": b"Z"}})
    r(b"AVAudioIONode", b"isVoiceProcessingEnabled", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioIONode",
        b"setVoiceProcessingEnabled:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(b"AVAudioInputNode", b"isVoiceProcessingAGCEnabled", {"retval": {"type": b"Z"}})
    r(b"AVAudioInputNode", b"isVoiceProcessingBypassed", {"retval": {"type": b"Z"}})
    r(b"AVAudioInputNode", b"isVoiceProcessingInputMuted", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioInputNode",
        b"setManualRenderingInputPCMFormat:inputBlock:",
        {
            "retval": {"type": b"Z"},
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"{AudioBufferList=I[1{AudioBuffer=II^v}]}"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"I"}},
                    }
                }
            },
        },
    )
    r(
        b"AVAudioInputNode",
        b"setMutedSpeechActivityEventListener:",
        {
            "retval": {"type": b"Z"},
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"q"}},
                    }
                }
            },
        },
    )
    r(
        b"AVAudioInputNode",
        b"setVoiceProcessingAGCEnabled:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioInputNode",
        b"setVoiceProcessingBypassed:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioInputNode",
        b"setVoiceProcessingInputMuted:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioInputNode",
        b"setVoiceProcessingOtherAudioDuckingConfiguration:",
        {
            "arguments": {
                2: {
                    "type": b"{AVAudioVoiceProcessingOtherAudioDuckingConfiguration=Zq}"
                }
            }
        },
    )
    r(
        b"AVAudioInputNode",
        b"voiceProcessingOtherAudioDuckingConfiguration",
        {
            "retval": {
                "type": b"{AVAudioVoiceProcessingOtherAudioDuckingConfiguration=Zq}"
            }
        },
    )
    r(
        b"AVAudioNode",
        b"installTapOnBus:bufferSize:format:block:",
        {
            "arguments": {
                5: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioPCMBuffer",
        b"initWithPCMFormat:bufferListNoCopy:deallocator:",
        {
            "arguments": {
                4: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"^{AudioBufferList=I[1{AudioBuffer=II^v}]}"},
                        },
                    }
                }
            }
        },
    )
    r(b"AVAudioPlayer", b"enableRate", {"retval": {"type": b"Z"}})
    r(b"AVAudioPlayer", b"isMeteringEnabled", {"retval": {"type": b"Z"}})
    r(b"AVAudioPlayer", b"isPlaying", {"retval": {"type": b"Z"}})
    r(b"AVAudioPlayer", b"play", {"retval": {"type": b"Z"}})
    r(b"AVAudioPlayer", b"playAtTime:", {"retval": {"type": b"Z"}})
    r(b"AVAudioPlayer", b"prepareToPlay", {"retval": {"type": b"Z"}})
    r(b"AVAudioPlayer", b"setEnableRate:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVAudioPlayer", b"setMeteringEnabled:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVAudioPlayerNode", b"isPlaying", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioPlayerNode",
        b"scheduleBuffer:atTime:options:completionCallbackType:completionHandler:",
        {
            "arguments": {
                6: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"q"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioPlayerNode",
        b"scheduleBuffer:atTime:options:completionHandler:",
        {
            "arguments": {
                5: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioPlayerNode",
        b"scheduleBuffer:completionCallbackType:completionHandler:",
        {
            "arguments": {
                4: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"q"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioPlayerNode",
        b"scheduleBuffer:completionHandler:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioPlayerNode",
        b"scheduleFile:atTime:completionCallbackType:completionHandler:",
        {
            "arguments": {
                5: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"q"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioPlayerNode",
        b"scheduleFile:atTime:completionHandler:",
        {
            "arguments": {
                4: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioPlayerNode",
        b"scheduleSegment:startingFrame:frameCount:atTime:completionCallbackType:completionHandler:",
        {
            "arguments": {
                7: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"q"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioPlayerNode",
        b"scheduleSegment:startingFrame:frameCount:atTime:completionHandler:",
        {
            "arguments": {
                6: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}},
                    }
                }
            }
        },
    )
    r(b"AVAudioRecorder", b"deleteRecording", {"retval": {"type": b"Z"}})
    r(b"AVAudioRecorder", b"isMeteringEnabled", {"retval": {"type": b"Z"}})
    r(b"AVAudioRecorder", b"isRecording", {"retval": {"type": b"Z"}})
    r(b"AVAudioRecorder", b"prepareToRecord", {"retval": {"type": b"Z"}})
    r(b"AVAudioRecorder", b"record", {"retval": {"type": b"Z"}})
    r(b"AVAudioRecorder", b"recordAtTime:", {"retval": {"type": b"Z"}})
    r(b"AVAudioRecorder", b"recordAtTime:forDuration:", {"retval": {"type": b"Z"}})
    r(b"AVAudioRecorder", b"recordForDuration:", {"retval": {"type": b"Z"}})
    r(b"AVAudioRecorder", b"setMeteringEnabled:", {"arguments": {2: {"type": b"Z"}}})
    r(
        b"AVAudioRoutingArbiter",
        b"beginArbitrationWithCategory:completionHandler:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"Z"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
    r(b"AVAudioSequencer", b"isPlaying", {"retval": {"type": b"Z"}})
    r(b"AVAudioSequencer", b"loadFromData:options:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioSequencer", b"loadFromURL:options:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioSequencer", b"removeTrack:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioSequencer",
        b"setUserCallback:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"@"},
                            3: {"type": b"d"},
                        },
                    }
                }
            }
        },
    )
    r(b"AVAudioSequencer", b"startAndReturnError:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioSequencer",
        b"writeToURL:SMPTEResolution:replaceExisting:error:",
        {"retval": {"type": b"Z"}, "arguments": {4: {"type": b"Z"}}},
    )
    r(
        b"AVAudioSession",
        b"activateWithOptions:completionHandler:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"Z"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioSession",
        b"allowHapticsAndSystemSoundsDuringRecording",
        {"retval": {"type": b"Z"}},
    )
    r(b"AVAudioSession", b"inputIsAvailable", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"isEchoCancelledInputAvailable", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"isEchoCancelledInputEnabled", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"isInputAvailable", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"isInputGainSettable", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"isMicrophoneInjectionAvailable", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"isOtherAudioPlaying", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"isOutputMuted", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"overrideOutputAudioPort:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"prefersEchoCancelledInput", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioSession",
        b"prefersInterruptionOnRouteDisconnect",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSession",
        b"prefersNoInterruptionsFromSystemAlerts",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSession",
        b"requestRecordPermission:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"Z"}},
                    }
                }
            }
        },
    )
    r(
        b"AVAudioSession",
        b"secondaryAudioShouldBeSilencedHint",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSession",
        b"setActive:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioSession",
        b"setActive:withFlags:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioSession",
        b"setActive:withOptions:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioSession",
        b"setAggregatedIOPreference:error:",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSession",
        b"setAllowHapticsAndSystemSoundsDuringRecording:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(b"AVAudioSession", b"setCategory:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"setCategory:mode:options:error:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioSession",
        b"setCategory:mode:routeSharingPolicy:options:error:",
        {"retval": {"type": b"Z"}},
    )
    r(b"AVAudioSession", b"setCategory:withOptions:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"setInputDataSource:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"setInputGain:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"setMode:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioSession", b"setOutputDataSource:error:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioSession",
        b"setOutputMuted:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioSession",
        b"setPreferredHardwareSampleRate:error:",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSession",
        b"setPreferredIOBufferDuration:error:",
        {"retval": {"type": b"Z"}},
    )
    r(b"AVAudioSession", b"setPreferredInput:error:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioSession",
        b"setPreferredInputNumberOfChannels:error:",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSession",
        b"setPreferredInputOrientation:error:",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSession",
        b"setPreferredMicrophoneInjectionMode:error:",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSession",
        b"setPreferredOutputNumberOfChannels:error:",
        {"retval": {"type": b"Z"}},
    )
    r(b"AVAudioSession", b"setPreferredSampleRate:error:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioSession",
        b"setPrefersEchoCancelledInput:error:",
        {
            "retval": {"type": b"Z"},
            "arguments": {2: {"type": b"Z"}, 3: {"type_modifier": b"o"}},
        },
    )
    r(
        b"AVAudioSession",
        b"setPrefersInterruptionOnRouteDisconnect:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioSession",
        b"setPrefersNoInterruptionsFromSystemAlerts:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVAudioSession",
        b"setSupportsMultichannelContent:error:",
        {"retval": {"type": b"Z"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(b"AVAudioSession", b"supportsMultichannelContent", {"retval": {"type": b"Z"}})
    r(b"AVAudioSessionCapability", b"isEnabled", {"retval": {"type": b"Z"}})
    r(b"AVAudioSessionCapability", b"isSupported", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioSessionDataSourceDescription",
        b"setPreferredPolarPattern:error:",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSessionPortDescription",
        b"hasHardwareVoiceCallProcessing",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSessionPortDescription",
        b"isSpatialAudioEnabled",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSessionPortDescription",
        b"setPreferredDataSource:error:",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioSinkNode",
        b"initWithReceiverBlock:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"i"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {
                                "type": b"^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}"
                            },
                            2: {"type": b"I"},
                            3: {"type": b"^{AudioBufferList=I[1{AudioBuffer=II^v}]}"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioSourceNode",
        b"initWithFormat:renderBlock:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"i"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"^Z"},
                            2: {
                                "type": b"^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}"
                            },
                            3: {"type": b"I"},
                            4: {"type": b"^{AudioBufferList=I[1{AudioBuffer=II^v}]}"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVAudioSourceNode",
        b"initWithRenderBlock:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"i"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"^Z"},
                            2: {
                                "type": b"^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}"
                            },
                            3: {"type": b"I"},
                            4: {"type": b"^{AudioBufferList=I[1{AudioBuffer=II^v}]}"},
                        },
                    }
                }
            }
        },
    )
    r(b"AVAudioTime", b"isHostTimeValid", {"retval": {"type": b"Z"}})
    r(b"AVAudioTime", b"isSampleTimeValid", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioUnit",
        b"instantiateWithComponentDescription:options:completionHandler:",
        {
            "arguments": {
                4: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
    r(b"AVAudioUnit", b"loadAudioUnitPresetAtURL:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitComponent", b"hasCustomView", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitComponent", b"hasMIDIInput", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitComponent", b"hasMIDIOutput", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitComponent", b"isSandboxSafe", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitComponent", b"passesAUVal", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioUnitComponent",
        b"supportsNumberInputChannels:outputChannels:",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVAudioUnitComponentManager",
        b"componentsPassingTest:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"Z"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"o^Z"},
                        },
                    }
                }
            }
        },
    )
    r(b"AVAudioUnitEQFilterParameters", b"bypass", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioUnitEQFilterParameters",
        b"setBypass:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(b"AVAudioUnitEffect", b"bypass", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitEffect", b"setBypass:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVAudioUnitGenerator", b"bypass", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitGenerator", b"setBypass:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVAudioUnitSampler", b"loadAudioFilesAtURLs:error:", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitSampler", b"loadInstrumentAtURL:error:", {"retval": {"type": b"Z"}})
    r(
        b"AVAudioUnitSampler",
        b"loadSoundBankInstrumentAtURL:program:bankMSB:bankLSB:error:",
        {"retval": {"type": b"Z"}},
    )
    r(b"AVAudioUnitTimeEffect", b"bypass", {"retval": {"type": b"Z"}})
    r(b"AVAudioUnitTimeEffect", b"setBypass:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVMIDIPlayer", b"isPlaying", {"retval": {"type": b"Z"}})
    r(
        b"AVMIDIPlayer",
        b"play:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}},
                    }
                }
            }
        },
    )
    r(
        b"AVMusicTrack",
        b"enumerateEventsInRange:usingBlock:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"^d"},
                            3: {"type": b"^Z"},
                        },
                    }
                }
            }
        },
    )
    r(b"AVMusicTrack", b"isLoopingEnabled", {"retval": {"type": b"Z"}})
    r(b"AVMusicTrack", b"isMuted", {"retval": {"type": b"Z"}})
    r(b"AVMusicTrack", b"isSoloed", {"retval": {"type": b"Z"}})
    r(b"AVMusicTrack", b"setLoopingEnabled:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVMusicTrack", b"setMuted:", {"arguments": {2: {"type": b"Z"}}})
    r(b"AVMusicTrack", b"setSoloed:", {"arguments": {2: {"type": b"Z"}}})
    r(
        b"AVMusicTrack",
        b"setUsesAutomatedParameters:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(b"AVMusicTrack", b"usesAutomatedParameters", {"retval": {"type": b"Z"}})
    r(
        b"AVSpeechSynthesisProviderAudioUnit",
        b"setSpeechSynthesisOutputMetadataBlock:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"AVSpeechSynthesisProviderAudioUnit",
        b"speechSynthesisOutputMetadataBlock",
        {
            "retval": {
                "callable": {
                    "retval": {"type": b"v"},
                    "arguments": {0: {"type": b"^v"}},
                }
            }
        },
    )
    r(b"AVSpeechSynthesizer", b"continueSpeaking", {"retval": {"type": b"Z"}})
    r(b"AVSpeechSynthesizer", b"isPaused", {"retval": {"type": b"Z"}})
    r(b"AVSpeechSynthesizer", b"isSpeaking", {"retval": {"type": b"Z"}})
    r(b"AVSpeechSynthesizer", b"mixToTelephonyUplink", {"retval": {"type": b"Z"}})
    r(b"AVSpeechSynthesizer", b"pauseSpeakingAtBoundary:", {"retval": {"type": b"Z"}})
    r(
        b"AVSpeechSynthesizer",
        b"requestPersonalVoiceAuthorizationWithCompletionHandler:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"Q"}},
                    }
                }
            }
        },
    )
    r(
        b"AVSpeechSynthesizer",
        b"setMixToTelephonyUplink:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"AVSpeechSynthesizer",
        b"setUsesApplicationAudioSession:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(b"AVSpeechSynthesizer", b"stopSpeakingAtBoundary:", {"retval": {"type": b"Z"}})
    r(
        b"AVSpeechSynthesizer",
        b"usesApplicationAudioSession",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVSpeechSynthesizer",
        b"writeUtterance:toBufferCallback:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"@"}},
                    }
                }
            }
        },
    )
    r(
        b"AVSpeechSynthesizer",
        b"writeUtterance:toBufferCallback:toMarkerCallback:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"@"}},
                    }
                },
                4: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {0: {"type": b"^v"}, 1: {"type": b"@"}},
                    }
                },
            }
        },
    )
    r(
        b"AVSpeechUtterance",
        b"prefersAssistiveTechnologySettings",
        {"retval": {"type": b"Z"}},
    )
    r(
        b"AVSpeechUtterance",
        b"setPrefersAssistiveTechnologySettings:",
        {"arguments": {2: {"type": b"Z"}}},
    )
    r(
        b"NSObject",
        b"audioPlayerDecodeErrorDidOccur:error:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"@"}},
        },
    )
    r(
        b"NSObject",
        b"audioPlayerDidFinishPlaying:successfully:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"Z"}},
        },
    )
    r(
        b"NSObject",
        b"audioRecorderDidFinishRecording:successfully:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"Z"}},
        },
    )
    r(
        b"NSObject",
        b"audioRecorderEncodeErrorDidOccur:error:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"@"}},
        },
    )
    r(b"NSObject", b"beginInterruption", {"required": False, "retval": {"type": b"v"}})
    r(
        b"NSObject",
        b"destinationForMixer:bus:",
        {
            "required": True,
            "retval": {"type": b"@"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"Q"}},
        },
    )
    r(b"NSObject", b"endInterruption", {"required": False, "retval": {"type": b"v"}})
    r(
        b"NSObject",
        b"endInterruptionWithFlags:",
        {"required": False, "retval": {"type": b"v"}, "arguments": {2: {"type": b"Q"}}},
    )
    r(
        b"NSObject",
        b"inputIsAvailableChanged:",
        {"required": False, "retval": {"type": b"v"}, "arguments": {2: {"type": b"Z"}}},
    )
    r(b"NSObject", b"obstruction", {"required": True, "retval": {"type": b"f"}})
    r(b"NSObject", b"occlusion", {"required": True, "retval": {"type": b"f"}})
    r(b"NSObject", b"pan", {"required": True, "retval": {"type": b"f"}})
    r(
        b"NSObject",
        b"pointSourceInHeadMode",
        {"required": True, "retval": {"type": b"q"}},
    )
    r(
        b"NSObject",
        b"position",
        {"required": True, "retval": {"type": b"{AVAudio3DPoint=fff}"}},
    )
    r(b"NSObject", b"rate", {"required": True, "retval": {"type": b"f"}})
    r(b"NSObject", b"renderingAlgorithm", {"required": True, "retval": {"type": b"q"}})
    r(b"NSObject", b"reverbBlend", {"required": True, "retval": {"type": b"f"}})
    r(
        b"NSObject",
        b"setObstruction:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"f"}}},
    )
    r(
        b"NSObject",
        b"setOcclusion:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"f"}}},
    )
    r(
        b"NSObject",
        b"setPan:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"f"}}},
    )
    r(
        b"NSObject",
        b"setPointSourceInHeadMode:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"q"}}},
    )
    r(
        b"NSObject",
        b"setPosition:",
        {
            "required": True,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"{AVAudio3DPoint=fff}"}},
        },
    )
    r(
        b"NSObject",
        b"setRate:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"f"}}},
    )
    r(
        b"NSObject",
        b"setRenderingAlgorithm:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"q"}}},
    )
    r(
        b"NSObject",
        b"setReverbBlend:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"f"}}},
    )
    r(
        b"NSObject",
        b"setSourceMode:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"q"}}},
    )
    r(
        b"NSObject",
        b"setVolume:",
        {"required": True, "retval": {"type": b"v"}, "arguments": {2: {"type": b"f"}}},
    )
    r(b"NSObject", b"sourceMode", {"required": True, "retval": {"type": b"q"}})
    r(
        b"NSObject",
        b"speechSynthesizer:didCancelSpeechUtterance:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"@"}},
        },
    )
    r(
        b"NSObject",
        b"speechSynthesizer:didContinueSpeechUtterance:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"@"}},
        },
    )
    r(
        b"NSObject",
        b"speechSynthesizer:didFinishSpeechUtterance:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"@"}},
        },
    )
    r(
        b"NSObject",
        b"speechSynthesizer:didPauseSpeechUtterance:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"@"}},
        },
    )
    r(
        b"NSObject",
        b"speechSynthesizer:didStartSpeechUtterance:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"@"}},
        },
    )
    r(
        b"NSObject",
        b"speechSynthesizer:willSpeakMarker:utterance:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {2: {"type": b"@"}, 3: {"type": b"@"}, 4: {"type": b"@"}},
        },
    )
    r(
        b"NSObject",
        b"speechSynthesizer:willSpeakRangeOfSpeechString:utterance:",
        {
            "required": False,
            "retval": {"type": b"v"},
            "arguments": {
                2: {"type": b"@"},
                3: {"type": b"{_NSRange=QQ}"},
                4: {"type": b"@"},
            },
        },
    )
    r(b"NSObject", b"volume", {"required": True, "retval": {"type": b"f"}})
finally:
    objc._updatingMetadata(False)

objc.registerNewKeywordsFromSelector(
    "AVAUPresetEvent", b"initWithScope:element:dictionary:"
)
objc.registerNewKeywordsFromSelector("AVAudioChannelLayout", b"initWithLayout:")
objc.registerNewKeywordsFromSelector("AVAudioChannelLayout", b"initWithLayoutTag:")
objc.registerNewKeywordsFromSelector(
    "AVAudioCompressedBuffer", b"initWithFormat:packetCapacity:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioCompressedBuffer", b"initWithFormat:packetCapacity:maximumPacketSize:"
)
objc.registerNewKeywordsFromSelector("AVAudioConnectionPoint", b"initWithNode:bus:")
objc.registerNewKeywordsFromSelector("AVAudioConverter", b"initFromFormat:toFormat:")
objc.registerNewKeywordsFromSelector(
    "AVAudioFile", b"initForReading:commonFormat:interleaved:error:"
)
objc.registerNewKeywordsFromSelector("AVAudioFile", b"initForReading:error:")
objc.registerNewKeywordsFromSelector(
    "AVAudioFile", b"initForWriting:settings:commonFormat:interleaved:error:"
)
objc.registerNewKeywordsFromSelector("AVAudioFile", b"initForWriting:settings:error:")
objc.registerNewKeywordsFromSelector(
    "AVAudioFormat", b"initStandardFormatWithSampleRate:channelLayout:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioFormat", b"initStandardFormatWithSampleRate:channels:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioFormat", b"initWithCMAudioFormatDescription:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioFormat", b"initWithCommonFormat:sampleRate:channels:interleaved:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioFormat", b"initWithCommonFormat:sampleRate:interleaved:channelLayout:"
)
objc.registerNewKeywordsFromSelector("AVAudioFormat", b"initWithSettings:")
objc.registerNewKeywordsFromSelector("AVAudioFormat", b"initWithStreamDescription:")
objc.registerNewKeywordsFromSelector(
    "AVAudioFormat", b"initWithStreamDescription:channelLayout:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioPCMBuffer", b"initWithPCMFormat:bufferListNoCopy:deallocator:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioPCMBuffer", b"initWithPCMFormat:frameCapacity:"
)
objc.registerNewKeywordsFromSelector("AVAudioPlayer", b"initWithContentsOfURL:error:")
objc.registerNewKeywordsFromSelector(
    "AVAudioPlayer", b"initWithContentsOfURL:fileTypeHint:error:"
)
objc.registerNewKeywordsFromSelector("AVAudioPlayer", b"initWithData:error:")
objc.registerNewKeywordsFromSelector(
    "AVAudioPlayer", b"initWithData:fileTypeHint:error:"
)
objc.registerNewKeywordsFromSelector("AVAudioRecorder", b"initWithURL:format:error:")
objc.registerNewKeywordsFromSelector("AVAudioRecorder", b"initWithURL:settings:error:")
objc.registerNewKeywordsFromSelector("AVAudioSequencer", b"initWithAudioEngine:")
objc.registerNewKeywordsFromSelector("AVAudioSinkNode", b"initWithReceiverBlock:")
objc.registerNewKeywordsFromSelector(
    "AVAudioSourceNode", b"initWithFormat:renderBlock:"
)
objc.registerNewKeywordsFromSelector("AVAudioSourceNode", b"initWithRenderBlock:")
objc.registerNewKeywordsFromSelector(
    "AVAudioTime", b"initWithAudioTimeStamp:sampleRate:"
)
objc.registerNewKeywordsFromSelector("AVAudioTime", b"initWithHostTime:")
objc.registerNewKeywordsFromSelector(
    "AVAudioTime", b"initWithHostTime:sampleTime:atRate:"
)
objc.registerNewKeywordsFromSelector("AVAudioTime", b"initWithSampleTime:atRate:")
objc.registerNewKeywordsFromSelector("AVAudioUnitEQ", b"initWithNumberOfBands:")
objc.registerNewKeywordsFromSelector(
    "AVAudioUnitEffect", b"initWithAudioComponentDescription:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioUnitGenerator", b"initWithAudioComponentDescription:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioUnitMIDIInstrument", b"initWithAudioComponentDescription:"
)
objc.registerNewKeywordsFromSelector(
    "AVAudioUnitTimeEffect", b"initWithAudioComponentDescription:"
)
objc.registerNewKeywordsFromSelector(
    "AVExtendedNoteOnEvent", b"initWithMIDINote:velocity:groupID:duration:"
)
objc.registerNewKeywordsFromSelector(
    "AVExtendedNoteOnEvent", b"initWithMIDINote:velocity:instrumentID:groupID:duration:"
)
objc.registerNewKeywordsFromSelector("AVExtendedTempoEvent", b"initWithTempo:")
objc.registerNewKeywordsFromSelector(
    "AVMIDIChannelPressureEvent", b"initWithChannel:pressure:"
)
objc.registerNewKeywordsFromSelector(
    "AVMIDIControlChangeEvent", b"initWithChannel:messageType:value:"
)
objc.registerNewKeywordsFromSelector("AVMIDIMetaEvent", b"initWithType:data:")
objc.registerNewKeywordsFromSelector(
    "AVMIDINoteEvent", b"initWithChannel:key:velocity:duration:"
)
objc.registerNewKeywordsFromSelector("AVMIDIPitchBendEvent", b"initWithChannel:value:")
objc.registerNewKeywordsFromSelector(
    "AVMIDIPlayer", b"initWithContentsOfURL:soundBankURL:error:"
)
objc.registerNewKeywordsFromSelector(
    "AVMIDIPlayer", b"initWithData:soundBankURL:error:"
)
objc.registerNewKeywordsFromSelector(
    "AVMIDIPolyPressureEvent", b"initWithChannel:key:pressure:"
)
objc.registerNewKeywordsFromSelector(
    "AVMIDIProgramChangeEvent", b"initWithChannel:programNumber:"
)
objc.registerNewKeywordsFromSelector("AVMIDISysexEvent", b"initWithData:")
objc.registerNewKeywordsFromSelector("AVMusicUserEvent", b"initWithData:")
objc.registerNewKeywordsFromSelector(
    "AVParameterEvent", b"initWithParameterID:scope:element:value:"
)
objc.registerNewKeywordsFromSelector(
    "AVSpeechSynthesisMarker", b"initWithBookmarkName:atByteSampleOffset:"
)
objc.registerNewKeywordsFromSelector(
    "AVSpeechSynthesisMarker", b"initWithMarkerType:forTextRange:atByteSampleOffset:"
)
objc.registerNewKeywordsFromSelector(
    "AVSpeechSynthesisMarker", b"initWithParagraphRange:atByteSampleOffset:"
)
objc.registerNewKeywordsFromSelector(
    "AVSpeechSynthesisMarker", b"initWithPhonemeString:atByteSampleOffset:"
)
objc.registerNewKeywordsFromSelector(
    "AVSpeechSynthesisMarker", b"initWithSentenceRange:atByteSampleOffset:"
)
objc.registerNewKeywordsFromSelector(
    "AVSpeechSynthesisMarker", b"initWithWordRange:atByteSampleOffset:"
)
objc.registerNewKeywordsFromSelector(
    "AVSpeechSynthesisProviderRequest", b"initWithSSMLRepresentation:voice:"
)
objc.registerNewKeywordsFromSelector(
    "AVSpeechSynthesisProviderVoice",
    b"initWithName:identifier:primaryLanguages:supportedLanguages:",
)
objc.registerNewKeywordsFromSelector("AVSpeechUtterance", b"initWithAttributedString:")
objc.registerNewKeywordsFromSelector(
    "AVSpeechUtterance", b"initWithSSMLRepresentation:"
)
objc.registerNewKeywordsFromSelector("AVSpeechUtterance", b"initWithString:")
expressions = {}

# END OF FILE
