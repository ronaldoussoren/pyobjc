{
 "definitions": {
  "typed_enum": {
   "MKFeatureDisplayPriority": { "type": "f" },
   "MKAnnotationViewZPriority": { "type": "f" },
   "MKPointOfInterestCategory": { "type": "@", "type_name": "NSString" }
  },
  "enum": {
   "MKAnnotationViewZPriorityMax": { "value": 1000.0 },
   "MKAnnotationViewZPriorityDefaultSelected": { "value": 1000.0 },
   "MKAnnotationViewZPriorityDefaultUnselected": { "value": 500.0 },
   "MKAnnotationViewZPriorityMin": { "value": 0.0 },
   "MKFeatureVisibilityAdaptive": { "value": 0 },
   "MKFeatureVisibilityHidden": { "value": 1 },
   "MKFeatureVisibilityVisible": { "value": 2 },
   "MKFeatureDisplayPriorityRequired": { "value": 1000 },
   "MKFeatureDisplayPriorityDefaultHigh": { "value": 750 },
   "MKFeatureDisplayPriorityDefaultLow": { "value": 250 },
   "MKAnnotationViewCollisionModeRectangle": { "value": 0 },
   "MKAnnotationViewCollisionModeCircle": { "value": 1 },
   "MKDirectionsTransportTypeTransit": { "value": 4 },
   "MKMapTypeSatelliteFlyover": { "value": 3 },
   "MKMapTypeHybridFlyover": { "value": 4 },
   "MKMapTypeMutedStandard": { "value": 5 },
   "MKSearchCompletionFilterTypeLocationsAndQueries": { "value": 0 },
   "MKSearchCompletionFilterTypeLocationsOnly": { "value": 1 }
  },
  "externs": {
   "MKLaunchOptionsDirectionsModeTransit": { "typestr": "@" },
   "MKLaunchOptionsDirectionsModeDefault": { "typestr": "@" },
   "MKMapItemTypeIdentifier": { "typestr": "@" },
   "MKMapViewDefaultAnnotationViewReuseIdentifier": { "typestr": "@" },
   "MKMapViewDefaultClusterAnnotationViewReuseIdentifier": { "typestr": "@" }
  },
  "classes": {
   "NSValue": {
    "methods": [
     {
      "selector": "MKCoordinateSpanValue",
      "class_method": false,
      "retval": {"type_override": "{MKCoordinateSpan=dd}"}
     },
     {
      "selector": "valueWithMKCoordinateSpan:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKCoordinateSpan=dd}"}
      }
     }
    ]
   },
   "MKCircle": {
    "methods": [
     {
      "selector": "boundingMapRect",
      "class_method": false,
      "retval": { "type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}" }
     },
     {
      "selector": "circleWithMapRect:",
      "class_method": false,
      "args": {
       "0": { "type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}" }
      }
     }
    ]
   },
   "MKLocalPointsOfInterestRequest": {
    "methods": [
     {
      "selector": "initWithCoordinateRegion:",
      "class_method": false,
      "args": {
       "0": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
      }
     },
     {
      "selector": "region",
      "class_method": false,
      "retval": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
     }
    ]
   },
   "MKLocalSearchCompleter": {
    "methods": [
     {
      "class_method": false,
      "selector": "isSearching",
      "retval": { "type_override": "Z" }
     },
     {
      "class_method": false,
      "selector": "region",
      "retval": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
     },
     {
      "class_method": false,
      "selector": "setRegion:",
      "args": {
       "0": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
      }
     }
    ]
   },
   "MKLocalSearchResponse": {
    "methods": [
     {
      "class_method": false,
      "selector": "boundingRegion",
      "retval": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
     }
    ]
   },
   "MKMapView": {
    "methods": [
     {
      "selector": "visibleMapRect:",
      "class_method": false,
      "retval": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
     },
     {
      "selector": "setVisibleMapRect:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "setVisibleMapRect:animated:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "setVisibleMapRect:edgePadding:animated:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "mapRectThatFits:",
      "class_method": false,
      "retval": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"},
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "mapRectThatFits:edgePadding:",
      "class_method": false,
      "retval": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"},
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "region",
      "class_method": false,
      "retval": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
     },
     {
      "selector": "regionThatFits:",
      "class_method": false,
      "retval": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" },
      "args": {
       "0": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
      }
     },
     {
      "selector": "annotationsInMapRect:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "convertRect:toRegionFromView:",
      "class_method": false,
      "retval": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
     },
     {
      "selector": "convertRegion:toRectToView:",
      "class_method": false,
      "args": {
       "0": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
      }
     },
     {
      "selector": "setRegion:",
      "class_method": false,
      "args": {
       "0": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
      }
     },
     {
      "selector": "setRegion:animated:",
      "class_method": false,
      "args": {
       "0": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" },
       "1": { "type_override": "Z" }
      }
     },
     {
      "class_method": false,
      "selector": "showsTraffic",
      "retval": { "type_override": "Z" }
     },
     {
      "class_method": false,
      "selector": "setShowsTraffic:",
      "args": {
       "0": { "type_override": "Z" }
      }
     }
    ]
   },
   "MKDirections": {
     "methods": [
       {
         "args": {
	    "0": {
	      "callable": {
	        "arguments": {
	          "0": { "typestr": "^v" },
	          "1": { "typestr": "@" },
	          "2": { "typestr": "@" }
	        },
		"retval": { "typestr": "v" }
	      }
	    }
	 },
	 "class_method": false,
	 "selector": "calculateDirectionsWithCompletionHandler:"
       },
       {
         "args": {
	    "0": {
	      "callable": {
	        "arguments": {
	          "0": { "typestr": "^v" },
	          "1": { "typestr": "@" },
	          "2": { "typestr": "@" }
	        },
		"retval": { "typestr": "v" }
	      }
	    }
	 },
	 "class_method": false,
	 "selector": "calculateETAWithCompletionHandler:"
       }
     ]
   },
   "MKGeodesicPolyline": {
    "methods": [
     {
      "args": {
       "0": { "type_modifier": "n", "c_array_length_in_arg": 1, "type_override": "^{MKMapPoint=dd}" }
      },
      "class_method": true,
      "selector": "polylineWithPoints:count:"
     },
     {
      "args": {
       "0": { "type_modifier": "n", "c_array_length_in_arg": 1}
      },
      "class_method": true,
      "selector": "polylineWithCoordinates:count:"
     }
    ]
   },
   "MKLocalSearch": {
    "methods": [
     {
      "selector": "startWithCompletionHandler:",
      "class_method": false,
      "args": {
        "0": {
	  "callable": {
	    "arguments": {
	      "0": { "typestr": "^v" },
	      "1": { "typestr": "@" },
	      "2": { "typestr": "@" }
	    },
	    "retval": { "typestr": "v" }
	  }
	}
      }
     }
    ]
   },
   "MKMapSnapshotOptions": {
    "methods": [
     {
      "selector": "mapRect",
      "class_method": false,
      "retval": { "type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}" }
     },
     {
      "selector": "region",
      "class_method": false,
      "retval": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
     },
     {
      "selector": "setMapRect:",
      "class_method": false,
      "args": {
       "0": { "type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}" }
      }
     },
     {
      "selector": "setRegion:",
      "class_method": false,
      "args": {
       "0": { "type_override": "{MKCoordinateRegion={CLLocationCoordinate2D=dd}{MKCoordinateSpan=dd}}" }
      }
     }
    ]
   },
   "MKMapSnapshotter": {
    "methods": [
     {
      "args": {
        "0": {
	  "callable": {
	    "arguments": {
	      "0": { "typestr": "^v" },
	      "1": { "typestr": "@" },
	      "2": { "typestr": "@" }
	    },
	    "retval": { "typestr": "v" }
	  }
	}
      },
      "class_method": false,
      "selector": "startWithCompletionHandler:"
     },
     {
      "args": {
        "1": {
	  "callable": {
	    "arguments": {
	      "0": { "typestr": "^v" },
	      "1": { "typestr": "@" },
	      "2": { "typestr": "@" }
	    },
	    "retval": { "typestr": "v" }
	  }
	}
      },
      "class_method": false,
      "selector": "startWithQueue:completionHandler:"
     }
    ]
   },
   "MKOverlayRenderer": {
    "methods": [
     {
      "selector": "canDrawMapRect:zoomScale:",
      "class_method": false,
      "retval": {"type": "Z"},
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "drawMapRect:zoomScale:inContext:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "mapPointForPoint:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapPoint=dd}"}
      }
     },
     {
      "selector": "mapRectForRect:",
      "class_method": false,
      "retval": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
     },
     {
      "selector": "pointForMapPoint:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapPoint=dd}"}
      }
     },
     {
      "selector": "rectForMapRect:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "setNeedsDisplayInMapRect:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     },
     {
      "selector": "setNeedsDisplayInMapRect:zoomScale:",
      "class_method": false,
      "args": {
       "0": {"type_override": "{MKMapRect={MKMapPoint=dd}{MKMapSize=dd}}"}
      }
     }
    ]
   },
   "MKMultiPoint": {
    "methods": [
     {
      "args": {
       "0": { "type_modifier": "o", "c_array_length_in_arg": 1 }
      },
      "class_method": false,
      "selector": "getCoordinates:range:"
     },
     {
       "class_method": false,
       "retval": { "c_array_of_variable_length": true, "type_override": "^{MKMapPoint=dd}" },
       "selector": "points"
     }
    ]
   },
   "MKPolygon": {
    "methods": [
     {
      "args": {
       "0": { "type_modifier": "n", "c_array_length_in_arg": 1, "type_override": "^{MKMapPoint=dd}" }
      },
      "class_method": true,
      "selector": "polygonWithPoints:count:"
     },
     {
      "args": {
       "0": { "type_modifier": "n", "c_array_length_in_arg": 1, "type_override": "^{MKMapPoint=dd}" }
      },
      "class_method": true,
      "selector": "polygonWithPoints:count:interiorPolygons:"
     },
     {
      "args": {
       "0": { "type_modifier": "n", "c_array_length_in_arg": 1 }
      },
      "class_method": true,
      "selector": "polygonWithCoordinates:count:"
     },
     {
      "args": {
       "0": { "type_modifier": "n", "c_array_length_in_arg": 1 }
      },
      "class_method": true,
      "selector": "polygonWithCoordinates:count:interiorPolygons:"
     }
    ]
   },
   "MKPolyline": {
    "methods": [
     {
      "args": {
       "0": { "type_modifier": "n", "c_array_length_in_arg": 1, "type_override": "^{MKMapPoint=dd}" }
      },
      "class_method": true,
      "selector": "polylineWithPoints:count:"
     },
     {
      "args": {
       "0": { "type_modifier": "n", "c_array_length_in_arg": 1 }
      },
      "class_method": true,
      "selector": "polylineWithCoordinates:count:"
     }
    ]
   },
   "MKGeoJSONDecoder": {
     "methods": [
       {
          "args": {
	   "1": { "type_modifier": "o" }
	  },
	  "class_method": false,
	  "selector": "geoJSONObjectsWithData:error:"
       }
     ]
   },
   "MKTileOverlay": {
     "methods": [
       {
        "selector":  "URLForTilePath:",
        "class_method": false,
        "args": {
         "0": {"type_override": "{MKTileOverlayPath=qqqd}"}
        }
       },
       {
          "args": {
            "0": {"type_override": "{MKTileOverlayPath=qqqd}"},
	    "1": {
	      "callable": {
	        "arguments": {
	          "0": { "typestr": "^v" },
	          "1": { "typestr": "@" },
	          "2": { "typestr": "@" }
	        },
		"retval": { "typestr": "v" }
	      }
	    }
	  },
	  "class_method": false,
	  "selector": "loadTileAtPath:result:"
       }
     ]
   }
  },
  "formal_protocols": {},
  "functions": {
   "MKMapRectDivide": {
    "args": {
     "1": { "type_modifier": "o" },
     "2": { "type_modifier": "o" }
    }
   }
  },
  "informal_protocols": {}
 }
}
