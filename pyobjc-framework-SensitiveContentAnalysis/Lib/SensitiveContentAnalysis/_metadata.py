# This file is generated by objective.metadata
#
# Last update: Wed Jul 23 22:04:03 2025
#
# flake8: noqa

import objc, sys
from typing import NewType

if sys.maxsize > 2**32:

    def sel32or64(a, b):
        return b

else:

    def sel32or64(a, b):
        return a


if objc.arch == "arm64":

    def selAorI(a, b):
        return a

else:

    def selAorI(a, b):
        return b


misc = {}
constants = """$$"""
enums = """$SCSensitivityAnalysisPolicyDescriptiveInterventions@2$SCSensitivityAnalysisPolicyDisabled@0$SCSensitivityAnalysisPolicySimpleInterventions@1$SCVideoStreamAnalyzerStreamDirectionIncoming@2$SCVideoStreamAnalyzerStreamDirectionOutgoing@1$"""
misc.update(
    {
        "SCVideoStreamAnalyzerStreamDirection": NewType(
            "SCVideoStreamAnalyzerStreamDirection", int
        ),
        "SCSensitivityAnalysisPolicy": NewType("SCSensitivityAnalysisPolicy", int),
    }
)
misc.update({})
misc.update({})
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b"SCSensitivityAnalysis", b"isSensitive", {"retval": {"type": b"Z"}})
    r(
        b"SCSensitivityAnalysis",
        b"shouldIndicateSensitivity",
        {"retval": {"type": b"Z"}},
    )
    r(b"SCSensitivityAnalysis", b"shouldInterruptVideo", {"retval": {"type": b"Z"}})
    r(b"SCSensitivityAnalysis", b"shouldMuteAudio", {"retval": {"type": b"Z"}})
    r(
        b"SCSensitivityAnalyzer",
        b"analyzeCGImage:completionHandler:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"SCSensitivityAnalyzer",
        b"analyzeImageFile:completionHandler:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"SCSensitivityAnalyzer",
        b"analyzeVideoFile:completionHandler:",
        {
            "arguments": {
                3: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"SCVideoStreamAnalyzer",
        b"analysisChangedHandler",
        {
            "retval": {
                "callable": {
                    "retval": {"type": b"v"},
                    "arguments": {0: {"type": b"^v"}},
                }
            }
        },
    )
    r(
        b"SCVideoStreamAnalyzer",
        b"beginAnalysisOfCaptureDeviceInput:error:",
        {"retval": {"type": b"Z"}, "arguments": {3: {"type_modifier": b"o"}}},
    )
    r(
        b"SCVideoStreamAnalyzer",
        b"beginAnalysisOfDecompressionSession:error:",
        {"retval": {"type": b"Z"}, "arguments": {3: {"type_modifier": b"o"}}},
    )
    r(
        b"SCVideoStreamAnalyzer",
        b"initWithParticipantUUID:streamDirection:error:",
        {"arguments": {4: {"type_modifier": b"o"}}},
    )
    r(
        b"SCVideoStreamAnalyzer",
        b"setAnalysisChangedHandler:",
        {
            "arguments": {
                2: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"@"},
                        },
                    }
                }
            }
        },
    )
finally:
    objc._updatingMetadata(False)

objc.registerNewKeywordsFromSelector(
    "SCVideoStreamAnalyzer", b"initWithParticipantUUID:streamDirection:error:"
)
expressions = {}

# END OF FILE
