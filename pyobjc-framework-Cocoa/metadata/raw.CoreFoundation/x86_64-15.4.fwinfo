//             GENERATED FILE DO NOT EDIT
//
// This file was generated by objective.metadata
// Last update: Sat Mar  1 10:53:28 2025
{
 "arch": "x86_64",
 "definitions": {
  "aliases": {
   "CFCalendarIdentifier": "CFStringRef",
   "CFDateFormatterKey": "CFStringRef",
   "CFErrorDomain": "CFStringRef",
   "CFLocaleIdentifier": "CFStringRef",
   "CFLocaleKey": "CFStringRef",
   "CFNotificationName": "CFStringRef",
   "CFNumberFormatterKey": "CFStringRef",
   "CFRunLoopMode": "CFStringRef",
   "CFStreamPropertyKey": "CFStringRef",
   "CFXMLTreeRef": "CFTreeRef",
   "CF_EXTENSIBLE_STRING_ENUM": "_CF_TYPED_EXTENSIBLE_ENUM",
   "CF_STRING_ENUM": "_CF_TYPED_ENUM",
   "CF_TYPED_ENUM": "_CF_TYPED_ENUM",
   "CF_TYPED_EXTENSIBLE_ENUM": "_CF_TYPED_EXTENSIBLE_ENUM",
   "CGFLOAT_EPSILON": "DBL_EPSILON",
   "CGFLOAT_MAX": "DBL_MAX",
   "CGFLOAT_MIN": "DBL_MIN",
   "CGFLOAT_TYPE": "double",
   "kCFBookmarkResolutionWithoutMountingMask": "kCFURLBookmarkResolutionWithoutMountingMask",
   "kCFBookmarkResolutionWithoutUIMask": "kCFURLBookmarkResolutionWithoutUIMask",
   "kCFFileSecurityRemoveACL": "_FILESEC_REMOVE_ACL"
  },
  "called_definitions": {},
  "cftypes": {
   "CFAllocatorRef": {
    "gettypeid_func": "CFAllocatorGetTypeID",
    "typestr": "^{__CFAllocator=}"
   },
   "CFArrayRef": {
    "gettypeid_func": "CFArrayGetTypeID",
    "typestr": "^{__CFArray=}"
   },
   "CFAttributedStringRef": {
    "gettypeid_func": "CFAttributedStringGetTypeID",
    "typestr": "^{__CFAttributedString=}"
   },
   "CFBagRef": {
    "gettypeid_func": "CFBagGetTypeID",
    "typestr": "^{__CFBag=}"
   },
   "CFBinaryHeapRef": {
    "gettypeid_func": "CFBinaryHeapGetTypeID",
    "typestr": "^{__CFBinaryHeap=}"
   },
   "CFBitVectorRef": {
    "gettypeid_func": "CFBitVectorGetTypeID",
    "typestr": "^{__CFBitVector=}"
   },
   "CFBooleanRef": {
    "gettypeid_func": "CFBooleanGetTypeID",
    "typestr": "^{__CFBoolean=}"
   },
   "CFBundleRef": {
    "gettypeid_func": "CFBundleGetTypeID",
    "typestr": "^{__CFBundle=}"
   },
   "CFCalendarRef": {
    "gettypeid_func": "CFCalendarGetTypeID",
    "typestr": "^{__CFCalendar=}"
   },
   "CFCharacterSetRef": {
    "gettypeid_func": "CFCharacterSetGetTypeID",
    "typestr": "^{__CFCharacterSet=}"
   },
   "CFDataRef": {
    "gettypeid_func": "CFDataGetTypeID",
    "typestr": "^{__CFData=}"
   },
   "CFDateFormatterRef": {
    "gettypeid_func": "CFDateFormatterGetTypeID",
    "typestr": "^{__CFDateFormatter=}"
   },
   "CFDateRef": {
    "gettypeid_func": "CFDateGetTypeID",
    "typestr": "^{__CFDate=}"
   },
   "CFDictionaryRef": {
    "gettypeid_func": "CFDictionaryGetTypeID",
    "typestr": "^{__CFDictionary=}"
   },
   "CFErrorRef": {
    "gettypeid_func": "CFErrorGetTypeID",
    "typestr": "^{__CFError=}"
   },
   "CFFileDescriptorRef": {
    "gettypeid_func": "CFFileDescriptorGetTypeID",
    "typestr": "^{__CFFileDescriptor=}"
   },
   "CFFileSecurityRef": {
    "gettypeid_func": "CFFileSecurityGetTypeID",
    "typestr": "^{__CFFileSecurity=}"
   },
   "CFLocaleRef": {
    "gettypeid_func": "CFLocaleGetTypeID",
    "typestr": "^{__CFLocale=}"
   },
   "CFMachPortRef": {
    "gettypeid_func": "CFMachPortGetTypeID",
    "typestr": "^{__CFMachPort=}"
   },
   "CFMessagePortRef": {
    "gettypeid_func": "CFMessagePortGetTypeID",
    "typestr": "^{__CFMessagePort=}"
   },
   "CFMutableArrayRef": {
    "typestr": "^{__CFArray=}"
   },
   "CFMutableAttributedStringRef": {
    "typestr": "^{__CFAttributedString=}"
   },
   "CFMutableBagRef": {
    "typestr": "^{__CFBag=}"
   },
   "CFMutableBitVectorRef": {
    "typestr": "^{__CFBitVector=}"
   },
   "CFMutableCharacterSetRef": {
    "typestr": "^{__CFCharacterSet=}"
   },
   "CFMutableDataRef": {
    "typestr": "^{__CFData=}"
   },
   "CFMutableDictionaryRef": {
    "typestr": "^{__CFDictionary=}"
   },
   "CFMutableSetRef": {
    "typestr": "^{__CFSet=}"
   },
   "CFMutableStringRef": {
    "typestr": "^{__CFString=}"
   },
   "CFNotificationCenterRef": {
    "gettypeid_func": "CFNotificationCenterGetTypeID",
    "typestr": "^{__CFNotificationCenter=}"
   },
   "CFNullRef": {
    "gettypeid_func": "CFNullGetTypeID",
    "typestr": "^{__CFNull=}"
   },
   "CFNumberFormatterRef": {
    "gettypeid_func": "CFNumberFormatterGetTypeID",
    "typestr": "^{__CFNumberFormatter=}"
   },
   "CFNumberRef": {
    "gettypeid_func": "CFNumberGetTypeID",
    "typestr": "^{__CFNumber=}"
   },
   "CFPlugInInstanceRef": {
    "gettypeid_func": "CFPlugInInstanceGetTypeID",
    "typestr": "^{__CFPlugInInstance=}"
   },
   "CFPlugInRef": {
    "gettypeid_func": "CFPlugInGetTypeID",
    "typestr": "^{__CFBundle=}"
   },
   "CFReadStreamRef": {
    "gettypeid_func": "CFReadStreamGetTypeID",
    "typestr": "^{__CFReadStream=}"
   },
   "CFRunLoopObserverRef": {
    "gettypeid_func": "CFRunLoopObserverGetTypeID",
    "typestr": "^{__CFRunLoopObserver=}"
   },
   "CFRunLoopRef": {
    "gettypeid_func": "CFRunLoopGetTypeID",
    "typestr": "^{__CFRunLoop=}"
   },
   "CFRunLoopSourceRef": {
    "gettypeid_func": "CFRunLoopSourceGetTypeID",
    "typestr": "^{__CFRunLoopSource=}"
   },
   "CFRunLoopTimerRef": {
    "gettypeid_func": "CFRunLoopTimerGetTypeID",
    "typestr": "^{__CFRunLoopTimer=}"
   },
   "CFSetRef": {
    "gettypeid_func": "CFSetGetTypeID",
    "typestr": "^{__CFSet=}"
   },
   "CFSocketRef": {
    "gettypeid_func": "CFSocketGetTypeID",
    "typestr": "^{__CFSocket=}"
   },
   "CFStringRef": {
    "gettypeid_func": "CFStringGetTypeID",
    "typestr": "^{__CFString=}"
   },
   "CFStringTokenizerRef": {
    "gettypeid_func": "CFStringTokenizerGetTypeID",
    "typestr": "^{__CFStringTokenizer=}"
   },
   "CFTimeZoneRef": {
    "gettypeid_func": "CFTimeZoneGetTypeID",
    "typestr": "^{__CFTimeZone=}"
   },
   "CFTreeRef": {
    "gettypeid_func": "CFTreeGetTypeID",
    "typestr": "^{__CFTree=}"
   },
   "CFURLEnumeratorRef": {
    "gettypeid_func": "CFURLEnumeratorGetTypeID",
    "typestr": "^{__CFURLEnumerator=}"
   },
   "CFURLRef": {
    "gettypeid_func": "CFURLGetTypeID",
    "typestr": "^{__CFURL=}"
   },
   "CFUUIDRef": {
    "gettypeid_func": "CFUUIDGetTypeID",
    "typestr": "^{__CFUUID=}"
   },
   "CFUserNotificationRef": {
    "gettypeid_func": "CFUserNotificationGetTypeID",
    "typestr": "^{__CFUserNotification=}"
   },
   "CFWriteStreamRef": {
    "gettypeid_func": "CFWriteStreamGetTypeID",
    "typestr": "^{__CFWriteStream=}"
   },
   "CFXMLNodeRef": {
    "gettypeid_func": "CFXMLNodeGetTypeID",
    "typestr": "^{__CFXMLNode=}"
   },
   "CFXMLParserRef": {
    "gettypeid_func": "CFXMLParserGetTypeID",
    "typestr": "^{__CFXMLParser=}"
   }
  },
  "classes": {},
  "enum": {
   "CFByteOrderBigEndian": 2,
   "CFByteOrderLittleEndian": 1,
   "CFByteOrderUnknown": 0,
   "CFNotificationSuspensionBehaviorCoalesce": 2,
   "CFNotificationSuspensionBehaviorDeliverImmediately": 4,
   "CFNotificationSuspensionBehaviorDrop": 1,
   "CFNotificationSuspensionBehaviorHold": 3,
   "CF_HAS_TYPED_ALLOCATOR": 0,
   "CF_USE_OSBYTEORDER_H": 1,
   "CGFLOAT_DEFINED": 1,
   "CGFLOAT_IS_DOUBLE": 1,
   "CGRectMaxXEdge": 2,
   "CGRectMaxYEdge": 3,
   "CGRectMinXEdge": 0,
   "CGRectMinYEdge": 1,
   "CGVECTOR_DEFINED": 1,
   "COREFOUNDATION_CFPLUGINCOM_SEPARATE": 1,
   "FALSE": 0,
   "ISA_PTRAUTH_DISCRIMINATOR": 27361,
   "TRUE": 1,
   "kCFBookmarkResolutionWithoutMountingMask": 512,
   "kCFBookmarkResolutionWithoutUIMask": 256,
   "kCFBundleExecutableArchitectureARM64": 16777228,
   "kCFBundleExecutableArchitectureI386": 7,
   "kCFBundleExecutableArchitecturePPC": 18,
   "kCFBundleExecutableArchitecturePPC64": 16777234,
   "kCFBundleExecutableArchitectureX86_64": 16777223,
   "kCFCalendarComponentsWrap": 1,
   "kCFCalendarUnitDay": 16,
   "kCFCalendarUnitDayOfYear": 65536,
   "kCFCalendarUnitEra": 2,
   "kCFCalendarUnitHour": 32,
   "kCFCalendarUnitMinute": 64,
   "kCFCalendarUnitMonth": 8,
   "kCFCalendarUnitQuarter": 2048,
   "kCFCalendarUnitSecond": 128,
   "kCFCalendarUnitWeek": 256,
   "kCFCalendarUnitWeekOfMonth": 4096,
   "kCFCalendarUnitWeekOfYear": 8192,
   "kCFCalendarUnitWeekday": 512,
   "kCFCalendarUnitWeekdayOrdinal": 1024,
   "kCFCalendarUnitYear": 4,
   "kCFCalendarUnitYearForWeekOfYear": 16384,
   "kCFCharacterSetAlphaNumeric": 10,
   "kCFCharacterSetCapitalizedLetter": 13,
   "kCFCharacterSetControl": 1,
   "kCFCharacterSetDecimalDigit": 4,
   "kCFCharacterSetDecomposable": 9,
   "kCFCharacterSetIllegal": 12,
   "kCFCharacterSetLetter": 5,
   "kCFCharacterSetLowercaseLetter": 6,
   "kCFCharacterSetNewline": 15,
   "kCFCharacterSetNonBase": 8,
   "kCFCharacterSetPunctuation": 11,
   "kCFCharacterSetSymbol": 14,
   "kCFCharacterSetUppercaseLetter": 7,
   "kCFCharacterSetWhitespace": 2,
   "kCFCharacterSetWhitespaceAndNewline": 3,
   "kCFCompareAnchored": 8,
   "kCFCompareBackwards": 4,
   "kCFCompareCaseInsensitive": 1,
   "kCFCompareDiacriticInsensitive": 128,
   "kCFCompareEqualTo": 0,
   "kCFCompareForcedOrdering": 512,
   "kCFCompareGreaterThan": 1,
   "kCFCompareLessThan": -1,
   "kCFCompareLocalized": 32,
   "kCFCompareNonliteral": 16,
   "kCFCompareNumerically": 64,
   "kCFCompareWidthInsensitive": 256,
   "kCFCoreFoundationVersionNumber10_10_2": 1152,
   "kCFCoreFoundationVersionNumber10_10_Max": 1199,
   "kCFCoreFoundationVersionNumber10_11": 1253,
   "kCFCoreFoundationVersionNumber10_11_Max": 1299,
   "kCFDataSearchAnchored": 2,
   "kCFDataSearchBackwards": 1,
   "kCFDateFormatterFullStyle": 4,
   "kCFDateFormatterLongStyle": 3,
   "kCFDateFormatterMediumStyle": 2,
   "kCFDateFormatterNoStyle": 0,
   "kCFDateFormatterShortStyle": 1,
   "kCFFileDescriptorReadCallBack": 1,
   "kCFFileDescriptorWriteCallBack": 2,
   "kCFFileSecurityClearAccessControlList": 32,
   "kCFFileSecurityClearGroup": 2,
   "kCFFileSecurityClearGroupUUID": 16,
   "kCFFileSecurityClearMode": 4,
   "kCFFileSecurityClearOwner": 1,
   "kCFFileSecurityClearOwnerUUID": 8,
   "kCFGregorianAllUnits": 16777215,
   "kCFGregorianUnitsDays": 4,
   "kCFGregorianUnitsHours": 8,
   "kCFGregorianUnitsMinutes": 16,
   "kCFGregorianUnitsMonths": 2,
   "kCFGregorianUnitsSeconds": 32,
   "kCFGregorianUnitsYears": 1,
   "kCFISO8601DateFormatWithColonSeparatorInTime": 512,
   "kCFISO8601DateFormatWithColonSeparatorInTimeZone": 1024,
   "kCFISO8601DateFormatWithDashSeparatorInDate": 256,
   "kCFISO8601DateFormatWithDay": 16,
   "kCFISO8601DateFormatWithFractionalSeconds": 2048,
   "kCFISO8601DateFormatWithFullDate": 275,
   "kCFISO8601DateFormatWithFullTime": 1632,
   "kCFISO8601DateFormatWithInternetDateTime": 1907,
   "kCFISO8601DateFormatWithMonth": 2,
   "kCFISO8601DateFormatWithSpaceBetweenDateAndTime": 128,
   "kCFISO8601DateFormatWithTime": 32,
   "kCFISO8601DateFormatWithTimeZone": 64,
   "kCFISO8601DateFormatWithWeekOfYear": 4,
   "kCFISO8601DateFormatWithYear": 1,
   "kCFLocaleLanguageDirectionBottomToTop": 4,
   "kCFLocaleLanguageDirectionLeftToRight": 1,
   "kCFLocaleLanguageDirectionRightToLeft": 2,
   "kCFLocaleLanguageDirectionTopToBottom": 3,
   "kCFLocaleLanguageDirectionUnknown": 0,
   "kCFMessagePortBecameInvalidError": -5,
   "kCFMessagePortIsInvalid": -3,
   "kCFMessagePortReceiveTimeout": -2,
   "kCFMessagePortSendTimeout": -1,
   "kCFMessagePortSuccess": 0,
   "kCFMessagePortTransportError": -4,
   "kCFNotificationDeliverImmediately": 1,
   "kCFNotificationPostToAllSessions": 2,
   "kCFNumberCFIndexType": 14,
   "kCFNumberCGFloatType": 16,
   "kCFNumberCharType": 7,
   "kCFNumberDoubleType": 13,
   "kCFNumberFloat32Type": 5,
   "kCFNumberFloat64Type": 6,
   "kCFNumberFloatType": 12,
   "kCFNumberFormatterCurrencyAccountingStyle": 10,
   "kCFNumberFormatterCurrencyISOCodeStyle": 8,
   "kCFNumberFormatterCurrencyPluralStyle": 9,
   "kCFNumberFormatterCurrencyStyle": 2,
   "kCFNumberFormatterDecimalStyle": 1,
   "kCFNumberFormatterNoStyle": 0,
   "kCFNumberFormatterOrdinalStyle": 6,
   "kCFNumberFormatterPadAfterPrefix": 1,
   "kCFNumberFormatterPadAfterSuffix": 3,
   "kCFNumberFormatterPadBeforePrefix": 0,
   "kCFNumberFormatterPadBeforeSuffix": 2,
   "kCFNumberFormatterParseIntegersOnly": 1,
   "kCFNumberFormatterPercentStyle": 3,
   "kCFNumberFormatterRoundCeiling": 0,
   "kCFNumberFormatterRoundDown": 2,
   "kCFNumberFormatterRoundFloor": 1,
   "kCFNumberFormatterRoundHalfDown": 5,
   "kCFNumberFormatterRoundHalfEven": 4,
   "kCFNumberFormatterRoundHalfUp": 6,
   "kCFNumberFormatterRoundUp": 3,
   "kCFNumberFormatterScientificStyle": 4,
   "kCFNumberFormatterSpellOutStyle": 5,
   "kCFNumberIntType": 9,
   "kCFNumberLongLongType": 11,
   "kCFNumberLongType": 10,
   "kCFNumberMaxType": 16,
   "kCFNumberNSIntegerType": 15,
   "kCFNumberSInt16Type": 2,
   "kCFNumberSInt32Type": 3,
   "kCFNumberSInt64Type": 4,
   "kCFNumberSInt8Type": 1,
   "kCFNumberShortType": 8,
   "kCFPropertyListBinaryFormat_v1_0": 200,
   "kCFPropertyListImmutable": 0,
   "kCFPropertyListMutableContainers": 1,
   "kCFPropertyListMutableContainersAndLeaves": 2,
   "kCFPropertyListOpenStepFormat": 1,
   "kCFPropertyListReadCorruptError": 3840,
   "kCFPropertyListReadStreamError": 3842,
   "kCFPropertyListReadUnknownVersionError": 3841,
   "kCFPropertyListWriteStreamError": 3851,
   "kCFPropertyListXMLFormat_v1_0": 100,
   "kCFRunLoopAfterWaiting": 64,
   "kCFRunLoopAllActivities": 268435455,
   "kCFRunLoopBeforeSources": 4,
   "kCFRunLoopBeforeTimers": 2,
   "kCFRunLoopBeforeWaiting": 32,
   "kCFRunLoopEntry": 1,
   "kCFRunLoopExit": 128,
   "kCFRunLoopRunFinished": 1,
   "kCFRunLoopRunHandledSource": 4,
   "kCFRunLoopRunStopped": 2,
   "kCFRunLoopRunTimedOut": 3,
   "kCFSocketAcceptCallBack": 2,
   "kCFSocketAutomaticallyReenableAcceptCallBack": 2,
   "kCFSocketAutomaticallyReenableDataCallBack": 3,
   "kCFSocketAutomaticallyReenableReadCallBack": 1,
   "kCFSocketAutomaticallyReenableWriteCallBack": 8,
   "kCFSocketCloseOnInvalidate": 128,
   "kCFSocketConnectCallBack": 4,
   "kCFSocketDataCallBack": 3,
   "kCFSocketError": -1,
   "kCFSocketLeaveErrors": 64,
   "kCFSocketNoCallBack": 0,
   "kCFSocketReadCallBack": 1,
   "kCFSocketSuccess": 0,
   "kCFSocketTimeout": -2,
   "kCFSocketWriteCallBack": 8,
   "kCFStreamErrorDomainCustom": -1,
   "kCFStreamErrorDomainMacOSStatus": 2,
   "kCFStreamErrorDomainPOSIX": 1,
   "kCFStreamEventCanAcceptBytes": 4,
   "kCFStreamEventEndEncountered": 16,
   "kCFStreamEventErrorOccurred": 8,
   "kCFStreamEventHasBytesAvailable": 2,
   "kCFStreamEventNone": 0,
   "kCFStreamEventOpenCompleted": 1,
   "kCFStreamStatusAtEnd": 5,
   "kCFStreamStatusClosed": 6,
   "kCFStreamStatusError": 7,
   "kCFStreamStatusNotOpen": 0,
   "kCFStreamStatusOpen": 2,
   "kCFStreamStatusOpening": 1,
   "kCFStreamStatusReading": 3,
   "kCFStreamStatusWriting": 4,
   "kCFStringEncodingANSEL": 1537,
   "kCFStringEncodingASCII": 1536,
   "kCFStringEncodingBig5": 2563,
   "kCFStringEncodingBig5_E": 2569,
   "kCFStringEncodingBig5_HKSCS_1999": 2566,
   "kCFStringEncodingCNS_11643_92_P1": 1617,
   "kCFStringEncodingCNS_11643_92_P2": 1618,
   "kCFStringEncodingCNS_11643_92_P3": 1619,
   "kCFStringEncodingDOSArabic": 1049,
   "kCFStringEncodingDOSBalticRim": 1030,
   "kCFStringEncodingDOSCanadianFrench": 1048,
   "kCFStringEncodingDOSChineseSimplif": 1057,
   "kCFStringEncodingDOSChineseTrad": 1059,
   "kCFStringEncodingDOSCyrillic": 1043,
   "kCFStringEncodingDOSGreek": 1029,
   "kCFStringEncodingDOSGreek1": 1041,
   "kCFStringEncodingDOSGreek2": 1052,
   "kCFStringEncodingDOSHebrew": 1047,
   "kCFStringEncodingDOSIcelandic": 1046,
   "kCFStringEncodingDOSJapanese": 1056,
   "kCFStringEncodingDOSKorean": 1058,
   "kCFStringEncodingDOSLatin1": 1040,
   "kCFStringEncodingDOSLatin2": 1042,
   "kCFStringEncodingDOSLatinUS": 1024,
   "kCFStringEncodingDOSNordic": 1050,
   "kCFStringEncodingDOSPortuguese": 1045,
   "kCFStringEncodingDOSRussian": 1051,
   "kCFStringEncodingDOSThai": 1053,
   "kCFStringEncodingDOSTurkish": 1044,
   "kCFStringEncodingEBCDIC_CP037": 3074,
   "kCFStringEncodingEBCDIC_US": 3073,
   "kCFStringEncodingEUC_CN": 2352,
   "kCFStringEncodingEUC_JP": 2336,
   "kCFStringEncodingEUC_KR": 2368,
   "kCFStringEncodingEUC_TW": 2353,
   "kCFStringEncodingGBK_95": 1585,
   "kCFStringEncodingGB_18030_2000": 1586,
   "kCFStringEncodingGB_2312_80": 1584,
   "kCFStringEncodingHZ_GB_2312": 2565,
   "kCFStringEncodingISOLatin1": 513,
   "kCFStringEncodingISOLatin10": 528,
   "kCFStringEncodingISOLatin2": 514,
   "kCFStringEncodingISOLatin3": 515,
   "kCFStringEncodingISOLatin4": 516,
   "kCFStringEncodingISOLatin5": 521,
   "kCFStringEncodingISOLatin6": 522,
   "kCFStringEncodingISOLatin7": 525,
   "kCFStringEncodingISOLatin8": 526,
   "kCFStringEncodingISOLatin9": 527,
   "kCFStringEncodingISOLatinArabic": 518,
   "kCFStringEncodingISOLatinCyrillic": 517,
   "kCFStringEncodingISOLatinGreek": 519,
   "kCFStringEncodingISOLatinHebrew": 520,
   "kCFStringEncodingISOLatinThai": 523,
   "kCFStringEncodingISO_2022_CN": 2096,
   "kCFStringEncodingISO_2022_CN_EXT": 2097,
   "kCFStringEncodingISO_2022_JP": 2080,
   "kCFStringEncodingISO_2022_JP_1": 2082,
   "kCFStringEncodingISO_2022_JP_2": 2081,
   "kCFStringEncodingISO_2022_JP_3": 2083,
   "kCFStringEncodingISO_2022_KR": 2112,
   "kCFStringEncodingInvalidId": 4294967295,
   "kCFStringEncodingJIS_C6226_78": 1572,
   "kCFStringEncodingJIS_X0201_76": 1568,
   "kCFStringEncodingJIS_X0208_83": 1569,
   "kCFStringEncodingJIS_X0208_90": 1570,
   "kCFStringEncodingJIS_X0212_90": 1571,
   "kCFStringEncodingKOI8_R": 2562,
   "kCFStringEncodingKOI8_U": 2568,
   "kCFStringEncodingKSC_5601_87": 1600,
   "kCFStringEncodingKSC_5601_92_Johab": 1601,
   "kCFStringEncodingMacArabic": 4,
   "kCFStringEncodingMacArmenian": 24,
   "kCFStringEncodingMacBengali": 13,
   "kCFStringEncodingMacBurmese": 19,
   "kCFStringEncodingMacCeltic": 39,
   "kCFStringEncodingMacCentralEurRoman": 29,
   "kCFStringEncodingMacChineseSimp": 25,
   "kCFStringEncodingMacChineseTrad": 2,
   "kCFStringEncodingMacCroatian": 36,
   "kCFStringEncodingMacCyrillic": 7,
   "kCFStringEncodingMacDevanagari": 9,
   "kCFStringEncodingMacDingbats": 34,
   "kCFStringEncodingMacEthiopic": 28,
   "kCFStringEncodingMacExtArabic": 31,
   "kCFStringEncodingMacFarsi": 140,
   "kCFStringEncodingMacGaelic": 40,
   "kCFStringEncodingMacGeorgian": 23,
   "kCFStringEncodingMacGreek": 6,
   "kCFStringEncodingMacGujarati": 11,
   "kCFStringEncodingMacGurmukhi": 10,
   "kCFStringEncodingMacHFS": 255,
   "kCFStringEncodingMacHebrew": 5,
   "kCFStringEncodingMacIcelandic": 37,
   "kCFStringEncodingMacInuit": 236,
   "kCFStringEncodingMacJapanese": 1,
   "kCFStringEncodingMacKannada": 16,
   "kCFStringEncodingMacKhmer": 20,
   "kCFStringEncodingMacKorean": 3,
   "kCFStringEncodingMacLaotian": 22,
   "kCFStringEncodingMacMalayalam": 17,
   "kCFStringEncodingMacMongolian": 27,
   "kCFStringEncodingMacOriya": 12,
   "kCFStringEncodingMacRoman": 0,
   "kCFStringEncodingMacRomanLatin1": 2564,
   "kCFStringEncodingMacRomanian": 38,
   "kCFStringEncodingMacSinhalese": 18,
   "kCFStringEncodingMacSymbol": 33,
   "kCFStringEncodingMacTamil": 14,
   "kCFStringEncodingMacTelugu": 15,
   "kCFStringEncodingMacThai": 21,
   "kCFStringEncodingMacTibetan": 26,
   "kCFStringEncodingMacTurkish": 35,
   "kCFStringEncodingMacUkrainian": 152,
   "kCFStringEncodingMacVT100": 252,
   "kCFStringEncodingMacVietnamese": 30,
   "kCFStringEncodingNextStepJapanese": 2818,
   "kCFStringEncodingNextStepLatin": 2817,
   "kCFStringEncodingNonLossyASCII": 3071,
   "kCFStringEncodingShiftJIS": 2561,
   "kCFStringEncodingShiftJIS_X0213": 1576,
   "kCFStringEncodingShiftJIS_X0213_00": 1576,
   "kCFStringEncodingShiftJIS_X0213_MenKuTen": 1577,
   "kCFStringEncodingUTF16": 256,
   "kCFStringEncodingUTF16BE": 268435712,
   "kCFStringEncodingUTF16LE": 335544576,
   "kCFStringEncodingUTF32": 201326848,
   "kCFStringEncodingUTF32BE": 402653440,
   "kCFStringEncodingUTF32LE": 469762304,
   "kCFStringEncodingUTF7": 67109120,
   "kCFStringEncodingUTF7_IMAP": 2576,
   "kCFStringEncodingUTF8": 134217984,
   "kCFStringEncodingUnicode": 256,
   "kCFStringEncodingVISCII": 2567,
   "kCFStringEncodingWindowsArabic": 1286,
   "kCFStringEncodingWindowsBalticRim": 1287,
   "kCFStringEncodingWindowsCyrillic": 1282,
   "kCFStringEncodingWindowsGreek": 1283,
   "kCFStringEncodingWindowsHebrew": 1285,
   "kCFStringEncodingWindowsKoreanJohab": 1296,
   "kCFStringEncodingWindowsLatin1": 1280,
   "kCFStringEncodingWindowsLatin2": 1281,
   "kCFStringEncodingWindowsLatin5": 1284,
   "kCFStringEncodingWindowsVietnamese": 1288,
   "kCFStringNormalizationFormC": 2,
   "kCFStringNormalizationFormD": 0,
   "kCFStringNormalizationFormKC": 3,
   "kCFStringNormalizationFormKD": 1,
   "kCFStringTokenizerAttributeLanguage": 131072,
   "kCFStringTokenizerAttributeLatinTranscription": 65536,
   "kCFStringTokenizerTokenHasDerivedSubTokensMask": 4,
   "kCFStringTokenizerTokenHasHasNumbersMask": 8,
   "kCFStringTokenizerTokenHasNonLettersMask": 16,
   "kCFStringTokenizerTokenHasSubTokensMask": 2,
   "kCFStringTokenizerTokenIsCJWordMask": 32,
   "kCFStringTokenizerTokenNone": 0,
   "kCFStringTokenizerTokenNormal": 1,
   "kCFStringTokenizerUnitLineBreak": 3,
   "kCFStringTokenizerUnitParagraph": 2,
   "kCFStringTokenizerUnitSentence": 1,
   "kCFStringTokenizerUnitWord": 0,
   "kCFStringTokenizerUnitWordBoundary": 4,
   "kCFTimeZoneNameStyleDaylightSaving": 2,
   "kCFTimeZoneNameStyleGeneric": 4,
   "kCFTimeZoneNameStyleShortDaylightSaving": 3,
   "kCFTimeZoneNameStyleShortGeneric": 5,
   "kCFTimeZoneNameStyleShortStandard": 1,
   "kCFTimeZoneNameStyleStandard": 0,
   "kCFURLBookmarkCreationMinimalBookmarkMask": 512,
   "kCFURLBookmarkCreationPreferFileIDResolutionMask": 256,
   "kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess": 4096,
   "kCFURLBookmarkCreationSuitableForBookmarkFile": 1024,
   "kCFURLBookmarkCreationWithSecurityScope": 2048,
   "kCFURLBookmarkCreationWithoutImplicitSecurityScope": 536870912,
   "kCFURLBookmarkResolutionWithSecurityScope": 1024,
   "kCFURLBookmarkResolutionWithoutImplicitStartAccessing": 32768,
   "kCFURLBookmarkResolutionWithoutMountingMask": 512,
   "kCFURLBookmarkResolutionWithoutUIMask": 256,
   "kCFURLComponentFragment": 12,
   "kCFURLComponentHost": 8,
   "kCFURLComponentNetLocation": 2,
   "kCFURLComponentParameterString": 10,
   "kCFURLComponentPassword": 6,
   "kCFURLComponentPath": 3,
   "kCFURLComponentPort": 9,
   "kCFURLComponentQuery": 11,
   "kCFURLComponentResourceSpecifier": 4,
   "kCFURLComponentScheme": 1,
   "kCFURLComponentUser": 5,
   "kCFURLComponentUserInfo": 7,
   "kCFURLEnumeratorDefaultBehavior": 0,
   "kCFURLEnumeratorDescendRecursively": 1,
   "kCFURLEnumeratorDirectoryPostOrderSuccess": 4,
   "kCFURLEnumeratorEnd": 2,
   "kCFURLEnumeratorError": 3,
   "kCFURLEnumeratorGenerateFileReferenceURLs": 4,
   "kCFURLEnumeratorGenerateRelativePathURLs": 64,
   "kCFURLEnumeratorIncludeDirectoriesPostOrder": 32,
   "kCFURLEnumeratorIncludeDirectoriesPreOrder": 16,
   "kCFURLEnumeratorSkipInvisibles": 2,
   "kCFURLEnumeratorSkipPackageContents": 8,
   "kCFURLEnumeratorSuccess": 1,
   "kCFURLHFSPathStyle": 1,
   "kCFURLImproperArgumentsError": -15,
   "kCFURLPOSIXPathStyle": 0,
   "kCFURLPropertyKeyUnavailableError": -17,
   "kCFURLRemoteHostUnavailableError": -14,
   "kCFURLResourceAccessViolationError": -13,
   "kCFURLResourceNotFoundError": -12,
   "kCFURLTimeoutError": -18,
   "kCFURLUnknownError": -10,
   "kCFURLUnknownPropertyKeyError": -16,
   "kCFURLUnknownSchemeError": -11,
   "kCFURLWindowsPathStyle": 2,
   "kCFUserNotificationAlternateResponse": 1,
   "kCFUserNotificationCancelResponse": 3,
   "kCFUserNotificationCautionAlertLevel": 2,
   "kCFUserNotificationDefaultResponse": 0,
   "kCFUserNotificationNoDefaultButtonFlag": 32,
   "kCFUserNotificationNoteAlertLevel": 1,
   "kCFUserNotificationOtherResponse": 2,
   "kCFUserNotificationPlainAlertLevel": 3,
   "kCFUserNotificationStopAlertLevel": 0,
   "kCFUserNotificationUseRadioButtonsFlag": 64,
   "kCFXMLEntityTypeCharacter": 4,
   "kCFXMLEntityTypeParameter": 0,
   "kCFXMLEntityTypeParsedExternal": 2,
   "kCFXMLEntityTypeParsedInternal": 1,
   "kCFXMLEntityTypeUnparsed": 3,
   "kCFXMLErrorElementlessDocument": 11,
   "kCFXMLErrorEncodingConversionFailure": 3,
   "kCFXMLErrorMalformedCDSect": 7,
   "kCFXMLErrorMalformedCharacterReference": 13,
   "kCFXMLErrorMalformedCloseTag": 8,
   "kCFXMLErrorMalformedComment": 12,
   "kCFXMLErrorMalformedDTD": 5,
   "kCFXMLErrorMalformedDocument": 10,
   "kCFXMLErrorMalformedName": 6,
   "kCFXMLErrorMalformedParsedCharacterData": 14,
   "kCFXMLErrorMalformedProcessingInstruction": 4,
   "kCFXMLErrorMalformedStartTag": 9,
   "kCFXMLErrorNoData": 15,
   "kCFXMLErrorUnexpectedEOF": 1,
   "kCFXMLErrorUnknownEncoding": 2,
   "kCFXMLNodeCurrentVersion": 1,
   "kCFXMLNodeTypeAttribute": 3,
   "kCFXMLNodeTypeAttributeListDeclaration": 15,
   "kCFXMLNodeTypeCDATASection": 7,
   "kCFXMLNodeTypeComment": 5,
   "kCFXMLNodeTypeDocument": 1,
   "kCFXMLNodeTypeDocumentFragment": 8,
   "kCFXMLNodeTypeDocumentType": 11,
   "kCFXMLNodeTypeElement": 2,
   "kCFXMLNodeTypeElementTypeDeclaration": 14,
   "kCFXMLNodeTypeEntity": 9,
   "kCFXMLNodeTypeEntityReference": 10,
   "kCFXMLNodeTypeNotation": 13,
   "kCFXMLNodeTypeProcessingInstruction": 4,
   "kCFXMLNodeTypeText": 6,
   "kCFXMLNodeTypeWhitespace": 12,
   "kCFXMLParserAddImpliedAttributes": 32,
   "kCFXMLParserAllOptions": 16777215,
   "kCFXMLParserNoOptions": 0,
   "kCFXMLParserReplacePhysicalEntities": 4,
   "kCFXMLParserResolveExternalEntities": 16,
   "kCFXMLParserSkipMetaData": 2,
   "kCFXMLParserSkipWhitespace": 8,
   "kCFXMLParserValidateDocument": 1,
   "kCFXMLStatusParseInProgress": -1,
   "kCFXMLStatusParseNotBegun": -2,
   "kCFXMLStatusParseSuccessful": 0
  },
  "enum_type": {
   "CFCalendarUnit": {
    "type": "Q"
   },
   "CFCharacterSetPredefinedSet": {
    "type": "q"
   },
   "CFComparisonResult": {
    "type": "q"
   },
   "CFDataSearchFlags": {
    "type": "Q"
   },
   "CFDateFormatterStyle": {
    "type": "q"
   },
   "CFFileSecurityClearOptions": {
    "type": "Q"
   },
   "CFGregorianUnitFlags": {
    "type": "Q"
   },
   "CFISO8601DateFormatOptions": {
    "type": "Q"
   },
   "CFLocaleLanguageDirection": {
    "type": "q"
   },
   "CFNotificationSuspensionBehavior": {
    "type": "q"
   },
   "CFNumberFormatterOptionFlags": {
    "type": "Q"
   },
   "CFNumberFormatterPadPosition": {
    "type": "q"
   },
   "CFNumberFormatterRoundingMode": {
    "type": "q"
   },
   "CFNumberFormatterStyle": {
    "type": "q"
   },
   "CFNumberType": {
    "type": "q"
   },
   "CFPropertyListFormat": {
    "type": "q"
   },
   "CFPropertyListMutabilityOptions": {
    "type": "Q"
   },
   "CFRunLoopActivity": {
    "type": "Q"
   },
   "CFRunLoopRunResult": {
    "type": "i"
   },
   "CFSocketCallBackType": {
    "type": "Q"
   },
   "CFSocketError": {
    "type": "q"
   },
   "CFStreamErrorDomain": {
    "type": "q"
   },
   "CFStreamEventType": {
    "type": "Q"
   },
   "CFStreamStatus": {
    "type": "q"
   },
   "CFStringBuiltInEncodings": {
    "type": "I"
   },
   "CFStringCompareFlags": {
    "type": "Q"
   },
   "CFStringEncodings": {
    "type": "q"
   },
   "CFStringNormalizationForm": {
    "type": "q"
   },
   "CFStringTokenizerTokenType": {
    "type": "Q"
   },
   "CFTimeZoneNameStyle": {
    "type": "q"
   },
   "CFURLBookmarkCreationOptions": {
    "type": "Q"
   },
   "CFURLBookmarkResolutionOptions": {
    "type": "Q"
   },
   "CFURLComponentType": {
    "type": "q"
   },
   "CFURLEnumeratorOptions": {
    "type": "Q"
   },
   "CFURLEnumeratorResult": {
    "type": "q"
   },
   "CFURLError": {
    "type": "q"
   },
   "CFURLPathStyle": {
    "type": "q"
   },
   "CFXMLEntityTypeCode": {
    "type": "q"
   },
   "CFXMLNodeTypeCode": {
    "type": "q"
   },
   "CFXMLParserOptions": {
    "type": "Q"
   },
   "CFXMLParserStatusCode": {
    "type": "q"
   },
   "CGRectEdge": {
    "type": "I"
   },
   "__CFByteOrder": {
    "type": "I"
   }
  },
  "expressions": {},
  "externs": {
   "kCFAbsoluteTimeIntervalSince1904": {
    "typestr": "d"
   },
   "kCFAbsoluteTimeIntervalSince1970": {
    "typestr": "d"
   },
   "kCFAllocatorDefault": {
    "typestr": "^{__CFAllocator=}"
   },
   "kCFAllocatorMalloc": {
    "typestr": "^{__CFAllocator=}"
   },
   "kCFAllocatorMallocZone": {
    "typestr": "^{__CFAllocator=}"
   },
   "kCFAllocatorNull": {
    "typestr": "^{__CFAllocator=}"
   },
   "kCFAllocatorSystemDefault": {
    "typestr": "^{__CFAllocator=}"
   },
   "kCFAllocatorUseContext": {
    "typestr": "^{__CFAllocator=}"
   },
   "kCFBooleanFalse": {
    "typestr": "^{__CFBoolean=}"
   },
   "kCFBooleanTrue": {
    "typestr": "^{__CFBoolean=}"
   },
   "kCFBuddhistCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFBundleDevelopmentRegionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFBundleExecutableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFBundleIdentifierKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFBundleInfoDictionaryVersionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFBundleLocalizationsKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFBundleNameKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFBundleVersionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFChineseCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFCopyStringBagCallBacks": {
    "typestr": "{CFBagCallBacks=q^?^?^?^?^?}"
   },
   "kCFCopyStringDictionaryKeyCallBacks": {
    "typestr": "{CFDictionaryKeyCallBacks=q^?^?^?^?^?}"
   },
   "kCFCopyStringSetCallBacks": {
    "typestr": "{CFSetCallBacks=q^?^?^?^?^?}"
   },
   "kCFCoreFoundationVersionNumber": {
    "typestr": "d"
   },
   "kCFDateFormatterAMSymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterCalendarName": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterDefaultDate": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterDefaultFormat": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterDoesRelativeDateFormattingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterEraSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterGregorianStartDate": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterIsLenient": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterLongEraSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterMonthSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterPMSymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterQuarterSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterShortMonthSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterShortQuarterSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterShortStandaloneMonthSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterShortStandaloneQuarterSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterShortStandaloneWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterShortWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterStandaloneMonthSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterStandaloneQuarterSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterStandaloneWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterTimeZone": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterTwoDigitStartDate": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterVeryShortMonthSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterVeryShortStandaloneMonthSymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterVeryShortStandaloneWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterVeryShortWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFDateFormatterWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorDescriptionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorDomainCocoa": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorDomainMach": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorDomainOSStatus": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorDomainPOSIX": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorFilePathKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorLocalizedDescriptionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorLocalizedFailureKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorLocalizedFailureReasonKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorLocalizedRecoverySuggestionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorURLKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFErrorUnderlyingErrorKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFGregorianCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFHebrewCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFISO8601Calendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFIndianCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFIslamicCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFIslamicCivilCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFIslamicTabularCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFIslamicUmmAlQuraCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFJapaneseCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleAlternateQuotationBeginDelimiterKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleAlternateQuotationEndDelimiterKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleCalendarIdentifier": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleCollationIdentifier": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleCollatorIdentifier": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleCountryCode": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleCurrencyCode": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleCurrencySymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleCurrentLocaleDidChangeNotification": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleDecimalSeparator": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleExemplarCharacterSet": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleGroupingSeparator": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleIdentifier": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleLanguageCode": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleMeasurementSystem": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleQuotationBeginDelimiterKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleQuotationEndDelimiterKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleScriptCode": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleUsesMetricSystem": {
    "typestr": "^{__CFString=}"
   },
   "kCFLocaleVariantCode": {
    "typestr": "^{__CFString=}"
   },
   "kCFNull": {
    "typestr": "^{__CFNull=}"
   },
   "kCFNumberFormatterAlwaysShowDecimalSeparator": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterCurrencyCode": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterCurrencyDecimalSeparator": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterCurrencyGroupingSeparator": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterCurrencySymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterDecimalSeparator": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterDefaultFormat": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterExponentSymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterFormatWidth": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterGroupingSeparator": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterGroupingSize": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterInfinitySymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterInternationalCurrencySymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterIsLenient": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMaxFractionDigits": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMaxIntegerDigits": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMaxSignificantDigits": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMinFractionDigits": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMinGroupingDigits": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMinIntegerDigits": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMinSignificantDigits": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMinusSign": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterMultiplier": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterNaNSymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterNegativePrefix": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterNegativeSuffix": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterPaddingCharacter": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterPaddingPosition": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterPerMillSymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterPercentSymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterPlusSign": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterPositivePrefix": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterPositiveSuffix": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterRoundingIncrement": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterRoundingMode": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterSecondaryGroupingSize": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterUseGroupingSeparator": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterUseSignificantDigits": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberFormatterZeroSymbol": {
    "typestr": "^{__CFString=}"
   },
   "kCFNumberNaN": {
    "typestr": "^{__CFNumber=}"
   },
   "kCFNumberNegativeInfinity": {
    "typestr": "^{__CFNumber=}"
   },
   "kCFNumberPositiveInfinity": {
    "typestr": "^{__CFNumber=}"
   },
   "kCFPersianCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFPlugInDynamicRegisterFunctionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFPlugInDynamicRegistrationKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFPlugInFactoriesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFPlugInTypesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFPlugInUnloadFunctionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFPreferencesAnyApplication": {
    "typestr": "^{__CFString=}"
   },
   "kCFPreferencesAnyHost": {
    "typestr": "^{__CFString=}"
   },
   "kCFPreferencesAnyUser": {
    "typestr": "^{__CFString=}"
   },
   "kCFPreferencesCurrentApplication": {
    "typestr": "^{__CFString=}"
   },
   "kCFPreferencesCurrentHost": {
    "typestr": "^{__CFString=}"
   },
   "kCFPreferencesCurrentUser": {
    "typestr": "^{__CFString=}"
   },
   "kCFRepublicOfChinaCalendar": {
    "typestr": "^{__CFString=}"
   },
   "kCFRunLoopCommonModes": {
    "typestr": "^{__CFString=}"
   },
   "kCFRunLoopDefaultMode": {
    "typestr": "^{__CFString=}"
   },
   "kCFSocketCommandKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFSocketErrorKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFSocketNameKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFSocketRegisterCommand": {
    "typestr": "^{__CFString=}"
   },
   "kCFSocketResultKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFSocketRetrieveCommand": {
    "typestr": "^{__CFString=}"
   },
   "kCFSocketValueKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamErrorDomainSOCKS": {
    "typestr": "i"
   },
   "kCFStreamErrorDomainSSL": {
    "typestr": "i"
   },
   "kCFStreamPropertyAppendToFile": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertyDataWritten": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertyFileCurrentOffset": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySOCKSPassword": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySOCKSProxy": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySOCKSProxyHost": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySOCKSProxyPort": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySOCKSUser": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySOCKSVersion": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertyShouldCloseNativeSocket": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySocketNativeHandle": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySocketRemoteHostName": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySocketRemotePortNumber": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamPropertySocketSecurityLevel": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamSocketSOCKSVersion4": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamSocketSOCKSVersion5": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamSocketSecurityLevelNegotiatedSSL": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamSocketSecurityLevelNone": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamSocketSecurityLevelSSLv2": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamSocketSecurityLevelSSLv3": {
    "typestr": "^{__CFString=}"
   },
   "kCFStreamSocketSecurityLevelTLSv1": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringBinaryHeapCallBacks": {
    "typestr": "{CFBinaryHeapCallBacks=q^?^?^?^?}"
   },
   "kCFStringTransformFullwidthHalfwidth": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformHiraganaKatakana": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformLatinArabic": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformLatinCyrillic": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformLatinGreek": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformLatinHangul": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformLatinHebrew": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformLatinHiragana": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformLatinKatakana": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformLatinThai": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformMandarinLatin": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformStripCombiningMarks": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformStripDiacritics": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformToLatin": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformToUnicodeName": {
    "typestr": "^{__CFString=}"
   },
   "kCFStringTransformToXMLHex": {
    "typestr": "^{__CFString=}"
   },
   "kCFTimeZoneSystemTimeZoneDidChangeNotification": {
    "typestr": "^{__CFString=}"
   },
   "kCFTypeArrayCallBacks": {
    "typestr": "{CFArrayCallBacks=q^?^?^?^?}"
   },
   "kCFTypeBagCallBacks": {
    "typestr": "{CFBagCallBacks=q^?^?^?^?^?}"
   },
   "kCFTypeDictionaryKeyCallBacks": {
    "typestr": "{CFDictionaryKeyCallBacks=q^?^?^?^?^?}"
   },
   "kCFTypeDictionaryValueCallBacks": {
    "typestr": "{CFDictionaryValueCallBacks=q^?^?^?^?}"
   },
   "kCFTypeSetCallBacks": {
    "typestr": "{CFSetCallBacks=q^?^?^?^?^?}"
   },
   "kCFURLAddedToDirectoryDateKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLApplicationIsScriptableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLAttributeModificationDateKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLCanonicalPathKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLContentAccessDateKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLContentModificationDateKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLCreationDateKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLCustomIconKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLDirectoryEntryCountKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLDocumentIdentifierKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLEffectiveIconKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileAllocatedSizeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileContentIdentifierKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileDirectoryContents": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileExists": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileIdentifierKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileLastModificationTime": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileLength": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileOwnerID": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFilePOSIXMode": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileProtectionComplete": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileProtectionCompleteUnlessOpen": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileProtectionCompleteUntilFirstUserAuthentication": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileProtectionCompleteWhenUserInactive": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileProtectionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileProtectionNone": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceIdentifierKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeBlockSpecial": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeCharacterSpecial": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeDirectory": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeNamedPipe": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeRegular": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeSocket": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeSymbolicLink": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileResourceTypeUnknown": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileSecurityKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLFileSizeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLGenerationIdentifierKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLHTTPStatusCode": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLHTTPStatusLine": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLHasHiddenExtensionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsAliasFileKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsApplicationKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsDirectoryKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsExcludedFromBackupKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsExecutableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsHiddenKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsMountTriggerKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsPackageKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsPurgeableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsReadableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsRegularFileKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsSparseKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsSymbolicLinkKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsSystemImmutableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsUbiquitousItemKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsUserImmutableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsVolumeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLIsWritableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLKeysOfUnsetValuesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLLabelColorKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLLabelNumberKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLLinkCountKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLLocalizedLabelKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLLocalizedNameKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLLocalizedTypeDescriptionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLMayHaveExtendedAttributesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLMayShareFileContentKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLNameKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLParentDirectoryURLKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLPathKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLPreferredIOBlockSizeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLQuarantinePropertiesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLTagNamesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLTotalFileAllocatedSizeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLTotalFileSizeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLTypeIdentifierKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemDownloadingErrorKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemDownloadingStatusCurrent": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemDownloadingStatusDownloaded": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemDownloadingStatusKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemDownloadingStatusNotDownloaded": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemHasUnresolvedConflictsKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemIsDownloadedKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemIsDownloadingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemIsExcludedFromSyncKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemIsUploadedKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemIsUploadingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemPercentDownloadedKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemPercentUploadedKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLUbiquitousItemUploadingErrorKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeAvailableCapacityForImportantUsageKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeAvailableCapacityForOpportunisticUsageKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeAvailableCapacityKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeCreationDateKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIdentifierKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsAutomountedKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsBrowsableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsEjectableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsEncryptedKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsInternalKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsJournalingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsLocalKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsReadOnlyKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsRemovableKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeIsRootFileSystemKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeLocalizedFormatDescriptionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeLocalizedNameKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeMaximumFileSizeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeMountFromLocationKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeNameKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeResourceCountKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSubtypeKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsAccessPermissionsKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsAdvisoryFileLockingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsCasePreservedNamesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsCaseSensitiveNamesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsCompressionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsExclusiveRenamingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsExtendedSecurityKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsFileCloningKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsFileProtectionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsHardLinksKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsImmutableFilesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsJournalingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsPersistentIDsKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsRenamingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsRootDirectoryDatesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsSparseFilesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsSwapRenamingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsSymbolicLinksKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsVolumeSizesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeSupportsZeroRunsKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeTotalCapacityKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeTypeNameKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeURLForRemountingKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeURLKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFURLVolumeUUIDStringKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationAlertHeaderKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationAlertMessageKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationAlertTopMostKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationAlternateButtonTitleKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationCheckBoxTitlesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationDefaultButtonTitleKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationIconURLKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationKeyboardTypesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationLocalizationURLKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationOtherButtonTitleKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationPopUpSelectionKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationPopUpTitlesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationProgressIndicatorValueKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationSoundURLKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationTextFieldTitlesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFUserNotificationTextFieldValuesKey": {
    "typestr": "^{__CFString=}"
   },
   "kCFXMLTreeErrorDescription": {
    "typestr": "^{__CFString=}"
   },
   "kCFXMLTreeErrorLineNumber": {
    "typestr": "^{__CFString=}"
   },
   "kCFXMLTreeErrorLocation": {
    "typestr": "^{__CFString=}"
   },
   "kCFXMLTreeErrorStatusCode": {
    "typestr": "^{__CFString=}"
   }
  },
  "formal_protocols": {},
  "func_macros": {
   "CFCopyLocalizedString": "def CFCopyLocalizedString(key, comment): return CFBundleCopyLocalizedString(CFBundleGetMainBundle(), (key), (key), NULL)",
   "CFCopyLocalizedStringFromTable": "def CFCopyLocalizedStringFromTable(key, tbl, comment): return CFBundleCopyLocalizedString(CFBundleGetMainBundle(), (key), (key), (tbl))",
   "CFCopyLocalizedStringFromTableInBundle": "def CFCopyLocalizedStringFromTableInBundle(key, tbl, bundle, comment): return CFBundleCopyLocalizedString((bundle), (key), (key), (tbl))",
   "CFCopyLocalizedStringWithDefaultValue": "def CFCopyLocalizedStringWithDefaultValue(key, tbl, bundle, value, comment): return CFBundleCopyLocalizedString((bundle), (key), (value), (tbl))",
   "CF_AVAILABLE": "def CF_AVAILABLE(_mac, _ios): return __attribute__((availability(macosx,introduced=_mac)))",
   "CF_AVAILABLE_IOS": "def CF_AVAILABLE_IOS(_ios): return __attribute__((availability(macosx,unavailable)))",
   "CF_AVAILABLE_IPHONE": "def CF_AVAILABLE_IPHONE(_ios): return CF_AVAILABLE_IOS(_ios)",
   "CF_AVAILABLE_MAC": "def CF_AVAILABLE_MAC(_mac): return __attribute__((availability(macosx,introduced=_mac)))",
   "CF_BRIDGED_MUTABLE_TYPE": "def CF_BRIDGED_MUTABLE_TYPE(T): return __attribute__((objc_bridge_mutable(T)))",
   "CF_BRIDGED_TYPE": "def CF_BRIDGED_TYPE(T): return __attribute__((objc_bridge(T)))",
   "CF_DEPRECATED_IPHONE": "def CF_DEPRECATED_IPHONE(_iosIntro, _iosDep): return CF_DEPRECATED_IOS(_iosIntro, _iosDep)",
   "CF_ENUM_AVAILABLE": "def CF_ENUM_AVAILABLE(_mac, _ios): return CF_AVAILABLE(_mac, _ios)",
   "CF_ENUM_AVAILABLE_IOS": "def CF_ENUM_AVAILABLE_IOS(_ios): return CF_AVAILABLE_IOS(_ios)",
   "CF_ENUM_AVAILABLE_MAC": "def CF_ENUM_AVAILABLE_MAC(_mac): return CF_AVAILABLE_MAC(_mac)",
   "CF_EXTENSION_UNAVAILABLE": "def CF_EXTENSION_UNAVAILABLE(_msg): return __OS_EXTENSION_UNAVAILABLE(_msg)",
   "CF_EXTENSION_UNAVAILABLE_IOS": "def CF_EXTENSION_UNAVAILABLE_IOS(_msg): return __IOS_EXTENSION_UNAVAILABLE(_msg)",
   "CF_EXTENSION_UNAVAILABLE_MAC": "def CF_EXTENSION_UNAVAILABLE_MAC(_msg): return __OSX_EXTENSION_UNAVAILABLE(_msg)",
   "CF_FORMAT_ARGUMENT": "def CF_FORMAT_ARGUMENT(A): return __attribute__((format_arg(A)))",
   "CF_FORMAT_FUNCTION": "def CF_FORMAT_FUNCTION(F,A): return __attribute__((format(CFString, F, A)))",
   "CF_RELATED_TYPE": "def CF_RELATED_TYPE(T,C,I): return __attribute__((objc_bridge_related(T,C,I)))",
   "CF_SWIFT_UNAVAILABLE": "def CF_SWIFT_UNAVAILABLE(_msg): return __attribute__((availability(swift, unavailable, message=_msg)))"
  },
  "functions": {
   "CFAbsoluteTimeAddGregorianUnits": {
    "args": [
     {
      "name": "at",
      "typestr": "d"
     },
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     },
     {
      "name": "units",
      "typestr": "{CFGregorianUnits=iiiiid}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFAbsoluteTimeGetCurrent": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFAbsoluteTimeGetDayOfWeek": {
    "args": [
     {
      "name": "at",
      "typestr": "d"
     },
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFAbsoluteTimeGetDayOfYear": {
    "args": [
     {
      "name": "at",
      "typestr": "d"
     },
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFAbsoluteTimeGetDifferenceAsGregorianUnits": {
    "args": [
     {
      "name": "at1",
      "typestr": "d"
     },
     {
      "name": "at2",
      "typestr": "d"
     },
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     },
     {
      "name": "unitFlags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "{CFGregorianUnits=iiiiid}"
    }
   },
   "CFAbsoluteTimeGetGregorianDate": {
    "args": [
     {
      "name": "at",
      "typestr": "d"
     },
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "{CFGregorianDate=iccccd}"
    }
   },
   "CFAbsoluteTimeGetWeekOfYear": {
    "args": [
     {
      "name": "at",
      "typestr": "d"
     },
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFAllocatorAllocate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "size",
      "typestr": "q"
     },
     {
      "name": "hint",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFAllocatorAllocateBytes": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "size",
      "typestr": "q"
     },
     {
      "name": "hint",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFAllocatorAllocateTyped": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "size",
      "typestr": "q"
     },
     {
      "name": "descriptor",
      "typestr": "Q"
     },
     {
      "name": "hint",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFAllocatorCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "context",
      "typestr": "^{CFAllocatorContext=q^v^?^?^?^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFAllocator=}"
    }
   },
   "CFAllocatorDeallocate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "ptr",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAllocatorGetContext": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "context",
      "typestr": "^{CFAllocatorContext=q^v^?^?^?^?^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAllocatorGetDefault": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFAllocator=}"
    }
   },
   "CFAllocatorGetPreferredSizeForSize": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "size",
      "typestr": "q"
     },
     {
      "name": "hint",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFAllocatorGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFAllocatorReallocate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "ptr",
      "typestr": "^v"
     },
     {
      "name": "newsize",
      "typestr": "q"
     },
     {
      "name": "hint",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFAllocatorReallocateBytes": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "ptr",
      "typestr": "^v"
     },
     {
      "name": "newsize",
      "typestr": "q"
     },
     {
      "name": "hint",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFAllocatorReallocateTyped": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "ptr",
      "typestr": "^v"
     },
     {
      "name": "newsize",
      "typestr": "q"
     },
     {
      "name": "descriptor",
      "typestr": "Q"
     },
     {
      "name": "hint",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFAllocatorSetDefault": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayAppendArray": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "otherArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "otherRange",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayAppendValue": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayApplyFunction": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "applier",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayBSearchValues": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "^v"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "q"
       }
      },
      "name": "comparator",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFArrayContainsValue": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFArrayCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "values",
      "typestr": "^^v"
     },
     {
      "name": "numValues",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFArrayCallBacks=q^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFArrayCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFArrayCreateMutable": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFArrayCallBacks=q^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFArrayCreateMutableCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFArrayExchangeValuesAtIndices": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "idx1",
      "typestr": "q"
     },
     {
      "name": "idx2",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayGetCount": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFArrayGetCountOfValue": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFArrayGetFirstIndexOfValue": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFArrayGetLastIndexOfValue": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFArrayGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFArrayGetValueAtIndex": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFArrayGetValues": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "values",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayInsertValueAtIndex": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayRemoveAllValues": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayRemoveValueAtIndex": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArrayReplaceValues": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "newValues",
      "typestr": "^^v"
     },
     {
      "name": "newCount",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArraySetValueAtIndex": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFArraySortValues": {
    "args": [
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "q"
       }
      },
      "name": "comparator",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAttributedStringBeginEditing": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAttributedStringCreate": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "str",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "attributes",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFAttributedString=}"
    }
   },
   "CFAttributedStringCreateCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFAttributedString=}"
    }
   },
   "CFAttributedStringCreateMutable": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "maxLength",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFAttributedString=}"
    }
   },
   "CFAttributedStringCreateMutableCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "maxLength",
      "typestr": "q"
     },
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFAttributedString=}"
    }
   },
   "CFAttributedStringCreateWithSubstring": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFAttributedString=}"
    }
   },
   "CFAttributedStringEndEditing": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAttributedStringGetAttribute": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "loc",
      "typestr": "q"
     },
     {
      "name": "attrName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "effectiveRange",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "@"
    }
   },
   "CFAttributedStringGetAttributeAndLongestEffectiveRange": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "loc",
      "typestr": "q"
     },
     {
      "name": "attrName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "inRange",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "longestEffectiveRange",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "@"
    }
   },
   "CFAttributedStringGetAttributes": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "loc",
      "typestr": "q"
     },
     {
      "name": "effectiveRange",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFAttributedStringGetAttributesAndLongestEffectiveRange": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "loc",
      "typestr": "q"
     },
     {
      "name": "inRange",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "longestEffectiveRange",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFAttributedStringGetBidiLevelsAndResolvedDirections": {
    "args": [
     {
      "name": "attributedString",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "baseDirection",
      "typestr": "c"
     },
     {
      "name": "bidiLevels",
      "typestr": "^C"
     },
     {
      "name": "baseDirections",
      "typestr": "^C"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CFAttributedStringGetLength": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFAttributedStringGetMutableString": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFAttributedStringGetString": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFAttributedStringGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFAttributedStringRemoveAttribute": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "attrName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAttributedStringReplaceAttributedString": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "replacement",
      "typestr": "^{__CFAttributedString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAttributedStringReplaceString": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "replacement",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAttributedStringSetAttribute": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "attrName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAttributedStringSetAttributes": {
    "args": [
     {
      "name": "aStr",
      "typestr": "^{__CFAttributedString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "replacement",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "clearOtherAttributes",
      "typestr": "Z"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFAutorelease": {
    "args": [
     {
      "name": "arg",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "@"
    }
   },
   "CFBagAddValue": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBagApplyFunction": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "applier",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBagContainsValue": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBagCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "values",
      "typestr": "^^v"
     },
     {
      "name": "numValues",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFBagCallBacks=q^?^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBag=}"
    }
   },
   "CFBagCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBag=}"
    }
   },
   "CFBagCreateMutable": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFBagCallBacks=q^?^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBag=}"
    }
   },
   "CFBagCreateMutableCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBag=}"
    }
   },
   "CFBagGetCount": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFBagGetCountOfValue": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFBagGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFBagGetValue": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFBagGetValueIfPresent": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "candidate",
      "typestr": "^v"
     },
     {
      "name": "value",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBagGetValues": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "values",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBagRemoveAllValues": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBagRemoveValue": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBagReplaceValue": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBagSetValue": {
    "args": [
     {
      "name": "theBag",
      "typestr": "^{__CFBag=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBinaryHeapAddValue": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBinaryHeapApplyFunction": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "applier",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBinaryHeapContainsValue": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBinaryHeapCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFBinaryHeapCallBacks=q^?^?^?^?}"
     },
     {
      "name": "compareContext",
      "typestr": "^{CFBinaryHeapCompareContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBinaryHeap=}"
    }
   },
   "CFBinaryHeapCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBinaryHeap=}"
    }
   },
   "CFBinaryHeapGetCount": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFBinaryHeapGetCountOfValue": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFBinaryHeapGetMinimum": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFBinaryHeapGetMinimumIfPresent": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     },
     {
      "name": "value",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBinaryHeapGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFBinaryHeapGetValues": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     },
     {
      "name": "values",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBinaryHeapRemoveAllValues": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBinaryHeapRemoveMinimumValue": {
    "args": [
     {
      "name": "heap",
      "typestr": "^{__CFBinaryHeap=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBitVectorContainsBit": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBitVectorCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bytes",
      "typestr": "^C"
     },
     {
      "name": "numBits",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBitVector=}"
    }
   },
   "CFBitVectorCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBitVector=}"
    }
   },
   "CFBitVectorCreateMutable": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBitVector=}"
    }
   },
   "CFBitVectorCreateMutableCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBitVector=}"
    }
   },
   "CFBitVectorFlipBitAtIndex": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBitVectorFlipBits": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBitVectorGetBitAtIndex": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFBitVectorGetBits": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "bytes",
      "typestr": "^C"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBitVectorGetCount": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFBitVectorGetCountOfBit": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFBitVectorGetFirstIndexOfBit": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFBitVectorGetLastIndexOfBit": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFBitVectorGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFBitVectorSetAllBits": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "value",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBitVectorSetBitAtIndex": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     },
     {
      "name": "value",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBitVectorSetBits": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "value",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBitVectorSetCount": {
    "args": [
     {
      "name": "bv",
      "typestr": "^{__CFBitVector=}"
     },
     {
      "name": "count",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBooleanGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFBooleanGetValue": {
    "args": [
     {
      "name": "boolean",
      "typestr": "^{__CFBoolean=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleCloseBundleResourceMap": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "refNum",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBundleCopyAuxiliaryExecutableURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "executableName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopyBuiltInPlugInsURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopyBundleLocalizations": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyBundleURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopyExecutableArchitectures": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyExecutableArchitecturesForURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyExecutableURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopyInfoDictionaryForURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFBundleCopyInfoDictionaryInDirectory": {
    "args": [
     {
      "name": "bundleURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFBundleCopyLocalizationsForPreferences": {
    "args": [
     {
      "name": "locArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "prefArray",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyLocalizationsForURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyLocalizedString": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "tableName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFBundleCopyLocalizedStringForLocalizations": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "tableName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "localizations",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFBundleCopyPreferredLocalizationsFromArray": {
    "args": [
     {
      "name": "locArray",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyPrivateFrameworksURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopyResourceURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "resourceName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "resourceType",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "subDirName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopyResourceURLForLocalization": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "resourceName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "resourceType",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "subDirName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "localizationName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopyResourceURLInDirectory": {
    "args": [
     {
      "name": "bundleURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "resourceName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "resourceType",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "subDirName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopyResourceURLsOfType": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "resourceType",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "subDirName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyResourceURLsOfTypeForLocalization": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "resourceType",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "subDirName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "localizationName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyResourceURLsOfTypeInDirectory": {
    "args": [
     {
      "name": "bundleURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "resourceType",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "subDirName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleCopyResourcesDirectoryURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopySharedFrameworksURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopySharedSupportURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCopySupportFilesDirectoryURL": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFBundleCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bundleURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBundle=}"
    }
   },
   "CFBundleCreateBundlesFromDirectory": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "directoryURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "bundleType",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleGetAllBundles": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   },
   "CFBundleGetBundleWithIdentifier": {
    "args": [
     {
      "name": "bundleID",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFBundle=}"
    }
   },
   "CFBundleGetDataPointerForName": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "symbolName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFBundleGetDataPointersForNames": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "symbolNames",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "stbl",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBundleGetDevelopmentRegion": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFBundleGetFunctionPointerForName": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "functionName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFBundleGetFunctionPointersForNames": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "functionNames",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "ftbl",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBundleGetIdentifier": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFBundleGetInfoDictionary": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFBundleGetLocalInfoDictionary": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFBundleGetMainBundle": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFBundle=}"
    }
   },
   "CFBundleGetPackageInfo": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "packageType",
      "typestr": "^I"
     },
     {
      "name": "packageCreator",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFBundleGetPackageInfoInDirectory": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "packageType",
      "typestr": "^I"
     },
     {
      "name": "packageCreator",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleGetPlugIn": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFBundle=}"
    }
   },
   "CFBundleGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFBundleGetValueForInfoDictionaryKey": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "@"
    }
   },
   "CFBundleGetVersionNumber": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFBundleIsArchitectureLoadable": {
    "args": [
     {
      "name": "arch",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleIsExecutableLoadable": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleIsExecutableLoadableForURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleIsExecutableLoaded": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleLoadExecutable": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleLoadExecutableAndReturnError": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleOpenBundleResourceFiles": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "refNum",
      "typestr": "^i"
     },
     {
      "name": "localizedRefNum",
      "typestr": "^i"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFBundleOpenBundleResourceMap": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFBundlePreflightExecutable": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFBundleUnloadExecutable": {
    "args": [
     {
      "name": "bundle",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFByteOrderGetCurrent": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "q"
    }
   },
   "CFCalendarAddComponents": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "at",
      "typestr": "^d"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "componentDesc",
      "typestr": "^c"
     }
    ],
    "retval": {
     "typestr": "Z"
    },
    "variadic": true
   },
   "CFCalendarComposeAbsoluteTime": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "at",
      "typestr": "^d"
     },
     {
      "name": "componentDesc",
      "typestr": "^c"
     }
    ],
    "retval": {
     "typestr": "Z"
    },
    "variadic": true
   },
   "CFCalendarCopyCurrent": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCalendar=}"
    }
   },
   "CFCalendarCopyLocale": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFLocale=}"
    }
   },
   "CFCalendarCopyTimeZone": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTimeZone=}"
    }
   },
   "CFCalendarCreateWithIdentifier": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "identifier",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCalendar=}"
    }
   },
   "CFCalendarDecomposeAbsoluteTime": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "at",
      "typestr": "d"
     },
     {
      "name": "componentDesc",
      "typestr": "^c"
     }
    ],
    "retval": {
     "typestr": "Z"
    },
    "variadic": true
   },
   "CFCalendarGetComponentDifference": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "startingAT",
      "typestr": "d"
     },
     {
      "name": "resultAT",
      "typestr": "d"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "componentDesc",
      "typestr": "^c"
     }
    ],
    "retval": {
     "typestr": "Z"
    },
    "variadic": true
   },
   "CFCalendarGetFirstWeekday": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFCalendarGetIdentifier": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFCalendarGetMaximumRangeOfUnit": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "unit",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFCalendarGetMinimumDaysInFirstWeek": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFCalendarGetMinimumRangeOfUnit": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "unit",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFCalendarGetOrdinalityOfUnit": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "smallerUnit",
      "typestr": "Q"
     },
     {
      "name": "biggerUnit",
      "typestr": "Q"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFCalendarGetRangeOfUnit": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "smallerUnit",
      "typestr": "Q"
     },
     {
      "name": "biggerUnit",
      "typestr": "Q"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFCalendarGetTimeRangeOfUnit": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "unit",
      "typestr": "Q"
     },
     {
      "name": "at",
      "typestr": "d"
     },
     {
      "name": "startp",
      "typestr": "^d"
     },
     {
      "name": "tip",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFCalendarGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFCalendarSetFirstWeekday": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "wkdy",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCalendarSetLocale": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCalendarSetMinimumDaysInFirstWeek": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "mwd",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCalendarSetTimeZone": {
    "args": [
     {
      "name": "calendar",
      "typestr": "^{__CFCalendar=}"
     },
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCharacterSetAddCharactersInRange": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theRange",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCharacterSetAddCharactersInString": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCharacterSetCreateBitmapRepresentation": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFCharacterSetCreateCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCharacterSet=}"
    }
   },
   "CFCharacterSetCreateInvertedSet": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCharacterSet=}"
    }
   },
   "CFCharacterSetCreateMutable": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCharacterSet=}"
    }
   },
   "CFCharacterSetCreateMutableCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCharacterSet=}"
    }
   },
   "CFCharacterSetCreateWithBitmapRepresentation": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCharacterSet=}"
    }
   },
   "CFCharacterSetCreateWithCharactersInRange": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theRange",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCharacterSet=}"
    }
   },
   "CFCharacterSetCreateWithCharactersInString": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFCharacterSet=}"
    }
   },
   "CFCharacterSetGetPredefined": {
    "args": [
     {
      "name": "theSetIdentifier",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "^{__CFCharacterSet=}"
    }
   },
   "CFCharacterSetGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFCharacterSetHasMemberInPlane": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "thePlane",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFCharacterSetIntersect": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theOtherSet",
      "typestr": "^{__CFCharacterSet=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCharacterSetInvert": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCharacterSetIsCharacterMember": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theChar",
      "typestr": "T"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFCharacterSetIsLongCharacterMember": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theChar",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFCharacterSetIsSupersetOfSet": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theOtherset",
      "typestr": "^{__CFCharacterSet=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFCharacterSetRemoveCharactersInRange": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theRange",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCharacterSetRemoveCharactersInString": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFCharacterSetUnion": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "theOtherSet",
      "typestr": "^{__CFCharacterSet=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFConvertDoubleHostToSwapped": {
    "args": [
     {
      "name": "arg",
      "typestr": "d"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CFSwappedFloat64=Q}"
    }
   },
   "CFConvertDoubleSwappedToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "{CFSwappedFloat64=Q}"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "d"
    }
   },
   "CFConvertFloat32HostToSwapped": {
    "args": [
     {
      "name": "arg",
      "typestr": "f"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CFSwappedFloat32=I}"
    }
   },
   "CFConvertFloat32SwappedToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "{CFSwappedFloat32=I}"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "f"
    }
   },
   "CFConvertFloat64HostToSwapped": {
    "args": [
     {
      "name": "arg",
      "typestr": "d"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CFSwappedFloat64=Q}"
    }
   },
   "CFConvertFloat64SwappedToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "{CFSwappedFloat64=Q}"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "d"
    }
   },
   "CFConvertFloatHostToSwapped": {
    "args": [
     {
      "name": "arg",
      "typestr": "f"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CFSwappedFloat32=I}"
    }
   },
   "CFConvertFloatSwappedToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "{CFSwappedFloat32=I}"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "f"
    }
   },
   "CFCopyDescription": {
    "args": [
     {
      "name": "cf",
      "typestr": "@"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFCopyHomeDirectoryURL": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFCopyTypeIDDescription": {
    "args": [
     {
      "name": "type_id",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFDataAppendBytes": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "bytes",
      "typestr": "^C"
     },
     {
      "name": "length",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDataCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bytes",
      "typestr": "^C"
     },
     {
      "name": "length",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFDataCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFDataCreateMutable": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFDataCreateMutableCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFDataCreateWithBytesNoCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bytes",
      "typestr": "^C"
     },
     {
      "name": "length",
      "typestr": "q"
     },
     {
      "name": "bytesDeallocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFDataDeleteBytes": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDataFind": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "dataToFind",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "searchRange",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "compareOptions",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFDataGetBytePtr": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "typestr": "^C"
    }
   },
   "CFDataGetBytes": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDataGetLength": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFDataGetMutableBytePtr": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "typestr": "^C"
    }
   },
   "CFDataGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFDataIncreaseLength": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "extraLength",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDataReplaceBytes": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "newBytes",
      "typestr": "^C"
     },
     {
      "name": "newLength",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDataSetLength": {
    "args": [
     {
      "name": "theData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "length",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDateCompare": {
    "args": [
     {
      "name": "theDate",
      "typestr": "^{__CFDate=}"
     },
     {
      "name": "otherDate",
      "typestr": "^{__CFDate=}"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFDateCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDate=}"
    }
   },
   "CFDateFormatterCopyProperty": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFDateFormatterCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     },
     {
      "name": "dateStyle",
      "typestr": "q"
     },
     {
      "name": "timeStyle",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDateFormatter=}"
    }
   },
   "CFDateFormatterCreateDateFormatFromTemplate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "tmplate",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFDateFormatterCreateDateFromString": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     },
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangep",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDate=}"
    }
   },
   "CFDateFormatterCreateISO8601Formatter": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatOptions",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDateFormatter=}"
    }
   },
   "CFDateFormatterCreateStringWithAbsoluteTime": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFDateFormatterCreateStringWithDate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     },
     {
      "name": "date",
      "typestr": "^{__CFDate=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFDateFormatterGetAbsoluteTimeFromString": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     },
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangep",
      "typestr": "^{CFRange=qq}"
     },
     {
      "name": "atp",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFDateFormatterGetDateStyle": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFDateFormatterGetFormat": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFDateFormatterGetLocale": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFLocale=}"
    }
   },
   "CFDateFormatterGetTimeStyle": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFDateFormatterGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFDateFormatterSetFormat": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     },
     {
      "name": "formatString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDateFormatterSetProperty": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFDateFormatter=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDateGetAbsoluteTime": {
    "args": [
     {
      "name": "theDate",
      "typestr": "^{__CFDate=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFDateGetTimeIntervalSinceDate": {
    "args": [
     {
      "name": "theDate",
      "typestr": "^{__CFDate=}"
     },
     {
      "name": "otherDate",
      "typestr": "^{__CFDate=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFDateGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFDictionaryAddValue": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^v"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDictionaryApplyFunction": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "applier",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDictionaryContainsKey": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFDictionaryContainsValue": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFDictionaryCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "keys",
      "typestr": "^^v"
     },
     {
      "name": "values",
      "typestr": "^^v"
     },
     {
      "name": "numValues",
      "typestr": "q"
     },
     {
      "name": "keyCallBacks",
      "typestr": "^{CFDictionaryKeyCallBacks=q^?^?^?^?^?}"
     },
     {
      "name": "valueCallBacks",
      "typestr": "^{CFDictionaryValueCallBacks=q^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFDictionaryCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFDictionaryCreateMutable": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "keyCallBacks",
      "typestr": "^{CFDictionaryKeyCallBacks=q^?^?^?^?^?}"
     },
     {
      "name": "valueCallBacks",
      "typestr": "^{CFDictionaryValueCallBacks=q^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFDictionaryCreateMutableCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFDictionaryGetCount": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFDictionaryGetCountOfKey": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFDictionaryGetCountOfValue": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFDictionaryGetKeysAndValues": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "keys",
      "typestr": "^^v"
     },
     {
      "name": "values",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDictionaryGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFDictionaryGetValue": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFDictionaryGetValueIfPresent": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^v"
     },
     {
      "name": "value",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFDictionaryRemoveAllValues": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDictionaryRemoveValue": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDictionaryReplaceValue": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^v"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFDictionarySetValue": {
    "args": [
     {
      "name": "theDict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^v"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFEqual": {
    "args": [
     {
      "name": "cf1",
      "typestr": "@"
     },
     {
      "name": "cf2",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFErrorCopyDescription": {
    "args": [
     {
      "name": "err",
      "typestr": "^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFErrorCopyFailureReason": {
    "args": [
     {
      "name": "err",
      "typestr": "^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFErrorCopyRecoverySuggestion": {
    "args": [
     {
      "name": "err",
      "typestr": "^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFErrorCopyUserInfo": {
    "args": [
     {
      "name": "err",
      "typestr": "^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFErrorCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "domain",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "code",
      "typestr": "q"
     },
     {
      "name": "userInfo",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFError=}"
    }
   },
   "CFErrorCreateWithUserInfoKeysAndValues": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "domain",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "code",
      "typestr": "q"
     },
     {
      "name": "userInfoKeys",
      "typestr": "^^v"
     },
     {
      "name": "userInfoValues",
      "typestr": "^^v"
     },
     {
      "name": "numUserInfoValues",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFError=}"
    }
   },
   "CFErrorGetCode": {
    "args": [
     {
      "name": "err",
      "typestr": "^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFErrorGetDomain": {
    "args": [
     {
      "name": "err",
      "typestr": "^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFErrorGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFFileDescriptorCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "fd",
      "typestr": "i"
     },
     {
      "name": "closeOnInvalidate",
      "typestr": "Z"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFFileDescriptor=}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFFileDescriptorContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFFileDescriptor=}"
    }
   },
   "CFFileDescriptorCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "f",
      "typestr": "^{__CFFileDescriptor=}"
     },
     {
      "name": "order",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopSource=}"
    }
   },
   "CFFileDescriptorDisableCallBacks": {
    "args": [
     {
      "name": "f",
      "typestr": "^{__CFFileDescriptor=}"
     },
     {
      "name": "callBackTypes",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFFileDescriptorEnableCallBacks": {
    "args": [
     {
      "name": "f",
      "typestr": "^{__CFFileDescriptor=}"
     },
     {
      "name": "callBackTypes",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFFileDescriptorGetContext": {
    "args": [
     {
      "name": "f",
      "typestr": "^{__CFFileDescriptor=}"
     },
     {
      "name": "context",
      "typestr": "^{CFFileDescriptorContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFFileDescriptorGetNativeDescriptor": {
    "args": [
     {
      "name": "f",
      "typestr": "^{__CFFileDescriptor=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFFileDescriptorGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFFileDescriptorInvalidate": {
    "args": [
     {
      "name": "f",
      "typestr": "^{__CFFileDescriptor=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFFileDescriptorIsValid": {
    "args": [
     {
      "name": "f",
      "typestr": "^{__CFFileDescriptor=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecurityClearProperties": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "clearPropertyMask",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecurityCopyAccessControlList": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "accessControlList",
      "typestr": "^^{_acl=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "Z"
    }
   },
   "CFFileSecurityCopyGroupUUID": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "groupUUID",
      "typestr": "^^{__CFUUID=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "Z"
    }
   },
   "CFFileSecurityCopyOwnerUUID": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "ownerUUID",
      "typestr": "^^{__CFUUID=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "Z"
    }
   },
   "CFFileSecurityCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFFileSecurity=}"
    }
   },
   "CFFileSecurityCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFFileSecurity=}"
    }
   },
   "CFFileSecurityGetGroup": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "group",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecurityGetMode": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "mode",
      "typestr": "^S"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecurityGetOwner": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "owner",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecurityGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFFileSecuritySetAccessControlList": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "accessControlList",
      "typestr": "^{_acl=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecuritySetGroup": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "group",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecuritySetGroupUUID": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "groupUUID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecuritySetMode": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "mode",
      "typestr": "S"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecuritySetOwner": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "owner",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFFileSecuritySetOwnerUUID": {
    "args": [
     {
      "name": "fileSec",
      "typestr": "^{__CFFileSecurity=}"
     },
     {
      "name": "ownerUUID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFGetAllocator": {
    "args": [
     {
      "name": "cf",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "^{__CFAllocator=}"
    }
   },
   "CFGetRetainCount": {
    "args": [
     {
      "name": "cf",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFGetTypeID": {
    "args": [
     {
      "name": "cf",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFGregorianDateGetAbsoluteTime": {
    "args": [
     {
      "name": "gdate",
      "typestr": "{CFGregorianDate=iccccd}"
     },
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFGregorianDateIsValid": {
    "args": [
     {
      "name": "gdate",
      "typestr": "{CFGregorianDate=iccccd}"
     },
     {
      "name": "unitFlags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFHash": {
    "args": [
     {
      "name": "cf",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFLocaleCopyAvailableLocaleIdentifiers": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFLocaleCopyCommonISOCurrencyCodes": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFLocaleCopyCurrent": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFLocale=}"
    }
   },
   "CFLocaleCopyDisplayNameForPropertyValue": {
    "args": [
     {
      "name": "displayLocale",
      "typestr": "^{__CFLocale=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFLocaleCopyISOCountryCodes": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFLocaleCopyISOCurrencyCodes": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFLocaleCopyISOLanguageCodes": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFLocaleCopyPreferredLanguages": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFLocaleCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "localeIdentifier",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFLocale=}"
    }
   },
   "CFLocaleCreateCanonicalLanguageIdentifierFromString": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "localeIdentifier",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "lcode",
      "typestr": "s"
     },
     {
      "name": "rcode",
      "typestr": "s"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFLocaleCreateCanonicalLocaleIdentifierFromString": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "localeIdentifier",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFLocaleCreateComponentsFromLocaleIdentifier": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "localeID",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFLocaleCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFLocale=}"
    }
   },
   "CFLocaleCreateLocaleIdentifierFromComponents": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "dictionary",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "lcid",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFLocaleGetIdentifier": {
    "args": [
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFLocaleGetLanguageCharacterDirection": {
    "args": [
     {
      "name": "isoLangCode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFLocaleGetLanguageLineDirection": {
    "args": [
     {
      "name": "isoLangCode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFLocaleGetSystem": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFLocale=}"
    }
   },
   "CFLocaleGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFLocaleGetValue": {
    "args": [
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "@"
    }
   },
   "CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier": {
    "args": [
     {
      "name": "localeIdentifier",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFMachPortCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFMachPort=}"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "q"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFMachPortContext=q^v^?^?^?}"
     },
     {
      "name": "shouldFreeInfo",
      "typestr": "^Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFMachPort=}"
    }
   },
   "CFMachPortCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "port",
      "typestr": "^{__CFMachPort=}"
     },
     {
      "name": "order",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopSource=}"
    }
   },
   "CFMachPortCreateWithPort": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "portNum",
      "typestr": "I"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFMachPort=}"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "q"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFMachPortContext=q^v^?^?^?}"
     },
     {
      "name": "shouldFreeInfo",
      "typestr": "^Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFMachPort=}"
    }
   },
   "CFMachPortGetContext": {
    "args": [
     {
      "name": "port",
      "typestr": "^{__CFMachPort=}"
     },
     {
      "name": "context",
      "typestr": "^{CFMachPortContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFMachPortGetInvalidationCallBack": {
    "args": [
     {
      "name": "port",
      "typestr": "^{__CFMachPort=}"
     }
    ],
    "retval": {
     "typestr": "^?"
    }
   },
   "CFMachPortGetPort": {
    "args": [
     {
      "name": "port",
      "typestr": "^{__CFMachPort=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFMachPortGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFMachPortInvalidate": {
    "args": [
     {
      "name": "port",
      "typestr": "^{__CFMachPort=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFMachPortIsValid": {
    "args": [
     {
      "name": "port",
      "typestr": "^{__CFMachPort=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFMachPortSetInvalidationCallBack": {
    "args": [
     {
      "name": "port",
      "typestr": "^{__CFMachPort=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFMachPort=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFMakeCollectable": {
    "args": [
     {
      "name": "cf",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "@"
    }
   },
   "CFMessagePortCreateLocal": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFMessagePort=}"
        },
        {
         "typestr": "i"
        },
        {
         "typestr": "^{__CFData=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "^{__CFData=}"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFMessagePortContext=q^v^?^?^?}"
     },
     {
      "name": "shouldFreeInfo",
      "typestr": "^Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFMessagePort=}"
    }
   },
   "CFMessagePortCreateRemote": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFMessagePort=}"
    }
   },
   "CFMessagePortCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "local",
      "typestr": "^{__CFMessagePort=}"
     },
     {
      "name": "order",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopSource=}"
    }
   },
   "CFMessagePortGetContext": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     },
     {
      "name": "context",
      "typestr": "^{CFMessagePortContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFMessagePortGetInvalidationCallBack": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     }
    ],
    "retval": {
     "typestr": "^?"
    }
   },
   "CFMessagePortGetName": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFMessagePortGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFMessagePortInvalidate": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFMessagePortIsRemote": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFMessagePortIsValid": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFMessagePortSendRequest": {
    "args": [
     {
      "name": "remote",
      "typestr": "^{__CFMessagePort=}"
     },
     {
      "name": "msgid",
      "typestr": "i"
     },
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "sendTimeout",
      "typestr": "d"
     },
     {
      "name": "rcvTimeout",
      "typestr": "d"
     },
     {
      "name": "replyMode",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "returnData",
      "typestr": "^^{__CFData=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFMessagePortSetDispatchQueue": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     },
     {
      "name": "queue",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFMessagePortSetInvalidationCallBack": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFMessagePort=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFMessagePortSetName": {
    "args": [
     {
      "name": "ms",
      "typestr": "^{__CFMessagePort=}"
     },
     {
      "name": "newName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFNotificationCenterAddObserver": {
    "args": [
     {
      "name": "center",
      "typestr": "^{__CFNotificationCenter=}"
     },
     {
      "name": "observer",
      "typestr": "^v"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFNotificationCenter=}"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^{__CFString=}"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^{__CFDictionary=}"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callBack",
      "typestr": "^?"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "object",
      "typestr": "^v"
     },
     {
      "name": "suspensionBehavior",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFNotificationCenterGetDarwinNotifyCenter": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFNotificationCenter=}"
    }
   },
   "CFNotificationCenterGetDistributedCenter": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFNotificationCenter=}"
    }
   },
   "CFNotificationCenterGetLocalCenter": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFNotificationCenter=}"
    }
   },
   "CFNotificationCenterGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFNotificationCenterPostNotification": {
    "args": [
     {
      "name": "center",
      "typestr": "^{__CFNotificationCenter=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "object",
      "typestr": "^v"
     },
     {
      "name": "userInfo",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "deliverImmediately",
      "typestr": "Z"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFNotificationCenterPostNotificationWithOptions": {
    "args": [
     {
      "name": "center",
      "typestr": "^{__CFNotificationCenter=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "object",
      "typestr": "^v"
     },
     {
      "name": "userInfo",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "options",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFNotificationCenterRemoveEveryObserver": {
    "args": [
     {
      "name": "center",
      "typestr": "^{__CFNotificationCenter=}"
     },
     {
      "name": "observer",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFNotificationCenterRemoveObserver": {
    "args": [
     {
      "name": "center",
      "typestr": "^{__CFNotificationCenter=}"
     },
     {
      "name": "observer",
      "typestr": "^v"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "object",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFNullGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFNumberCompare": {
    "args": [
     {
      "name": "number",
      "typestr": "^{__CFNumber=}"
     },
     {
      "name": "otherNumber",
      "typestr": "^{__CFNumber=}"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFNumberCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theType",
      "typestr": "q"
     },
     {
      "name": "valuePtr",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFNumber=}"
    }
   },
   "CFNumberFormatterCopyProperty": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFNumberFormatterCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     },
     {
      "name": "style",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFNumberFormatter=}"
    }
   },
   "CFNumberFormatterCreateNumberFromString": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     },
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangep",
      "typestr": "^{CFRange=qq}"
     },
     {
      "name": "options",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFNumber=}"
    }
   },
   "CFNumberFormatterCreateStringWithNumber": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     },
     {
      "name": "number",
      "typestr": "^{__CFNumber=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFNumberFormatterCreateStringWithValue": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     },
     {
      "name": "numberType",
      "typestr": "q"
     },
     {
      "name": "valuePtr",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFNumberFormatterGetDecimalInfoForCurrencyCode": {
    "args": [
     {
      "name": "currencyCode",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "defaultFractionDigits",
      "typestr": "^i"
     },
     {
      "name": "roundingIncrement",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFNumberFormatterGetFormat": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFNumberFormatterGetLocale": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFLocale=}"
    }
   },
   "CFNumberFormatterGetStyle": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFNumberFormatterGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFNumberFormatterGetValueFromString": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     },
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangep",
      "typestr": "^{CFRange=qq}"
     },
     {
      "name": "numberType",
      "typestr": "q"
     },
     {
      "name": "valuePtr",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFNumberFormatterSetFormat": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     },
     {
      "name": "formatString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFNumberFormatterSetProperty": {
    "args": [
     {
      "name": "formatter",
      "typestr": "^{__CFNumberFormatter=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFNumberGetByteSize": {
    "args": [
     {
      "name": "number",
      "typestr": "^{__CFNumber=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFNumberGetType": {
    "args": [
     {
      "name": "number",
      "typestr": "^{__CFNumber=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFNumberGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFNumberGetValue": {
    "args": [
     {
      "name": "number",
      "typestr": "^{__CFNumber=}"
     },
     {
      "name": "theType",
      "typestr": "q"
     },
     {
      "name": "valuePtr",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFNumberIsFloatType": {
    "args": [
     {
      "name": "number",
      "typestr": "^{__CFNumber=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPlugInAddInstanceForFactory": {
    "args": [
     {
      "name": "factoryID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFPlugInCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "plugInURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFBundle=}"
    }
   },
   "CFPlugInFindFactoriesForPlugInType": {
    "args": [
     {
      "name": "typeUUID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   },
   "CFPlugInFindFactoriesForPlugInTypeInPlugIn": {
    "args": [
     {
      "name": "typeUUID",
      "typestr": "^{__CFUUID=}"
     },
     {
      "name": "plugIn",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   },
   "CFPlugInGetBundle": {
    "args": [
     {
      "name": "plugIn",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFBundle=}"
    }
   },
   "CFPlugInGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFPlugInInstanceCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "factoryUUID",
      "typestr": "^{__CFUUID=}"
     },
     {
      "name": "typeUUID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^v"
    }
   },
   "CFPlugInInstanceCreateWithInstanceDataSize": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "instanceDataSize",
      "typestr": "q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "deallocateInstanceFunction",
      "typestr": "^?"
     },
     {
      "name": "factoryName",
      "typestr": "^{__CFString=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFPlugInInstance=}"
        },
        {
         "typestr": "^{__CFString=}"
        },
        {
         "typestr": "^^v"
        }
       ],
       "retval": {
        "typestr": "Z"
       }
      },
      "name": "getInterfaceFunction",
      "typestr": "^?"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFPlugInInstance=}"
    }
   },
   "CFPlugInInstanceGetFactoryName": {
    "args": [
     {
      "name": "instance",
      "typestr": "^{__CFPlugInInstance=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFPlugInInstanceGetInstanceData": {
    "args": [
     {
      "name": "instance",
      "typestr": "^{__CFPlugInInstance=}"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFPlugInInstanceGetInterfaceFunctionTable": {
    "args": [
     {
      "name": "instance",
      "typestr": "^{__CFPlugInInstance=}"
     },
     {
      "name": "interfaceName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "ftbl",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPlugInInstanceGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFPlugInIsLoadOnDemand": {
    "args": [
     {
      "name": "plugIn",
      "typestr": "^{__CFBundle=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPlugInRegisterFactoryFunction": {
    "args": [
     {
      "name": "factoryUUID",
      "typestr": "^{__CFUUID=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFAllocator=}"
        },
        {
         "typestr": "^{__CFUUID=}"
        }
       ],
       "retval": {
        "typestr": "^v"
       }
      },
      "name": "func",
      "typestr": "^?"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPlugInRegisterFactoryFunctionByName": {
    "args": [
     {
      "name": "factoryUUID",
      "typestr": "^{__CFUUID=}"
     },
     {
      "name": "plugIn",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "functionName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPlugInRegisterPlugInType": {
    "args": [
     {
      "name": "factoryUUID",
      "typestr": "^{__CFUUID=}"
     },
     {
      "name": "typeUUID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPlugInRemoveInstanceForFactory": {
    "args": [
     {
      "name": "factoryID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFPlugInSetLoadOnDemand": {
    "args": [
     {
      "name": "plugIn",
      "typestr": "^{__CFBundle=}"
     },
     {
      "name": "flag",
      "typestr": "Z"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFPlugInUnregisterFactory": {
    "args": [
     {
      "name": "factoryUUID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPlugInUnregisterPlugInType": {
    "args": [
     {
      "name": "factoryUUID",
      "typestr": "^{__CFUUID=}"
     },
     {
      "name": "typeUUID",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPreferencesAddSuitePreferencesToApp": {
    "args": [
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "suiteID",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFPreferencesAppSynchronize": {
    "args": [
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPreferencesAppValueIsForced": {
    "args": [
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPreferencesCopyAppValue": {
    "args": [
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFPreferencesCopyApplicationList": {
    "args": [
     {
      "name": "userName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "hostName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFPreferencesCopyKeyList": {
    "args": [
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "userName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "hostName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFPreferencesCopyMultiple": {
    "args": [
     {
      "name": "keysToFetch",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "userName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "hostName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFPreferencesCopyValue": {
    "args": [
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "userName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "hostName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFPreferencesGetAppBooleanValue": {
    "args": [
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "keyExistsAndHasValidFormat",
      "typestr": "^Z"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPreferencesGetAppIntegerValue": {
    "args": [
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "keyExistsAndHasValidFormat",
      "typestr": "^Z"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFPreferencesRemoveSuitePreferencesFromApp": {
    "args": [
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "suiteID",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFPreferencesSetAppValue": {
    "args": [
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "@"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFPreferencesSetMultiple": {
    "args": [
     {
      "name": "keysToSet",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "keysToRemove",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "userName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "hostName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFPreferencesSetValue": {
    "args": [
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "@"
     },
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "userName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "hostName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFPreferencesSynchronize": {
    "args": [
     {
      "name": "applicationID",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "userName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "hostName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPropertyListCreateData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "propertyList",
      "typestr": "@"
     },
     {
      "name": "format",
      "typestr": "q"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFPropertyListCreateDeepCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "propertyList",
      "typestr": "@"
     },
     {
      "name": "mutabilityOption",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFPropertyListCreateFromStream": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "streamLength",
      "typestr": "q"
     },
     {
      "name": "mutabilityOption",
      "typestr": "Q"
     },
     {
      "name": "format",
      "typestr": "^q"
     },
     {
      "name": "errorString",
      "typestr": "^^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFPropertyListCreateFromXMLData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "xmlData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "mutabilityOption",
      "typestr": "Q"
     },
     {
      "name": "errorString",
      "typestr": "^^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFPropertyListCreateWithData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "format",
      "typestr": "^q"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFPropertyListCreateWithStream": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "streamLength",
      "typestr": "q"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "format",
      "typestr": "^q"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFPropertyListCreateXMLData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "propertyList",
      "typestr": "@"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFPropertyListIsValid": {
    "args": [
     {
      "name": "plist",
      "typestr": "@"
     },
     {
      "name": "format",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFPropertyListWrite": {
    "args": [
     {
      "name": "propertyList",
      "typestr": "@"
     },
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "format",
      "typestr": "q"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFPropertyListWriteToStream": {
    "args": [
     {
      "name": "propertyList",
      "typestr": "@"
     },
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "format",
      "typestr": "q"
     },
     {
      "name": "errorString",
      "typestr": "^^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFRangeMake": {
    "args": [
     {
      "name": "loc",
      "typestr": "q"
     },
     {
      "name": "len",
      "typestr": "q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFReadStreamClose": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFReadStreamCopyDispatchQueue": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFReadStreamCopyError": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFError=}"
    }
   },
   "CFReadStreamCopyProperty": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "propertyName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFReadStreamCreateWithBytesNoCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bytes",
      "typestr": "^C"
     },
     {
      "name": "length",
      "typestr": "q"
     },
     {
      "name": "bytesDeallocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFReadStream=}"
    }
   },
   "CFReadStreamCreateWithFile": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "fileURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFReadStream=}"
    }
   },
   "CFReadStreamGetBuffer": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "maxBytesToRead",
      "typestr": "q"
     },
     {
      "name": "numBytesRead",
      "typestr": "^q"
     }
    ],
    "retval": {
     "typestr": "^C"
    }
   },
   "CFReadStreamGetError": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     }
    ],
    "retval": {
     "typestr": "{CFStreamError=qi}"
    }
   },
   "CFReadStreamGetStatus": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFReadStreamGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFReadStreamHasBytesAvailable": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFReadStreamOpen": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFReadStreamRead": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "bufferLength",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFReadStreamScheduleWithRunLoop": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "runLoop",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "runLoopMode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFReadStreamSetClient": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "streamEvents",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFReadStream=}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "clientCB",
      "typestr": "^?"
     },
     {
      "name": "clientContext",
      "typestr": "^{CFStreamClientContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFReadStreamSetDispatchQueue": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "q",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFReadStreamSetProperty": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "propertyName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "propertyValue",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFReadStreamUnscheduleFromRunLoop": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFReadStream=}"
     },
     {
      "name": "runLoop",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "runLoopMode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRelease": {
    "args": [
     {
      "name": "cf",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRetain": {
    "args": [
     {
      "name": "cf",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "@"
    }
   },
   "CFRunLoopAddCommonMode": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopAddObserver": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopAddSource": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "source",
      "typestr": "^{__CFRunLoopSource=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopAddTimer": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopContainsObserver": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopContainsSource": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "source",
      "typestr": "^{__CFRunLoopSource=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopContainsTimer": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopCopyAllModes": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFRunLoopCopyCurrentMode": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFRunLoopGetCurrent": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFRunLoop=}"
    }
   },
   "CFRunLoopGetMain": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFRunLoop=}"
    }
   },
   "CFRunLoopGetNextTimerFireDate": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFRunLoopGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFRunLoopIsWaiting": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopObserverCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "activities",
      "typestr": "Q"
     },
     {
      "name": "repeats",
      "typestr": "Z"
     },
     {
      "name": "order",
      "typestr": "q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFRunLoopObserver=}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFRunLoopObserverContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopObserver=}"
    }
   },
   "CFRunLoopObserverCreateWithHandler": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "activities",
      "typestr": "Q"
     },
     {
      "name": "repeats",
      "typestr": "Z"
     },
     {
      "name": "order",
      "typestr": "q"
     },
     {
      "block": {
       "args": [
        {
         "typestr": "^{__CFRunLoopObserver=}"
        },
        {
         "typestr": "Q"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "block",
      "typestr": "@?"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopObserver=}"
    }
   },
   "CFRunLoopObserverDoesRepeat": {
    "args": [
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopObserverGetActivities": {
    "args": [
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFRunLoopObserverGetContext": {
    "args": [
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     },
     {
      "name": "context",
      "typestr": "^{CFRunLoopObserverContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopObserverGetOrder": {
    "args": [
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFRunLoopObserverGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFRunLoopObserverInvalidate": {
    "args": [
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopObserverIsValid": {
    "args": [
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopPerformBlock": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "mode",
      "typestr": "@"
     },
     {
      "block": {
       "args": [
        {
         "name": null,
         "typestr": "v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "block",
      "typestr": "@?"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopRemoveObserver": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "observer",
      "typestr": "^{__CFRunLoopObserver=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopRemoveSource": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "source",
      "typestr": "^{__CFRunLoopSource=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopRemoveTimer": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     },
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopRun": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopRunInMode": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "seconds",
      "typestr": "d"
     },
     {
      "name": "returnAfterSourceHandled",
      "typestr": "Z"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFRunLoopSourceCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "order",
      "typestr": "q"
     },
     {
      "name": "context",
      "typestr": "^{CFRunLoopSourceContext=q^v^?^?^?^?^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopSource=}"
    }
   },
   "CFRunLoopSourceGetContext": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CFRunLoopSource=}"
     },
     {
      "name": "context",
      "typestr": "^{CFRunLoopSourceContext=q^v^?^?^?^?^?^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopSourceGetOrder": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CFRunLoopSource=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFRunLoopSourceGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFRunLoopSourceInvalidate": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CFRunLoopSource=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopSourceIsValid": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CFRunLoopSource=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopSourceSignal": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CFRunLoopSource=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopStop": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopTimerCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "fireDate",
      "typestr": "d"
     },
     {
      "name": "interval",
      "typestr": "d"
     },
     {
      "name": "flags",
      "typestr": "Q"
     },
     {
      "name": "order",
      "typestr": "q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFRunLoopTimer=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFRunLoopTimerContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopTimer=}"
    }
   },
   "CFRunLoopTimerCreateWithHandler": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "fireDate",
      "typestr": "d"
     },
     {
      "name": "interval",
      "typestr": "d"
     },
     {
      "name": "flags",
      "typestr": "Q"
     },
     {
      "name": "order",
      "typestr": "q"
     },
     {
      "block": {
       "args": [
        {
         "typestr": "^{__CFRunLoopTimer=}"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "block",
      "typestr": "@?"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopTimer=}"
    }
   },
   "CFRunLoopTimerDoesRepeat": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopTimerGetContext": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     },
     {
      "name": "context",
      "typestr": "^{CFRunLoopTimerContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopTimerGetInterval": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFRunLoopTimerGetNextFireDate": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFRunLoopTimerGetOrder": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFRunLoopTimerGetTolerance": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFRunLoopTimerGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFRunLoopTimerInvalidate": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopTimerIsValid": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFRunLoopTimerSetNextFireDate": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     },
     {
      "name": "fireDate",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopTimerSetTolerance": {
    "args": [
     {
      "name": "timer",
      "typestr": "^{__CFRunLoopTimer=}"
     },
     {
      "name": "tolerance",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFRunLoopWakeUp": {
    "args": [
     {
      "name": "rl",
      "typestr": "^{__CFRunLoop=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSetAddValue": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSetApplyFunction": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "applier",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSetContainsValue": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFSetCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "values",
      "typestr": "^^v"
     },
     {
      "name": "numValues",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFSetCallBacks=q^?^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFSet=}"
    }
   },
   "CFSetCreateCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFSet=}"
    }
   },
   "CFSetCreateMutable": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFSetCallBacks=q^?^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFSet=}"
    }
   },
   "CFSetCreateMutableCopy": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFSet=}"
    }
   },
   "CFSetGetCount": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFSetGetCountOfValue": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFSetGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFSetGetValue": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFSetGetValueIfPresent": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "candidate",
      "typestr": "^v"
     },
     {
      "name": "value",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFSetGetValues": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "values",
      "typestr": "^^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSetRemoveAllValues": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSetRemoveValue": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSetReplaceValue": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSetSetValue": {
    "args": [
     {
      "name": "theSet",
      "typestr": "^{__CFSet=}"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFShow": {
    "args": [
     {
      "name": "obj",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFShowStr": {
    "args": [
     {
      "name": "str",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSocketConnectToAddress": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     },
     {
      "name": "address",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFSocketCopyAddress": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFSocketCopyPeerAddress": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFSocketCopyRegisteredSocketSignature": {
    "args": [
     {
      "name": "nameServerSignature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "signature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "nameServerAddress",
      "typestr": "^^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "q"
    }
   },
   "CFSocketCopyRegisteredValue": {
    "args": [
     {
      "name": "nameServerSignature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "^@"
     },
     {
      "name": "nameServerAddress",
      "typestr": "^^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "q"
    }
   },
   "CFSocketCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "protocolFamily",
      "typestr": "i"
     },
     {
      "name": "socketType",
      "typestr": "i"
     },
     {
      "name": "protocol",
      "typestr": "i"
     },
     {
      "name": "callBackTypes",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFSocket=}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^{__CFData=}"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFSocketContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFSocket=}"
    }
   },
   "CFSocketCreateConnectedToSocketSignature": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "signature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "callBackTypes",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFSocket=}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^{__CFData=}"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFSocketContext=q^v^?^?^?}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFSocket=}"
    }
   },
   "CFSocketCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     },
     {
      "name": "order",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopSource=}"
    }
   },
   "CFSocketCreateWithNative": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "sock",
      "typestr": "i"
     },
     {
      "name": "callBackTypes",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFSocket=}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^{__CFData=}"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFSocketContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFSocket=}"
    }
   },
   "CFSocketCreateWithSocketSignature": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "signature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "callBackTypes",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFSocket=}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^{__CFData=}"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^{CFSocketContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFSocket=}"
    }
   },
   "CFSocketDisableCallBacks": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     },
     {
      "name": "callBackTypes",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSocketEnableCallBacks": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     },
     {
      "name": "callBackTypes",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSocketGetContext": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     },
     {
      "name": "context",
      "typestr": "^{CFSocketContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSocketGetDefaultNameRegistryPortNumber": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "S"
    }
   },
   "CFSocketGetNative": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFSocketGetSocketFlags": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFSocketGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFSocketInvalidate": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSocketIsValid": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFSocketRegisterSocketSignature": {
    "args": [
     {
      "name": "nameServerSignature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "signature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFSocketRegisterValue": {
    "args": [
     {
      "name": "nameServerSignature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "value",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFSocketSendData": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     },
     {
      "name": "address",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFSocketSetAddress": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     },
     {
      "name": "address",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFSocketSetDefaultNameRegistryPortNumber": {
    "args": [
     {
      "name": "port",
      "typestr": "S"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSocketSetSocketFlags": {
    "args": [
     {
      "name": "s",
      "typestr": "^{__CFSocket=}"
     },
     {
      "name": "flags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSocketUnregister": {
    "args": [
     {
      "name": "nameServerSignature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStreamCreateBoundPair": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "readStream",
      "typestr": "^^{__CFReadStream=}"
     },
     {
      "name": "writeStream",
      "typestr": "^^{__CFWriteStream=}"
     },
     {
      "name": "transferBufferSize",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "v"
    }
   },
   "CFStreamCreatePairWithPeerSocketSignature": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "signature",
      "typestr": "^{CFSocketSignature=iii^{__CFData=}}"
     },
     {
      "name": "readStream",
      "typestr": "^^{__CFReadStream=}"
     },
     {
      "name": "writeStream",
      "typestr": "^^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "v"
    }
   },
   "CFStreamCreatePairWithSocket": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "sock",
      "typestr": "i"
     },
     {
      "name": "readStream",
      "typestr": "^^{__CFReadStream=}"
     },
     {
      "name": "writeStream",
      "typestr": "^^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "v"
    }
   },
   "CFStreamCreatePairWithSocketToHost": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "host",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "port",
      "typestr": "I"
     },
     {
      "name": "readStream",
      "typestr": "^^{__CFReadStream=}"
     },
     {
      "name": "writeStream",
      "typestr": "^^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "v"
    }
   },
   "CFStringAppend": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "appendedString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringAppendCString": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "cStr",
      "typestr": "^c"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringAppendCharacters": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "chars",
      "typestr": "^T"
     },
     {
      "name": "numChars",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringAppendFormat": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "formatOptions",
      "printf_format": true,
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "format",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    },
    "variadic": true
   },
   "CFStringAppendFormatAndArguments": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "formatOptions",
      "printf_format": true,
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "format",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "arguments",
      "typestr": "[1{__va_list_tag=II^v^v}]"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringAppendPascalString": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "pStr",
      "typestr": "^C"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringCapitalize": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringCompare": {
    "args": [
     {
      "name": "theString1",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "theString2",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "compareOptions",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringCompareWithOptions": {
    "args": [
     {
      "name": "theString1",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "theString2",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangeToCompare",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "compareOptions",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringCompareWithOptionsAndLocale": {
    "args": [
     {
      "name": "theString1",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "theString2",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangeToCompare",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "compareOptions",
      "typestr": "Q"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringConvertEncodingToIANACharSetName": {
    "args": [
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringConvertEncodingToNSStringEncoding": {
    "args": [
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFStringConvertEncodingToWindowsCodepage": {
    "args": [
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringConvertIANACharSetNameToEncoding": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringConvertNSStringEncodingToEncoding": {
    "args": [
     {
      "name": "encoding",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringConvertWindowsCodepageToEncoding": {
    "args": [
     {
      "name": "codepage",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringCreateArrayBySeparatingStrings": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "separatorString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFStringCreateArrayWithFindResults": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "stringToFind",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangeToSearch",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "compareOptions",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFStringCreateByCombiningStrings": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "separatorString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateExternalRepresentation": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "lossByte",
      "typestr": "C"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFStringCreateFromExternalRepresentation": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateMutable": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "maxLength",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateMutableCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "maxLength",
      "typestr": "q"
     },
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateMutableWithExternalCharactersNoCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "chars",
      "typestr": "^T"
     },
     {
      "name": "numChars",
      "typestr": "q"
     },
     {
      "name": "capacity",
      "typestr": "q"
     },
     {
      "name": "externalCharactersAllocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateStringWithValidatedFormat": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatOptions",
      "printf_format": true,
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "validFormatSpecifiers",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "format",
      "typestr": "^{__CFString=}"
     },
     {
      "already_cfretained": true,
      "name": "errorPtr",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    },
    "variadic": true
   },
   "CFStringCreateStringWithValidatedFormatAndArguments": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatOptions",
      "printf_format": true,
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "validFormatSpecifiers",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "format",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "arguments",
      "typestr": "[1{__va_list_tag=II^v^v}]"
     },
     {
      "already_cfretained": true,
      "name": "errorPtr",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithBytes": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bytes",
      "typestr": "^C"
     },
     {
      "name": "numBytes",
      "typestr": "q"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "isExternalRepresentation",
      "typestr": "Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithBytesNoCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bytes",
      "typestr": "^C"
     },
     {
      "name": "numBytes",
      "typestr": "q"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "isExternalRepresentation",
      "typestr": "Z"
     },
     {
      "name": "contentsDeallocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithCString": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "cStr",
      "typestr": "^c"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithCStringNoCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "cStr",
      "typestr": "^c"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "contentsDeallocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithCharacters": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "chars",
      "typestr": "^T"
     },
     {
      "name": "numChars",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithCharactersNoCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "chars",
      "typestr": "^T"
     },
     {
      "name": "numChars",
      "typestr": "q"
     },
     {
      "name": "contentsDeallocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithFileSystemRepresentation": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "buffer",
      "typestr": "^c"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithFormat": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatOptions",
      "printf_format": true,
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "format",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    },
    "variadic": true
   },
   "CFStringCreateWithFormatAndArguments": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "formatOptions",
      "printf_format": true,
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "format",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "arguments",
      "typestr": "[1{__va_list_tag=II^v^v}]"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithPascalString": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "pStr",
      "typestr": "^C"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithPascalStringNoCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "pStr",
      "typestr": "^C"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "contentsDeallocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringCreateWithSubstring": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "str",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringDelete": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringFind": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "stringToFind",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "compareOptions",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFStringFindAndReplace": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "stringToFind",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "replacementString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangeToSearch",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "compareOptions",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringFindCharacterFromSet": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "theSet",
      "typestr": "^{__CFCharacterSet=}"
     },
     {
      "name": "rangeToSearch",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "searchOptions",
      "typestr": "Q"
     },
     {
      "name": "result",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringFindWithOptions": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "stringToFind",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangeToSearch",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "searchOptions",
      "typestr": "Q"
     },
     {
      "name": "result",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringFindWithOptionsAndLocale": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "stringToFind",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rangeToSearch",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "searchOptions",
      "typestr": "Q"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     },
     {
      "name": "result",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringFold": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "theFlags",
      "typestr": "Q"
     },
     {
      "name": "theLocale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringGetBytes": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "lossByte",
      "typestr": "C"
     },
     {
      "name": "isExternalRepresentation",
      "typestr": "Z"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "maxBufLen",
      "typestr": "q"
     },
     {
      "name": "usedBufLen",
      "typestr": "^q"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringGetCString": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "buffer",
      "typestr": "^c"
     },
     {
      "name": "bufferSize",
      "typestr": "q"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringGetCStringPtr": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "^c"
    }
   },
   "CFStringGetCharacterAtIndex": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "T"
    }
   },
   "CFStringGetCharacterFromInlineBuffer": {
    "args": [
     {
      "name": "buf",
      "typestr": "^{CFStringInlineBuffer=[64T]^{__CFString=}^T^c{CFRange=qq}qq}"
     },
     {
      "name": "idx",
      "typestr": "q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "T"
    }
   },
   "CFStringGetCharacters": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "buffer",
      "typestr": "^T"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringGetCharactersPtr": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "^T"
    }
   },
   "CFStringGetDoubleValue": {
    "args": [
     {
      "name": "str",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFStringGetFastestEncoding": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringGetFileSystemRepresentation": {
    "args": [
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "buffer",
      "typestr": "^c"
     },
     {
      "name": "maxBufLen",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringGetHyphenationLocationBeforeIndex": {
    "args": [
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "location",
      "typestr": "q"
     },
     {
      "name": "limitRange",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     },
     {
      "name": "character",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringGetIntValue": {
    "args": [
     {
      "name": "str",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFStringGetLength": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringGetLineBounds": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "lineBeginIndex",
      "typestr": "^q"
     },
     {
      "name": "lineEndIndex",
      "typestr": "^q"
     },
     {
      "name": "contentsEndIndex",
      "typestr": "^q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringGetListOfAvailableEncodings": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^I"
    }
   },
   "CFStringGetLongCharacterForSurrogatePair": {
    "args": [
     {
      "name": "surrogateHigh",
      "typestr": "T"
     },
     {
      "name": "surrogateLow",
      "typestr": "T"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringGetMaximumSizeForEncoding": {
    "args": [
     {
      "name": "length",
      "typestr": "q"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringGetMaximumSizeOfFileSystemRepresentation": {
    "args": [
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringGetMostCompatibleMacStringEncoding": {
    "args": [
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringGetNameOfEncoding": {
    "args": [
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringGetParagraphBounds": {
    "args": [
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "parBeginIndex",
      "typestr": "^q"
     },
     {
      "name": "parEndIndex",
      "typestr": "^q"
     },
     {
      "name": "contentsEndIndex",
      "typestr": "^q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringGetPascalString": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "bufferSize",
      "typestr": "q"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringGetPascalStringPtr": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "^C"
    }
   },
   "CFStringGetRangeOfComposedCharactersAtIndex": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "theIndex",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFStringGetSmallestEncoding": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringGetSurrogatePairForLongCharacter": {
    "args": [
     {
      "name": "character",
      "typestr": "I"
     },
     {
      "name": "surrogates",
      "typestr": "^T"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringGetSystemEncoding": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CFStringGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFStringHasPrefix": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "prefix",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringHasSuffix": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "suffix",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringInitInlineBuffer": {
    "args": [
     {
      "name": "str",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "buf",
      "typestr": "^{CFStringInlineBuffer=[64T]^{__CFString=}^T^c{CFRange=qq}qq}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringInsert": {
    "args": [
     {
      "name": "str",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     },
     {
      "name": "insertedStr",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringIsEncodingAvailable": {
    "args": [
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringIsHyphenationAvailableForLocale": {
    "args": [
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringIsSurrogateHighCharacter": {
    "args": [
     {
      "name": "character",
      "typestr": "T"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringIsSurrogateLowCharacter": {
    "args": [
     {
      "name": "character",
      "typestr": "T"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringLowercase": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringNormalize": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "theForm",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringPad": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "padString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "length",
      "typestr": "q"
     },
     {
      "name": "indexIntoPad",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringReplace": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "replacement",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringReplaceAll": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "replacement",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringSetExternalCharactersNoCopy": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "chars",
      "typestr": "^T"
     },
     {
      "name": "length",
      "typestr": "q"
     },
     {
      "name": "capacity",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "v"
    }
   },
   "CFStringTokenizerAdvanceToNextToken": {
    "args": [
     {
      "name": "tokenizer",
      "typestr": "^{__CFStringTokenizer=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFStringTokenizerCopyBestStringLanguage": {
    "args": [
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFStringTokenizerCopyCurrentTokenAttribute": {
    "args": [
     {
      "name": "tokenizer",
      "typestr": "^{__CFStringTokenizer=}"
     },
     {
      "name": "attribute",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFStringTokenizerCreate": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFStringTokenizer=}"
    }
   },
   "CFStringTokenizerGetCurrentSubTokens": {
    "args": [
     {
      "name": "tokenizer",
      "typestr": "^{__CFStringTokenizer=}"
     },
     {
      "name": "ranges",
      "typestr": "^{CFRange=qq}"
     },
     {
      "name": "maxRangeLength",
      "typestr": "q"
     },
     {
      "name": "derivedSubTokens",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFStringTokenizerGetCurrentTokenRange": {
    "args": [
     {
      "name": "tokenizer",
      "typestr": "^{__CFStringTokenizer=}"
     }
    ],
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFStringTokenizerGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFStringTokenizerGoToTokenAtIndex": {
    "args": [
     {
      "name": "tokenizer",
      "typestr": "^{__CFStringTokenizer=}"
     },
     {
      "name": "index",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFStringTokenizerSetString": {
    "args": [
     {
      "name": "tokenizer",
      "typestr": "^{__CFStringTokenizer=}"
     },
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringTransform": {
    "args": [
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "range",
      "typestr": "^{CFRange=qq}"
     },
     {
      "name": "transform",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "reverse",
      "typestr": "Z"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFStringTrim": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "trimString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringTrimWhitespace": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFStringUppercase": {
    "args": [
     {
      "name": "theString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFSwapInt16": {
    "args": [
     {
      "name": "arg",
      "typestr": "S"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "S"
    }
   },
   "CFSwapInt16BigToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "S"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "S"
    }
   },
   "CFSwapInt16HostToBig": {
    "args": [
     {
      "name": "arg",
      "typestr": "S"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "S"
    }
   },
   "CFSwapInt16HostToLittle": {
    "args": [
     {
      "name": "arg",
      "typestr": "S"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "S"
    }
   },
   "CFSwapInt16LittleToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "S"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "S"
    }
   },
   "CFSwapInt32": {
    "args": [
     {
      "name": "arg",
      "typestr": "I"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "I"
    }
   },
   "CFSwapInt32BigToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "I"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "I"
    }
   },
   "CFSwapInt32HostToBig": {
    "args": [
     {
      "name": "arg",
      "typestr": "I"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "I"
    }
   },
   "CFSwapInt32HostToLittle": {
    "args": [
     {
      "name": "arg",
      "typestr": "I"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "I"
    }
   },
   "CFSwapInt32LittleToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "I"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "I"
    }
   },
   "CFSwapInt64": {
    "args": [
     {
      "name": "arg",
      "typestr": "Q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Q"
    }
   },
   "CFSwapInt64BigToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "Q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Q"
    }
   },
   "CFSwapInt64HostToBig": {
    "args": [
     {
      "name": "arg",
      "typestr": "Q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Q"
    }
   },
   "CFSwapInt64HostToLittle": {
    "args": [
     {
      "name": "arg",
      "typestr": "Q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Q"
    }
   },
   "CFSwapInt64LittleToHost": {
    "args": [
     {
      "name": "arg",
      "typestr": "Q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Q"
    }
   },
   "CFTimeZoneCopyAbbreviation": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFTimeZoneCopyAbbreviationDictionary": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFTimeZoneCopyDefault": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTimeZone=}"
    }
   },
   "CFTimeZoneCopyKnownNames": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CFTimeZoneCopyLocalizedName": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     },
     {
      "name": "style",
      "typestr": "q"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFTimeZoneCopySystem": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTimeZone=}"
    }
   },
   "CFTimeZoneCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTimeZone=}"
    }
   },
   "CFTimeZoneCreateWithName": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "tryAbbrev",
      "typestr": "Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTimeZone=}"
    }
   },
   "CFTimeZoneCreateWithTimeIntervalFromGMT": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "ti",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTimeZone=}"
    }
   },
   "CFTimeZoneGetData": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFData=}"
    }
   },
   "CFTimeZoneGetDaylightSavingTimeOffset": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFTimeZoneGetName": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFTimeZoneGetNextDaylightSavingTimeTransition": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFTimeZoneGetSecondsFromGMT": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CFTimeZoneGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFTimeZoneIsDaylightSavingTime": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     },
     {
      "name": "at",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFTimeZoneResetSystem": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTimeZoneSetAbbreviationDictionary": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTimeZoneSetDefault": {
    "args": [
     {
      "name": "tz",
      "typestr": "^{__CFTimeZone=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeAppendChild": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "name": "newChild",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeApplyFunctionToChildren": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "applier",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "context",
      "typestr": "^{CFTreeContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTree=}"
    }
   },
   "CFTreeFindRoot": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   },
   "CFTreeGetChildAtIndex": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   },
   "CFTreeGetChildCount": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFTreeGetChildren": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "name": "children",
      "typestr": "^^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeGetContext": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "name": "context",
      "typestr": "^{CFTreeContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeGetFirstChild": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   },
   "CFTreeGetNextSibling": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   },
   "CFTreeGetParent": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   },
   "CFTreeGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFTreeInsertSibling": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "name": "newSibling",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreePrependChild": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "name": "newChild",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeRemove": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeRemoveAllChildren": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeSetContext": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "name": "context",
      "typestr": "^{CFTreeContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFTreeSortChildren": {
    "args": [
     {
      "name": "tree",
      "typestr": "^{__CFTree=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "q"
       }
      },
      "name": "comparator",
      "typestr": "^?"
     },
     {
      "name": "context",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFURLCanBeDecomposed": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLClearResourcePropertyCache": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFURLClearResourcePropertyCacheForKey": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFURLCopyAbsoluteURL": {
    "args": [
     {
      "name": "relativeURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCopyFileSystemPath": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "pathStyle",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyFragment": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "charactersToLeaveEscaped",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyHostName": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyLastPathComponent": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyNetLocation": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyParameterString": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "charactersToLeaveEscaped",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyPassword": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyPath": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyPathExtension": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyQueryString": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "charactersToLeaveEscaped",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyResourcePropertiesForKeys": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "keys",
      "typestr": "^{__CFArray=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFURLCopyResourcePropertyForKey": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "propertyValueTypeRefPtr",
      "typestr": "^v"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "Z"
    }
   },
   "CFURLCopyResourceSpecifier": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyScheme": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyStrictPath": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "isAbsolute",
      "typestr": "^Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCopyUserName": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCreateAbsoluteURLWithBytes": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "relativeURLBytes",
      "typestr": "^C"
     },
     {
      "name": "length",
      "typestr": "q"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "baseURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "useCompatibilityMode",
      "typestr": "Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateBookmarkData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "resourcePropertiesToInclude",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "relativeToURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFURLCreateBookmarkDataFromAliasRecord": {
    "args": [
     {
      "name": "allocatorRef",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "aliasRecordDataRef",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFURLCreateBookmarkDataFromFile": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "fileURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "already_cfretained": true,
      "name": "errorRef",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFURLCreateByResolvingBookmarkData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bookmark",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "name": "relativeToURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "resourcePropertiesToInclude",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "isStale",
      "typestr": "^Z"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateCopyAppendingPathComponent": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "pathComponent",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "isDirectory",
      "typestr": "Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateCopyAppendingPathExtension": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "extension",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateCopyDeletingLastPathComponent": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateCopyDeletingPathExtension": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "escapeWhitespace",
      "typestr": "Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFURLCreateDataAndPropertiesFromResource": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "resourceData",
      "typestr": "^^{__CFData=}"
     },
     {
      "name": "properties",
      "typestr": "^^{__CFDictionary=}"
     },
     {
      "name": "desiredProperties",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "errorCode",
      "typestr": "^i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "Z"
    }
   },
   "CFURLCreateFilePathURL": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateFileReferenceURL": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateFromFSRef": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "fsRef",
      "typestr": "^{FSRef=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateFromFileSystemRepresentation": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "bufLen",
      "typestr": "q"
     },
     {
      "name": "isDirectory",
      "typestr": "Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateFromFileSystemRepresentationRelativeToBase": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "bufLen",
      "typestr": "q"
     },
     {
      "name": "isDirectory",
      "typestr": "Z"
     },
     {
      "name": "baseURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreatePropertyFromResource": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "property",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "errorCode",
      "typestr": "^i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFURLCreateResourcePropertiesForKeysFromBookmarkData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "resourcePropertiesToReturn",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "bookmark",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFURLCreateResourcePropertyForKeyFromBookmarkData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "resourcePropertyKey",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "bookmark",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFURLCreateStringByAddingPercentEscapes": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "originalString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "charactersToLeaveUnescaped",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "legalURLCharactersToBeEscaped",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCreateStringByReplacingPercentEscapes": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "originalString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "charactersToLeaveEscaped",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCreateStringByReplacingPercentEscapesUsingEncoding": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "origString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "charsToLeaveEscaped",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "encoding",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLCreateWithBytes": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "URLBytes",
      "typestr": "^C"
     },
     {
      "name": "length",
      "typestr": "q"
     },
     {
      "name": "encoding",
      "typestr": "I"
     },
     {
      "name": "baseURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateWithFileSystemPath": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "filePath",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "pathStyle",
      "typestr": "q"
     },
     {
      "name": "isDirectory",
      "typestr": "Z"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateWithFileSystemPathRelativeToBase": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "filePath",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "pathStyle",
      "typestr": "q"
     },
     {
      "name": "isDirectory",
      "typestr": "Z"
     },
     {
      "name": "baseURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLCreateWithString": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "URLString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "baseURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLDestroyResource": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "errorCode",
      "typestr": "^i"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLEnumeratorCreateForDirectoryURL": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "directoryURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "option",
      "typestr": "Q"
     },
     {
      "name": "propertyKeys",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURLEnumerator=}"
    }
   },
   "CFURLEnumeratorCreateForMountedVolumes": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "option",
      "typestr": "Q"
     },
     {
      "name": "propertyKeys",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFURLEnumerator=}"
    }
   },
   "CFURLEnumeratorGetDescendentLevel": {
    "args": [
     {
      "name": "enumerator",
      "typestr": "^{__CFURLEnumerator=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFURLEnumeratorGetNextURL": {
    "args": [
     {
      "name": "enumerator",
      "typestr": "^{__CFURLEnumerator=}"
     },
     {
      "name": "url",
      "typestr": "^^{__CFURL=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFURLEnumeratorGetSourceDidChange": {
    "args": [
     {
      "name": "enumerator",
      "typestr": "^{__CFURLEnumerator=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLEnumeratorGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFURLEnumeratorSkipDescendents": {
    "args": [
     {
      "name": "enumerator",
      "typestr": "^{__CFURLEnumerator=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFURLGetBaseURL": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFURL=}"
    }
   },
   "CFURLGetByteRangeForComponent": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "component",
      "typestr": "q"
     },
     {
      "name": "rangeIncludingSeparators",
      "typestr": "^{CFRange=qq}"
     }
    ],
    "retval": {
     "typestr": "{CFRange=qq}"
    }
   },
   "CFURLGetBytes": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "bufferLength",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFURLGetFSRef": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "fsRef",
      "typestr": "^{FSRef=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLGetFileSystemRepresentation": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "resolveAgainstBase",
      "typestr": "Z"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "maxBufLen",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLGetPortNumber": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFURLGetString": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFURLGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFURLHasDirectoryPath": {
    "args": [
     {
      "name": "anURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLIsFileReferenceURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLResourceIsReachable": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLSetResourcePropertiesForKeys": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "keyedPropertyValues",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLSetResourcePropertyForKey": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "propertyValue",
      "typestr": "@"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLSetTemporaryResourcePropertyForKey": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "propertyValue",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFURLStartAccessingSecurityScopedResource": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLStopAccessingSecurityScopedResource": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFURLWriteBookmarkDataToFile": {
    "args": [
     {
      "name": "bookmarkRef",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "fileURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "options",
      "typestr": "Q"
     },
     {
      "already_cfretained": true,
      "name": "errorRef",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFURLWriteDataAndPropertiesToResource": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "dataToWrite",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "propertiesToWrite",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "errorCode",
      "typestr": "^i"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFUUIDCreate": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFUUID=}"
    }
   },
   "CFUUIDCreateFromString": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "uuidStr",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFUUID=}"
    }
   },
   "CFUUIDCreateFromUUIDBytes": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bytes",
      "typestr": "{CFUUIDBytes=CCCCCCCCCCCCCCCC}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFUUID=}"
    }
   },
   "CFUUIDCreateString": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "uuid",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFUUIDCreateWithBytes": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "byte0",
      "typestr": "C"
     },
     {
      "name": "byte1",
      "typestr": "C"
     },
     {
      "name": "byte2",
      "typestr": "C"
     },
     {
      "name": "byte3",
      "typestr": "C"
     },
     {
      "name": "byte4",
      "typestr": "C"
     },
     {
      "name": "byte5",
      "typestr": "C"
     },
     {
      "name": "byte6",
      "typestr": "C"
     },
     {
      "name": "byte7",
      "typestr": "C"
     },
     {
      "name": "byte8",
      "typestr": "C"
     },
     {
      "name": "byte9",
      "typestr": "C"
     },
     {
      "name": "byte10",
      "typestr": "C"
     },
     {
      "name": "byte11",
      "typestr": "C"
     },
     {
      "name": "byte12",
      "typestr": "C"
     },
     {
      "name": "byte13",
      "typestr": "C"
     },
     {
      "name": "byte14",
      "typestr": "C"
     },
     {
      "name": "byte15",
      "typestr": "C"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFUUID=}"
    }
   },
   "CFUUIDGetConstantUUIDWithBytes": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "byte0",
      "typestr": "C"
     },
     {
      "name": "byte1",
      "typestr": "C"
     },
     {
      "name": "byte2",
      "typestr": "C"
     },
     {
      "name": "byte3",
      "typestr": "C"
     },
     {
      "name": "byte4",
      "typestr": "C"
     },
     {
      "name": "byte5",
      "typestr": "C"
     },
     {
      "name": "byte6",
      "typestr": "C"
     },
     {
      "name": "byte7",
      "typestr": "C"
     },
     {
      "name": "byte8",
      "typestr": "C"
     },
     {
      "name": "byte9",
      "typestr": "C"
     },
     {
      "name": "byte10",
      "typestr": "C"
     },
     {
      "name": "byte11",
      "typestr": "C"
     },
     {
      "name": "byte12",
      "typestr": "C"
     },
     {
      "name": "byte13",
      "typestr": "C"
     },
     {
      "name": "byte14",
      "typestr": "C"
     },
     {
      "name": "byte15",
      "typestr": "C"
     }
    ],
    "retval": {
     "typestr": "^{__CFUUID=}"
    }
   },
   "CFUUIDGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFUUIDGetUUIDBytes": {
    "args": [
     {
      "name": "uuid",
      "typestr": "^{__CFUUID=}"
     }
    ],
    "retval": {
     "typestr": "{CFUUIDBytes=CCCCCCCCCCCCCCCC}"
    }
   },
   "CFUserNotificationCancel": {
    "args": [
     {
      "name": "userNotification",
      "typestr": "^{__CFUserNotification=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFUserNotificationCheckBoxChecked": {
    "args": [
     {
      "name": "i",
      "typestr": "q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Q"
    }
   },
   "CFUserNotificationCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "flags",
      "typestr": "Q"
     },
     {
      "name": "error",
      "typestr": "^i"
     },
     {
      "name": "dictionary",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFUserNotification=}"
    }
   },
   "CFUserNotificationCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "userNotification",
      "typestr": "^{__CFUserNotification=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFUserNotification=}"
        },
        {
         "typestr": "Q"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callout",
      "typestr": "^?"
     },
     {
      "name": "order",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFRunLoopSource=}"
    }
   },
   "CFUserNotificationDisplayAlert": {
    "args": [
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "flags",
      "typestr": "Q"
     },
     {
      "name": "iconURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "soundURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "localizationURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "alertHeader",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "alertMessage",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "defaultButtonTitle",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "alternateButtonTitle",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "otherButtonTitle",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "responseFlags",
      "typestr": "^Q"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFUserNotificationDisplayNotice": {
    "args": [
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "flags",
      "typestr": "Q"
     },
     {
      "name": "iconURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "soundURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "localizationURL",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "alertHeader",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "alertMessage",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "defaultButtonTitle",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFUserNotificationGetResponseDictionary": {
    "args": [
     {
      "name": "userNotification",
      "typestr": "^{__CFUserNotification=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CFUserNotificationGetResponseValue": {
    "args": [
     {
      "name": "userNotification",
      "typestr": "^{__CFUserNotification=}"
     },
     {
      "name": "key",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "idx",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFUserNotificationGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFUserNotificationPopUpSelection": {
    "args": [
     {
      "name": "n",
      "typestr": "q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Q"
    }
   },
   "CFUserNotificationReceiveResponse": {
    "args": [
     {
      "name": "userNotification",
      "typestr": "^{__CFUserNotification=}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "responseFlags",
      "typestr": "^Q"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFUserNotificationSecureTextField": {
    "args": [
     {
      "name": "i",
      "typestr": "q"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "Q"
    }
   },
   "CFUserNotificationUpdate": {
    "args": [
     {
      "name": "userNotification",
      "typestr": "^{__CFUserNotification=}"
     },
     {
      "name": "timeout",
      "typestr": "d"
     },
     {
      "name": "flags",
      "typestr": "Q"
     },
     {
      "name": "dictionary",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CFWriteStreamCanAcceptBytes": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFWriteStreamClose": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFWriteStreamCopyDispatchQueue": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFWriteStreamCopyError": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFError=}"
    }
   },
   "CFWriteStreamCopyProperty": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "propertyName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CFWriteStreamCreateWithAllocatedBuffers": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "bufferAllocator",
      "typestr": "^{__CFAllocator=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFWriteStream=}"
    }
   },
   "CFWriteStreamCreateWithBuffer": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "bufferCapacity",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFWriteStream=}"
    }
   },
   "CFWriteStreamCreateWithFile": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "fileURL",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFWriteStream=}"
    }
   },
   "CFWriteStreamGetError": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "typestr": "{CFStreamError=qi}"
    }
   },
   "CFWriteStreamGetStatus": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFWriteStreamGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFWriteStreamOpen": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFWriteStreamScheduleWithRunLoop": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "runLoop",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "runLoopMode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFWriteStreamSetClient": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "streamEvents",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CFWriteStream=}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "clientCB",
      "typestr": "^?"
     },
     {
      "name": "clientContext",
      "typestr": "^{CFStreamClientContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFWriteStreamSetDispatchQueue": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "q",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFWriteStreamSetProperty": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "propertyName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "propertyValue",
      "typestr": "@"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFWriteStreamUnscheduleFromRunLoop": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "runLoop",
      "typestr": "^{__CFRunLoop=}"
     },
     {
      "name": "runLoopMode",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFWriteStreamWrite": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "buffer",
      "typestr": "^C"
     },
     {
      "name": "bufferLength",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFXMLCreateStringByEscapingEntities": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "entitiesDictionary",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFXMLCreateStringByUnescapingEntities": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "string",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "entitiesDictionary",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFXMLNodeCreate": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "xmlType",
      "typestr": "q"
     },
     {
      "name": "dataString",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "additionalInfoPtr",
      "typestr": "^v"
     },
     {
      "name": "version",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFXMLNode=}"
    }
   },
   "CFXMLNodeCreateCopy": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "origNode",
      "typestr": "^{__CFXMLNode=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFXMLNode=}"
    }
   },
   "CFXMLNodeGetInfoPtr": {
    "args": [
     {
      "name": "node",
      "typestr": "^{__CFXMLNode=}"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFXMLNodeGetString": {
    "args": [
     {
      "name": "node",
      "typestr": "^{__CFXMLNode=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CFXMLNodeGetTypeCode": {
    "args": [
     {
      "name": "node",
      "typestr": "^{__CFXMLNode=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFXMLNodeGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFXMLNodeGetVersion": {
    "args": [
     {
      "name": "node",
      "typestr": "^{__CFXMLNode=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFXMLParserAbort": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     },
     {
      "name": "errorCode",
      "typestr": "q"
     },
     {
      "name": "errorDescription",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFXMLParserCopyErrorDescription": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CFXMLParserCreate": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "xmlData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "dataSource",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "parseOptions",
      "typestr": "Q"
     },
     {
      "name": "versionOfNodes",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFXMLParserCallBacks=q^?^?^?^?^?}"
     },
     {
      "name": "context",
      "typestr": "^{CFXMLParserContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFXMLParser=}"
    }
   },
   "CFXMLParserCreateWithDataFromURL": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "dataSource",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "parseOptions",
      "typestr": "Q"
     },
     {
      "name": "versionOfNodes",
      "typestr": "q"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFXMLParserCallBacks=q^?^?^?^?^?}"
     },
     {
      "name": "context",
      "typestr": "^{CFXMLParserContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFXMLParser=}"
    }
   },
   "CFXMLParserGetCallBacks": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     },
     {
      "name": "callBacks",
      "typestr": "^{CFXMLParserCallBacks=q^?^?^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFXMLParserGetContext": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     },
     {
      "name": "context",
      "typestr": "^{CFXMLParserContext=q^v^?^?^?}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CFXMLParserGetDocument": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CFXMLParserGetLineNumber": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFXMLParserGetLocation": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFXMLParserGetSourceURL": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFURL=}"
    }
   },
   "CFXMLParserGetStatusCode": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CFXMLParserGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CFXMLParserParse": {
    "args": [
     {
      "name": "parser",
      "typestr": "^{__CFXMLParser=}"
     }
    ],
    "retval": {
     "typestr": "Z"
    }
   },
   "CFXMLTreeCreateFromData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "xmlData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "dataSource",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "parseOptions",
      "typestr": "Q"
     },
     {
      "name": "versionOfNodes",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTree=}"
    }
   },
   "CFXMLTreeCreateFromDataWithError": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "xmlData",
      "typestr": "^{__CFData=}"
     },
     {
      "name": "dataSource",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "parseOptions",
      "typestr": "Q"
     },
     {
      "name": "versionOfNodes",
      "typestr": "q"
     },
     {
      "name": "errorDict",
      "typestr": "^^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTree=}"
    }
   },
   "CFXMLTreeCreateWithDataFromURL": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "dataSource",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "parseOptions",
      "typestr": "Q"
     },
     {
      "name": "versionOfNodes",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTree=}"
    }
   },
   "CFXMLTreeCreateWithNode": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "node",
      "typestr": "^{__CFXMLNode=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFTree=}"
    }
   },
   "CFXMLTreeCreateXMLData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "xmlTree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CFXMLTreeGetNode": {
    "args": [
     {
      "name": "xmlTree",
      "typestr": "^{__CFTree=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFXMLNode=}"
    }
   }
  },
  "informal_protocols": {},
  "literals": {
   "kCFCoreFoundationVersionNumber10_0": 196.4,
   "kCFCoreFoundationVersionNumber10_0_3": 196.5,
   "kCFCoreFoundationVersionNumber10_1": 226.0,
   "kCFCoreFoundationVersionNumber10_10": 1151.16,
   "kCFCoreFoundationVersionNumber10_10_1": 1151.16,
   "kCFCoreFoundationVersionNumber10_10_3": 1153.18,
   "kCFCoreFoundationVersionNumber10_10_4": 1153.18,
   "kCFCoreFoundationVersionNumber10_10_5": 1153.18,
   "kCFCoreFoundationVersionNumber10_11_1": 1255.1,
   "kCFCoreFoundationVersionNumber10_11_2": 1256.14,
   "kCFCoreFoundationVersionNumber10_11_3": 1256.14,
   "kCFCoreFoundationVersionNumber10_11_4": 1258.1,
   "kCFCoreFoundationVersionNumber10_1_1": 226.0,
   "kCFCoreFoundationVersionNumber10_1_2": 227.2,
   "kCFCoreFoundationVersionNumber10_1_3": 227.2,
   "kCFCoreFoundationVersionNumber10_1_4": 227.3,
   "kCFCoreFoundationVersionNumber10_2": 263.0,
   "kCFCoreFoundationVersionNumber10_2_1": 263.1,
   "kCFCoreFoundationVersionNumber10_2_2": 263.1,
   "kCFCoreFoundationVersionNumber10_2_3": 263.3,
   "kCFCoreFoundationVersionNumber10_2_4": 263.3,
   "kCFCoreFoundationVersionNumber10_2_5": 263.5,
   "kCFCoreFoundationVersionNumber10_2_6": 263.5,
   "kCFCoreFoundationVersionNumber10_2_7": 263.5,
   "kCFCoreFoundationVersionNumber10_2_8": 263.5,
   "kCFCoreFoundationVersionNumber10_3": 299.0,
   "kCFCoreFoundationVersionNumber10_3_1": 299.0,
   "kCFCoreFoundationVersionNumber10_3_2": 299.0,
   "kCFCoreFoundationVersionNumber10_3_3": 299.3,
   "kCFCoreFoundationVersionNumber10_3_4": 299.31,
   "kCFCoreFoundationVersionNumber10_3_5": 299.31,
   "kCFCoreFoundationVersionNumber10_3_6": 299.32,
   "kCFCoreFoundationVersionNumber10_3_7": 299.33,
   "kCFCoreFoundationVersionNumber10_3_8": 299.33,
   "kCFCoreFoundationVersionNumber10_3_9": 299.35,
   "kCFCoreFoundationVersionNumber10_4": 368.0,
   "kCFCoreFoundationVersionNumber10_4_1": 368.1,
   "kCFCoreFoundationVersionNumber10_4_10": 368.28,
   "kCFCoreFoundationVersionNumber10_4_11": 368.31,
   "kCFCoreFoundationVersionNumber10_4_2": 368.11,
   "kCFCoreFoundationVersionNumber10_4_3": 368.18,
   "kCFCoreFoundationVersionNumber10_4_4_Intel": 368.26,
   "kCFCoreFoundationVersionNumber10_4_4_PowerPC": 368.25,
   "kCFCoreFoundationVersionNumber10_4_5_Intel": 368.26,
   "kCFCoreFoundationVersionNumber10_4_5_PowerPC": 368.25,
   "kCFCoreFoundationVersionNumber10_4_6_Intel": 368.26,
   "kCFCoreFoundationVersionNumber10_4_6_PowerPC": 368.25,
   "kCFCoreFoundationVersionNumber10_4_7": 368.27,
   "kCFCoreFoundationVersionNumber10_4_8": 368.27,
   "kCFCoreFoundationVersionNumber10_4_9": 368.28,
   "kCFCoreFoundationVersionNumber10_5": 476.0,
   "kCFCoreFoundationVersionNumber10_5_1": 476.0,
   "kCFCoreFoundationVersionNumber10_5_2": 476.1,
   "kCFCoreFoundationVersionNumber10_5_3": 476.13,
   "kCFCoreFoundationVersionNumber10_5_4": 476.14,
   "kCFCoreFoundationVersionNumber10_5_5": 476.15,
   "kCFCoreFoundationVersionNumber10_5_6": 476.17,
   "kCFCoreFoundationVersionNumber10_5_7": 476.18,
   "kCFCoreFoundationVersionNumber10_5_8": 476.19,
   "kCFCoreFoundationVersionNumber10_6": 550.0,
   "kCFCoreFoundationVersionNumber10_6_1": 550.0,
   "kCFCoreFoundationVersionNumber10_6_2": 550.13,
   "kCFCoreFoundationVersionNumber10_6_3": 550.19,
   "kCFCoreFoundationVersionNumber10_6_4": 550.29,
   "kCFCoreFoundationVersionNumber10_6_5": 550.42,
   "kCFCoreFoundationVersionNumber10_6_6": 550.42,
   "kCFCoreFoundationVersionNumber10_6_7": 550.42,
   "kCFCoreFoundationVersionNumber10_6_8": 550.43,
   "kCFCoreFoundationVersionNumber10_7": 635.0,
   "kCFCoreFoundationVersionNumber10_7_1": 635.0,
   "kCFCoreFoundationVersionNumber10_7_2": 635.15,
   "kCFCoreFoundationVersionNumber10_7_3": 635.19,
   "kCFCoreFoundationVersionNumber10_7_4": 635.21,
   "kCFCoreFoundationVersionNumber10_7_5": 635.21,
   "kCFCoreFoundationVersionNumber10_8": 744.0,
   "kCFCoreFoundationVersionNumber10_8_1": 744.0,
   "kCFCoreFoundationVersionNumber10_8_2": 744.12,
   "kCFCoreFoundationVersionNumber10_8_3": 744.18,
   "kCFCoreFoundationVersionNumber10_8_4": 744.19,
   "kCFCoreFoundationVersionNumber10_9": 855.11,
   "kCFCoreFoundationVersionNumber10_9_1": 855.11,
   "kCFCoreFoundationVersionNumber10_9_2": 855.14
  },
  "structs": {
   "CFGregorianDate": {
    "fieldnames": [
     "year",
     "month",
     "day",
     "hour",
     "minute",
     "second"
    ],
    "special": false,
    "typestr": "{CFGregorianDate=iccccd}"
   },
   "CFGregorianUnits": {
    "fieldnames": [
     "years",
     "months",
     "days",
     "hours",
     "minutes",
     "seconds"
    ],
    "special": false,
    "typestr": "{CFGregorianUnits=iiiiid}"
   },
   "CFRange": {
    "fieldnames": [
     "location",
     "length"
    ],
    "special": false,
    "typestr": "{CFRange=qq}"
   },
   "CFSocketSignature": {
    "fieldnames": [
     "protocolFamily",
     "socketType",
     "protocol",
     "address"
    ],
    "special": false,
    "typestr": "{CFSocketSignature=iii^{__CFData=}}"
   },
   "CFStreamError": {
    "fieldnames": [
     "domain",
     "error"
    ],
    "special": false,
    "typestr": "{CFStreamError=qi}"
   },
   "CFStringInlineBuffer": {
    "fieldnames": [
     "buffer",
     "theString",
     "directUniCharBuffer",
     "directCStringBuffer",
     "rangeToBuffer",
     "bufferedRangeStart",
     "bufferedRangeEnd"
    ],
    "special": true,
    "typestr": "{CFStringInlineBuffer=[64T]^{__CFString=}^T^c{CFRange=qq}qq}"
   },
   "CFSwappedFloat32": {
    "fieldnames": [
     "v"
    ],
    "special": false,
    "typestr": "{CFSwappedFloat32=I}"
   },
   "CFSwappedFloat64": {
    "fieldnames": [
     "v"
    ],
    "special": false,
    "typestr": "{CFSwappedFloat64=Q}"
   },
   "CFUUIDBytes": {
    "fieldnames": [
     "byte0",
     "byte1",
     "byte2",
     "byte3",
     "byte4",
     "byte5",
     "byte6",
     "byte7",
     "byte8",
     "byte9",
     "byte10",
     "byte11",
     "byte12",
     "byte13",
     "byte14",
     "byte15"
    ],
    "special": false,
    "typestr": "{CFUUIDBytes=CCCCCCCCCCCCCCCC}"
   },
   "CFXMLAttributeDeclarationInfo": {
    "fieldnames": [
     "attributeName",
     "typeString",
     "defaultString"
    ],
    "special": false,
    "typestr": "{CFXMLAttributeDeclarationInfo=^{__CFString=}^{__CFString=}^{__CFString=}}"
   },
   "CFXMLAttributeListDeclarationInfo": {
    "fieldnames": [
     "numberOfAttributes",
     "attributes"
    ],
    "special": false,
    "typestr": "{CFXMLAttributeListDeclarationInfo=q^{CFXMLAttributeDeclarationInfo=^{__CFString=}^{__CFString=}^{__CFString=}}}"
   },
   "CFXMLDocumentInfo": {
    "fieldnames": [
     "sourceURL",
     "encoding"
    ],
    "special": false,
    "typestr": "{CFXMLDocumentInfo=^{__CFURL=}I}"
   },
   "CFXMLDocumentTypeInfo": {
    "fieldnames": [
     "externalID"
    ],
    "special": false,
    "typestr": "{CFXMLDocumentTypeInfo={CFXMLExternalID=^{__CFURL=}^{__CFString=}}}"
   },
   "CFXMLElementInfo": {
    "fieldnames": [
     "attributes",
     "attributeOrder",
     "isEmpty",
     "_reserved"
    ],
    "special": true,
    "typestr": "{CFXMLElementInfo=^{__CFDictionary=}^{__CFArray=}Z[3c]}"
   },
   "CFXMLElementTypeDeclarationInfo": {
    "fieldnames": [
     "contentDescription"
    ],
    "special": false,
    "typestr": "{CFXMLElementTypeDeclarationInfo=^{__CFString=}}"
   },
   "CFXMLEntityInfo": {
    "fieldnames": [
     "entityType",
     "replacementText",
     "entityID",
     "notationName"
    ],
    "special": false,
    "typestr": "{CFXMLEntityInfo=q^{__CFString=}{CFXMLExternalID=^{__CFURL=}^{__CFString=}}^{__CFString=}}"
   },
   "CFXMLEntityReferenceInfo": {
    "fieldnames": [
     "entityType"
    ],
    "special": false,
    "typestr": "{CFXMLEntityReferenceInfo=q}"
   },
   "CFXMLExternalID": {
    "fieldnames": [
     "systemID",
     "publicID"
    ],
    "special": false,
    "typestr": "{CFXMLExternalID=^{__CFURL=}^{__CFString=}}"
   },
   "CFXMLNotationInfo": {
    "fieldnames": [
     "externalID"
    ],
    "special": false,
    "typestr": "{CFXMLNotationInfo={CFXMLExternalID=^{__CFURL=}^{__CFString=}}}"
   },
   "CFXMLProcessingInstructionInfo": {
    "fieldnames": [
     "dataString"
    ],
    "special": false,
    "typestr": "{CFXMLProcessingInstructionInfo=^{__CFString=}}"
   },
   "CGAffineTransform": {
    "fieldnames": [
     "a",
     "b",
     "c",
     "d",
     "tx",
     "ty"
    ],
    "special": false,
    "typestr": "{CGAffineTransform=dddddd}"
   },
   "CGAffineTransformComponents": {
    "fieldnames": [
     "scale",
     "horizontalShear",
     "rotation",
     "translation"
    ],
    "special": false,
    "typestr": "{CGAffineTransformComponents={CGSize=dd}dd{CGVector=dd}}"
   },
   "CGPoint": {
    "fieldnames": [
     "x",
     "y"
    ],
    "special": false,
    "typestr": "{CGPoint=dd}"
   },
   "CGRect": {
    "fieldnames": [
     "origin",
     "size"
    ],
    "special": false,
    "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
   },
   "CGSize": {
    "fieldnames": [
     "width",
     "height"
    ],
    "special": false,
    "typestr": "{CGSize=dd}"
   },
   "CGVector": {
    "fieldnames": [
     "dx",
     "dy"
    ],
    "special": false,
    "typestr": "{CGVector=dd}"
   }
  },
  "typedefs": {
   "CFAbsoluteTime": "CFTimeInterval",
   "CFAllocatorAllocateCallBack": "void *(*)(CFIndex, CFOptionFlags, void *)",
   "CFAllocatorContext": "struct CFAllocatorContext",
   "CFAllocatorCopyDescriptionCallBack": "CFStringRef (*)(const void *)",
   "CFAllocatorDeallocateCallBack": "void (*)(void *, void *)",
   "CFAllocatorPreferredSizeCallBack": "CFIndex (*)(CFIndex, CFOptionFlags, void *)",
   "CFAllocatorReallocateCallBack": "void *(*)(void *, CFIndex, CFOptionFlags, void *)",
   "CFAllocatorRef": "const struct __CFAllocator *",
   "CFAllocatorReleaseCallBack": "void (*)(const void *)",
   "CFAllocatorRetainCallBack": "const void *(*)(const void *)",
   "CFAllocatorTypeID": "unsigned long long",
   "CFArrayApplierFunction": "void (*)(const void *, void *)",
   "CFArrayCallBacks": "struct CFArrayCallBacks",
   "CFArrayCopyDescriptionCallBack": "CFStringRef (*)(const void *)",
   "CFArrayEqualCallBack": "Boolean (*)(const void *, const void *)",
   "CFArrayRef": "const struct __CFArray *",
   "CFArrayReleaseCallBack": "void (*)(CFAllocatorRef, const void *)",
   "CFArrayRetainCallBack": "const void *(*)(CFAllocatorRef, const void *)",
   "CFAttributedStringRef": "const struct __CFAttributedString *",
   "CFBagApplierFunction": "void (*)(const void *, void *)",
   "CFBagCallBacks": "struct CFBagCallBacks",
   "CFBagCopyDescriptionCallBack": "CFStringRef (*)(const void *)",
   "CFBagEqualCallBack": "Boolean (*)(const void *, const void *)",
   "CFBagHashCallBack": "CFHashCode (*)(const void *)",
   "CFBagRef": "const struct __CFBag *",
   "CFBagReleaseCallBack": "void (*)(CFAllocatorRef, const void *)",
   "CFBagRetainCallBack": "const void *(*)(CFAllocatorRef, const void *)",
   "CFBinaryHeapApplierFunction": "void (*)(const void *, void *)",
   "CFBinaryHeapCallBacks": "struct CFBinaryHeapCallBacks",
   "CFBinaryHeapCompareContext": "struct CFBinaryHeapCompareContext",
   "CFBinaryHeapRef": "struct __CFBinaryHeap *",
   "CFBit": "UInt32",
   "CFBitVectorRef": "const struct __CFBitVector *",
   "CFBooleanRef": "const struct __CFBoolean *",
   "CFBundleRef": "struct __CFBundle *",
   "CFBundleRefNum": "int",
   "CFByteOrder": "CFIndex",
   "CFCalendarIdentifier": "CFStringRef",
   "CFCalendarRef": "struct __CFCalendar *",
   "CFCalendarUnit": "enum CFCalendarUnit",
   "CFCharacterSetPredefinedSet": "enum CFCharacterSetPredefinedSet",
   "CFCharacterSetRef": "const struct __CFCharacterSet *",
   "CFComparatorFunction": "CFComparisonResult (*)(const void *, const void *, void *)",
   "CFComparisonResult": "enum CFComparisonResult",
   "CFDataRef": "const struct __CFData *",
   "CFDataSearchFlags": "enum CFDataSearchFlags",
   "CFDateFormatterKey": "CFStringRef",
   "CFDateFormatterRef": "struct __CFDateFormatter *",
   "CFDateFormatterStyle": "enum CFDateFormatterStyle",
   "CFDateRef": "const struct __CFDate *",
   "CFDictionaryApplierFunction": "void (*)(const void *, const void *, void *)",
   "CFDictionaryCopyDescriptionCallBack": "CFStringRef (*)(const void *)",
   "CFDictionaryEqualCallBack": "Boolean (*)(const void *, const void *)",
   "CFDictionaryHashCallBack": "CFHashCode (*)(const void *)",
   "CFDictionaryKeyCallBacks": "struct CFDictionaryKeyCallBacks",
   "CFDictionaryRef": "const struct __CFDictionary *",
   "CFDictionaryReleaseCallBack": "void (*)(CFAllocatorRef, const void *)",
   "CFDictionaryRetainCallBack": "const void *(*)(CFAllocatorRef, const void *)",
   "CFDictionaryValueCallBacks": "struct CFDictionaryValueCallBacks",
   "CFErrorDomain": "CFStringRef",
   "CFErrorRef": "struct __CFError *",
   "CFFileDescriptorCallBack": "void (*)(CFFileDescriptorRef, CFOptionFlags, void *)",
   "CFFileDescriptorContext": "struct CFFileDescriptorContext",
   "CFFileDescriptorNativeDescriptor": "int",
   "CFFileDescriptorRef": "struct __CFFileDescriptor *",
   "CFFileSecurityClearOptions": "enum CFFileSecurityClearOptions",
   "CFFileSecurityRef": "struct __CFFileSecurity *",
   "CFGregorianDate": "struct CFGregorianDate",
   "CFGregorianUnitFlags": "enum CFGregorianUnitFlags",
   "CFGregorianUnits": "struct CFGregorianUnits",
   "CFHashCode": "unsigned long",
   "CFISO8601DateFormatOptions": "enum CFISO8601DateFormatOptions",
   "CFIndex": "long",
   "CFLocaleIdentifier": "CFStringRef",
   "CFLocaleKey": "CFStringRef",
   "CFLocaleLanguageDirection": "enum CFLocaleLanguageDirection",
   "CFLocaleRef": "const struct __CFLocale *",
   "CFMachPortCallBack": "void (*)(CFMachPortRef, void *, CFIndex, void *)",
   "CFMachPortContext": "struct CFMachPortContext",
   "CFMachPortInvalidationCallBack": "void (*)(CFMachPortRef, void *)",
   "CFMachPortRef": "struct __CFMachPort *",
   "CFMessagePortCallBack": "CFDataRef (*)(CFMessagePortRef, SInt32, CFDataRef, void *)",
   "CFMessagePortContext": "struct CFMessagePortContext",
   "CFMessagePortInvalidationCallBack": "void (*)(CFMessagePortRef, void *)",
   "CFMessagePortRef": "struct __CFMessagePort *",
   "CFMutableArrayRef": "struct __CFArray *",
   "CFMutableAttributedStringRef": "struct __CFAttributedString *",
   "CFMutableBagRef": "struct __CFBag *",
   "CFMutableBitVectorRef": "struct __CFBitVector *",
   "CFMutableCharacterSetRef": "struct __CFCharacterSet *",
   "CFMutableDataRef": "struct __CFData *",
   "CFMutableDictionaryRef": "struct __CFDictionary *",
   "CFMutableSetRef": "struct __CFSet *",
   "CFMutableStringRef": "struct __CFString *",
   "CFNotificationCallback": "void (*)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef)",
   "CFNotificationCenterRef": "struct __CFNotificationCenter *",
   "CFNotificationName": "CFStringRef",
   "CFNotificationSuspensionBehavior": "enum CFNotificationSuspensionBehavior",
   "CFNullRef": "const struct __CFNull *",
   "CFNumberFormatterKey": "CFStringRef",
   "CFNumberFormatterOptionFlags": "enum CFNumberFormatterOptionFlags",
   "CFNumberFormatterPadPosition": "enum CFNumberFormatterPadPosition",
   "CFNumberFormatterRef": "struct __CFNumberFormatter *",
   "CFNumberFormatterRoundingMode": "enum CFNumberFormatterRoundingMode",
   "CFNumberFormatterStyle": "enum CFNumberFormatterStyle",
   "CFNumberRef": "const struct __CFNumber *",
   "CFNumberType": "enum CFNumberType",
   "CFOptionFlags": "unsigned long",
   "CFPlugInDynamicRegisterFunction": "void (*)(CFPlugInRef)",
   "CFPlugInFactoryFunction": "void *(*)(CFAllocatorRef, CFUUIDRef)",
   "CFPlugInInstanceDeallocateInstanceDataFunction": "void (*)(void *)",
   "CFPlugInInstanceGetInterfaceFunction": "Boolean (*)(CFPlugInInstanceRef, CFStringRef, void **)",
   "CFPlugInInstanceRef": "struct __CFPlugInInstance *",
   "CFPlugInRef": "struct __CFBundle *",
   "CFPlugInUnloadFunction": "void (*)(CFPlugInRef)",
   "CFPropertyListFormat": "enum CFPropertyListFormat",
   "CFPropertyListMutabilityOptions": "enum CFPropertyListMutabilityOptions",
   "CFPropertyListRef": "CFTypeRef",
   "CFRange": "struct CFRange",
   "CFReadStreamClientCallBack": "void (*)(CFReadStreamRef _Null_unspecified, CFStreamEventType, void * _Null_unspecified)",
   "CFReadStreamRef": "struct __CFReadStream *",
   "CFRunLoopActivity": "enum CFRunLoopActivity",
   "CFRunLoopMode": "CFStringRef",
   "CFRunLoopObserverCallBack": "void (*)(CFRunLoopObserverRef, CFRunLoopActivity, void *)",
   "CFRunLoopObserverContext": "struct CFRunLoopObserverContext",
   "CFRunLoopObserverRef": "struct __CFRunLoopObserver *",
   "CFRunLoopRef": "struct __CFRunLoop *",
   "CFRunLoopRunResult": "enum CFRunLoopRunResult",
   "CFRunLoopSourceContext": "struct CFRunLoopSourceContext",
   "CFRunLoopSourceContext1": "struct CFRunLoopSourceContext1",
   "CFRunLoopSourceRef": "struct __CFRunLoopSource *",
   "CFRunLoopTimerCallBack": "void (*)(CFRunLoopTimerRef, void *)",
   "CFRunLoopTimerContext": "struct CFRunLoopTimerContext",
   "CFRunLoopTimerRef": "struct __CFRunLoopTimer *",
   "CFSetApplierFunction": "void (*)(const void *, void *)",
   "CFSetCallBacks": "struct CFSetCallBacks",
   "CFSetCopyDescriptionCallBack": "CFStringRef (*)(const void *)",
   "CFSetEqualCallBack": "Boolean (*)(const void *, const void *)",
   "CFSetHashCallBack": "CFHashCode (*)(const void *)",
   "CFSetRef": "const struct __CFSet *",
   "CFSetReleaseCallBack": "void (*)(CFAllocatorRef, const void *)",
   "CFSetRetainCallBack": "const void *(*)(CFAllocatorRef, const void *)",
   "CFSocketCallBack": "void (*)(CFSocketRef, CFSocketCallBackType, CFDataRef, const void *, void *)",
   "CFSocketCallBackType": "enum CFSocketCallBackType",
   "CFSocketContext": "struct CFSocketContext",
   "CFSocketError": "enum CFSocketError",
   "CFSocketNativeHandle": "int",
   "CFSocketRef": "struct __CFSocket *",
   "CFSocketSignature": "struct CFSocketSignature",
   "CFStreamClientContext": "struct CFStreamClientContext",
   "CFStreamError": "struct CFStreamError",
   "CFStreamErrorDomain": "enum CFStreamErrorDomain",
   "CFStreamEventType": "enum CFStreamEventType",
   "CFStreamPropertyKey": "CFStringRef",
   "CFStreamStatus": "enum CFStreamStatus",
   "CFStringBuiltInEncodings": "enum CFStringBuiltInEncodings",
   "CFStringCompareFlags": "enum CFStringCompareFlags",
   "CFStringEncoding": "UInt32",
   "CFStringEncodings": "enum CFStringEncodings",
   "CFStringInlineBuffer": "struct CFStringInlineBuffer",
   "CFStringNormalizationForm": "enum CFStringNormalizationForm",
   "CFStringRef": "const struct __CFString *",
   "CFStringTokenizerRef": "struct __CFStringTokenizer *",
   "CFStringTokenizerTokenType": "enum CFStringTokenizerTokenType",
   "CFSwappedFloat32": "struct CFSwappedFloat32",
   "CFSwappedFloat64": "struct CFSwappedFloat64",
   "CFTimeInterval": "double",
   "CFTimeZoneNameStyle": "enum CFTimeZoneNameStyle",
   "CFTimeZoneRef": "const struct __CFTimeZone *",
   "CFTreeApplierFunction": "void (*)(const void *, void *)",
   "CFTreeContext": "struct CFTreeContext",
   "CFTreeCopyDescriptionCallBack": "CFStringRef (*)(const void *)",
   "CFTreeRef": "struct __CFTree *",
   "CFTreeReleaseCallBack": "void (*)(const void *)",
   "CFTreeRetainCallBack": "const void *(*)(const void *)",
   "CFTypeID": "unsigned long",
   "CFTypeRef": "const void *",
   "CFURLBookmarkCreationOptions": "enum CFURLBookmarkCreationOptions",
   "CFURLBookmarkFileCreationOptions": "CFOptionFlags",
   "CFURLBookmarkResolutionOptions": "enum CFURLBookmarkResolutionOptions",
   "CFURLComponentType": "enum CFURLComponentType",
   "CFURLEnumeratorOptions": "enum CFURLEnumeratorOptions",
   "CFURLEnumeratorRef": "const struct __CFURLEnumerator *",
   "CFURLEnumeratorResult": "enum CFURLEnumeratorResult",
   "CFURLError": "enum CFURLError",
   "CFURLPathStyle": "enum CFURLPathStyle",
   "CFURLRef": "const struct __CFURL *",
   "CFUUIDBytes": "struct CFUUIDBytes",
   "CFUUIDRef": "const struct __CFUUID *",
   "CFUserNotificationCallBack": "void (*)(CFUserNotificationRef, CFOptionFlags)",
   "CFUserNotificationRef": "struct __CFUserNotification *",
   "CFWriteStreamClientCallBack": "void (*)(CFWriteStreamRef _Null_unspecified, CFStreamEventType, void * _Null_unspecified)",
   "CFWriteStreamRef": "struct __CFWriteStream *",
   "CFXMLAttributeDeclarationInfo": "struct CFXMLAttributeDeclarationInfo",
   "CFXMLAttributeListDeclarationInfo": "struct CFXMLAttributeListDeclarationInfo",
   "CFXMLDocumentInfo": "struct CFXMLDocumentInfo",
   "CFXMLDocumentTypeInfo": "struct CFXMLDocumentTypeInfo",
   "CFXMLElementInfo": "struct CFXMLElementInfo",
   "CFXMLElementTypeDeclarationInfo": "struct CFXMLElementTypeDeclarationInfo",
   "CFXMLEntityInfo": "struct CFXMLEntityInfo",
   "CFXMLEntityReferenceInfo": "struct CFXMLEntityReferenceInfo",
   "CFXMLEntityTypeCode": "enum CFXMLEntityTypeCode",
   "CFXMLExternalID": "struct CFXMLExternalID",
   "CFXMLNodeRef": "const struct __CFXMLNode *",
   "CFXMLNodeTypeCode": "enum CFXMLNodeTypeCode",
   "CFXMLNotationInfo": "struct CFXMLNotationInfo",
   "CFXMLParserAddChildCallBack": "void (*)(CFXMLParserRef, void *, void *, void *)",
   "CFXMLParserCallBacks": "struct CFXMLParserCallBacks",
   "CFXMLParserContext": "struct CFXMLParserContext",
   "CFXMLParserCopyDescriptionCallBack": "CFStringRef (*)(const void *)",
   "CFXMLParserCreateXMLStructureCallBack": "void *(*)(CFXMLParserRef, CFXMLNodeRef, void *)",
   "CFXMLParserEndXMLStructureCallBack": "void (*)(CFXMLParserRef, void *, void *)",
   "CFXMLParserHandleErrorCallBack": "Boolean (*)(CFXMLParserRef, CFXMLParserStatusCode, void *)",
   "CFXMLParserOptions": "enum CFXMLParserOptions",
   "CFXMLParserRef": "struct __CFXMLParser *",
   "CFXMLParserReleaseCallBack": "void (*)(const void *)",
   "CFXMLParserResolveExternalEntityCallBack": "CFDataRef (*)(CFXMLParserRef, CFXMLExternalID *, void *)",
   "CFXMLParserRetainCallBack": "const void *(*)(const void *)",
   "CFXMLParserStatusCode": "enum CFXMLParserStatusCode",
   "CFXMLProcessingInstructionInfo": "struct CFXMLProcessingInstructionInfo",
   "CFXMLTreeRef": "CFTreeRef",
   "CGAffineTransform": "struct CGAffineTransform",
   "CGAffineTransformComponents": "struct CGAffineTransformComponents",
   "CGFloat": "double",
   "CGPoint": "struct CGPoint",
   "CGRect": "struct CGRect",
   "CGRectEdge": "enum CGRectEdge",
   "CGSize": "struct CGSize",
   "CGVector": "struct CGVector"
  }
 },
 "framework": "CoreFoundation",
 "headers": [
  "CFArray.h",
  "CFAttributedString.h",
  "CFAvailability.h",
  "CFBag.h",
  "CFBase.h",
  "CFBinaryHeap.h",
  "CFBitVector.h",
  "CFBundle.h",
  "CFByteOrder.h",
  "CFCGTypes.h",
  "CFCalendar.h",
  "CFCharacterSet.h",
  "CFData.h",
  "CFDate.h",
  "CFDateFormatter.h",
  "CFDictionary.h",
  "CFError.h",
  "CFFileDescriptor.h",
  "CFFileSecurity.h",
  "CFLocale.h",
  "CFMachPort.h",
  "CFMessagePort.h",
  "CFNotificationCenter.h",
  "CFNumber.h",
  "CFNumberFormatter.h",
  "CFPlugIn.h",
  "CFPreferences.h",
  "CFPropertyList.h",
  "CFRunLoop.h",
  "CFSet.h",
  "CFSocket.h",
  "CFStream.h",
  "CFString.h",
  "CFStringEncodingExt.h",
  "CFStringTokenizer.h",
  "CFTimeZone.h",
  "CFTree.h",
  "CFURL.h",
  "CFURLAccess.h",
  "CFURLEnumerator.h",
  "CFUUID.h",
  "CFUserNotification.h",
  "CFUtilities.h",
  "CFXMLNode.h",
  "CFXMLParser.h"
 ],
 "release": "10.16",
 "sdk": "/Users/ronald/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk"
}
