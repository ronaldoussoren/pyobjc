//             GENERATED FILE DO NOT EDIT
//
// This file was generated by objective.metadata
// Last update: Tue Oct 21 16:35:14 2025
{
 "arch": "arm64",
 "definitions": {
  "aliases": {},
  "called_definitions": {},
  "cftypes": {
   "LSMMapRef": {
    "gettypeid_func": "LSMMapGetTypeID",
    "typestr": "^{__LSMMap=}"
   },
   "LSMResultRef": {
    "gettypeid_func": "LSMResultGetTypeID",
    "typestr": "^{__LSMResult=}"
   },
   "LSMTextRef": {
    "gettypeid_func": "LSMTextGetTypeID",
    "typestr": "^{__LSMText=}"
   }
  },
  "classes": {},
  "enum": {
   "kLSMClusterAgglomerative": 4,
   "kLSMClusterCategories": 0,
   "kLSMClusterKMeans": 0,
   "kLSMClusterTokens": 2,
   "kLSMClusterWords": 1,
   "kLSMMapBadCluster": -6644,
   "kLSMMapBadPath": -6643,
   "kLSMMapDiscardCounts": 1,
   "kLSMMapHashText": 256,
   "kLSMMapLoadMutable": 2,
   "kLSMMapNoSuchCategory": -6641,
   "kLSMMapOutOfState": -6640,
   "kLSMMapOverflow": -6645,
   "kLSMMapPairs": 1,
   "kLSMMapTriplets": 2,
   "kLSMMapWriteError": -6642,
   "kLSMResultBestWords": 1,
   "kLSMTextApplySpamHeuristics": 4,
   "kLSMTextPreserveAcronyms": 2,
   "kLSMTextPreserveCase": 1
  },
  "enum_type": {},
  "expressions": {},
  "externs": {},
  "formal_protocols": {},
  "func_macros": {},
  "functions": {
   "LSMMapAddCategory": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "LSMMapAddText": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "textref",
      "typestr": "^{__LSMText=}"
     },
     {
      "name": "category",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMMapAddTextWithWeight": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "textref",
      "typestr": "^{__LSMText=}"
     },
     {
      "name": "category",
      "typestr": "I"
     },
     {
      "name": "weight",
      "typestr": "f"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMMapApplyClusters": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "clusters",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMMapCompile": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMMapCreate": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "flags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__LSMMap=}"
    }
   },
   "LSMMapCreateClusters": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "subset",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "numClusters",
      "typestr": "q"
     },
     {
      "name": "flags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "LSMMapCreateFromURL": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "file",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "flags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__LSMMap=}"
    }
   },
   "LSMMapGetCategoryCount": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "LSMMapGetProperties": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "LSMMapGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "LSMMapSetProperties": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "properties",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "LSMMapSetStopWords": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "textref",
      "typestr": "^{__LSMText=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMMapStartTraining": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMMapWriteToStream": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "textref",
      "typestr": "^{__LSMText=}"
     },
     {
      "name": "stream",
      "typestr": "^{__CFWriteStream=}"
     },
     {
      "name": "options",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMMapWriteToURL": {
    "args": [
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "file",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "flags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMResultCopyToken": {
    "args": [
     {
      "name": "result",
      "typestr": "^{__LSMResult=}"
     },
     {
      "name": "n",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "LSMResultCopyTokenCluster": {
    "args": [
     {
      "name": "result",
      "typestr": "^{__LSMResult=}"
     },
     {
      "name": "n",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "LSMResultCopyWord": {
    "args": [
     {
      "name": "result",
      "typestr": "^{__LSMResult=}"
     },
     {
      "name": "n",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "LSMResultCopyWordCluster": {
    "args": [
     {
      "name": "result",
      "typestr": "^{__LSMResult=}"
     },
     {
      "name": "n",
      "typestr": "q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "LSMResultCreate": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     },
     {
      "name": "textref",
      "typestr": "^{__LSMText=}"
     },
     {
      "name": "numResults",
      "typestr": "q"
     },
     {
      "name": "flags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__LSMResult=}"
    }
   },
   "LSMResultGetCategory": {
    "args": [
     {
      "name": "result",
      "typestr": "^{__LSMResult=}"
     },
     {
      "name": "n",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "LSMResultGetCount": {
    "args": [
     {
      "name": "result",
      "typestr": "^{__LSMResult=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "LSMResultGetScore": {
    "args": [
     {
      "name": "result",
      "typestr": "^{__LSMResult=}"
     },
     {
      "name": "n",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "f"
    }
   },
   "LSMResultGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "LSMTextAddToken": {
    "args": [
     {
      "name": "textref",
      "typestr": "^{__LSMText=}"
     },
     {
      "name": "token",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMTextAddWord": {
    "args": [
     {
      "name": "textref",
      "typestr": "^{__LSMText=}"
     },
     {
      "name": "word",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMTextAddWords": {
    "args": [
     {
      "name": "textref",
      "typestr": "^{__LSMText=}"
     },
     {
      "name": "words",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "locale",
      "typestr": "^{__CFLocale=}"
     },
     {
      "name": "flags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "LSMTextCreate": {
    "args": [
     {
      "name": "alloc",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "mapref",
      "typestr": "^{__LSMMap=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__LSMText=}"
    }
   },
   "LSMTextGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   }
  },
  "informal_protocols": {},
  "literals": {
   "kLSMAlgorithmDense": {
    "unicode": true,
    "value": "LSMAlgorithmDense"
   },
   "kLSMAlgorithmKey": {
    "unicode": true,
    "value": "LSMAlgorithm"
   },
   "kLSMAlgorithmSparse": {
    "unicode": true,
    "value": "LSMAlgorithmSparse"
   },
   "kLSMDimensionKey": {
    "unicode": true,
    "value": "LSMDimension"
   },
   "kLSMIterationsKey": {
    "unicode": true,
    "value": "LSMIterations"
   },
   "kLSMPrecisionDouble": {
    "unicode": true,
    "value": "LSMPrecisionDouble"
   },
   "kLSMPrecisionFloat": {
    "unicode": true,
    "value": "LSMPrecisionFloat"
   },
   "kLSMPrecisionKey": {
    "unicode": true,
    "value": "LSMPrecision"
   },
   "kLSMSweepAgeKey": {
    "unicode": true,
    "value": "LSMSweepAge"
   },
   "kLSMSweepCutoffKey": {
    "unicode": true,
    "value": "LSMSweepCutoff"
   }
  },
  "structs": {},
  "typedefs": {
   "LSMCategory": "uint32_t",
   "LSMMapRef": "struct __LSMMap *",
   "LSMResultRef": "struct __LSMResult *",
   "LSMTextRef": "struct __LSMText *"
  }
 },
 "framework": "LatentSemanticMapping",
 "headers": [],
 "release": "26.0.1",
 "sdk": "/Users/ronald/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk"
}
