//             GENERATED FILE DO NOT EDIT
//
// This file was generated by objective.metadata
// Last update: Wed Nov 13 11:46:14 2024
{
 "arch": "x86_64",
 "definitions": {
  "aliases": {
   "CGAffineTransformMake": "__CGAffineTransformMake",
   "CGDisplayNoErr": "kCGErrorSuccess",
   "CGEventNoErr": "kCGErrorSuccess",
   "CGEventSupressionState": "CGEventSuppressionState",
   "CGPointApplyAffineTransform": "__CGPointApplyAffineTransform",
   "CGPointEqualToPoint": "__CGPointEqualToPoint",
   "CGSizeApplyAffineTransform": "__CGSizeApplyAffineTransform",
   "CGSizeEqualToSize": "__CGSizeEqualToSize",
   "CG_EXTERN_64": "CG_EXTERN",
   "CG_LOCAL_64": "CG_LOCAL",
   "CG_NONNULL_ARRAY": "__nonnull",
   "CG_NULLABLE_ARRAY": "__nullable",
   "CG_OBSOLETE": "__CG_DEPRECATED",
   "CG_PRIVATE_EXTERN": "CG_LOCAL",
   "CG_SKYLIGHT_EXTERN_64": "CG_EXTERN",
   "cg_nullable": "__nullable",
   "kCGBitmapByteOrder16Big": "kCGImageByteOrder16Big",
   "kCGBitmapByteOrder16Little": "kCGImageByteOrder16Little",
   "kCGBitmapByteOrder32Big": "kCGImageByteOrder32Big",
   "kCGBitmapByteOrder32Little": "kCGImageByteOrder32Little",
   "kCGBitmapByteOrderDefault": "kCGImageByteOrderDefault",
   "kCGBitmapByteOrderMask": "kCGImageByteOrderMask",
   "kCGEventSupressionStateRemoteMouseDrag": "kCGEventSuppressionStateRemoteMouseDrag",
   "kCGEventSupressionStateSupressionInterval": "kCGEventSuppressionStateSuppressionInterval",
   "kCGNumberOfEventSupressionStates": "kCGNumberOfEventSuppressionStates",
   "kCGWindowBackingCFNumberType": "kCFNumberSInt32Type",
   "kCGWindowIDCFNumberType": "kCFNumberSInt32Type",
   "kCGWindowSharingCFNumberType": "kCFNumberSInt32Type"
  },
  "called_definitions": {},
  "cftypes": {
   "CGEventRef": {
    "gettypeid_func": "CGEventGetTypeID",
    "typestr": "^{__CGEvent=}"
   },
   "CGEventSourceRef": {
    "gettypeid_func": "CGEventSourceGetTypeID",
    "typestr": "^{__CGEventSource=}"
   },
   "CGEventTapProxy": {
    "typestr": "^{__CGEventTapProxy=}"
   },
   "IOSurfaceRef": {
    "typestr": "^{__IOSurface=}"
   }
  },
  "classes": {},
  "enum": {
   "CGGlyphMax": 1,
   "CGGlyphMin": 0,
   "CGPDFDataFormatJPEG2000": 2,
   "CGPDFDataFormatJPEGEncoded": 1,
   "CGPDFDataFormatRaw": 0,
   "CGPDFTagTypeAnnotation": 507,
   "CGPDFTagTypeArt": 102,
   "CGPDFTagTypeBibliography": 504,
   "CGPDFTagTypeBlockQuote": 105,
   "CGPDFTagTypeCaption": 106,
   "CGPDFTagTypeCode": 505,
   "CGPDFTagTypeDiv": 104,
   "CGPDFTagTypeDocument": 100,
   "CGPDFTagTypeFigure": 700,
   "CGPDFTagTypeForm": 702,
   "CGPDFTagTypeFormula": 701,
   "CGPDFTagTypeHeader": 201,
   "CGPDFTagTypeHeader1": 202,
   "CGPDFTagTypeHeader2": 203,
   "CGPDFTagTypeHeader3": 204,
   "CGPDFTagTypeHeader4": 205,
   "CGPDFTagTypeHeader5": 206,
   "CGPDFTagTypeHeader6": 207,
   "CGPDFTagTypeIndex": 109,
   "CGPDFTagTypeLabel": 302,
   "CGPDFTagTypeLink": 506,
   "CGPDFTagTypeList": 300,
   "CGPDFTagTypeListBody": 303,
   "CGPDFTagTypeListItem": 301,
   "CGPDFTagTypeNonStructure": 110,
   "CGPDFTagTypeNote": 502,
   "CGPDFTagTypeObject": 800,
   "CGPDFTagTypeParagraph": 200,
   "CGPDFTagTypePart": 101,
   "CGPDFTagTypePrivate": 111,
   "CGPDFTagTypeQuote": 501,
   "CGPDFTagTypeReference": 503,
   "CGPDFTagTypeRuby": 600,
   "CGPDFTagTypeRubyAnnotationText": 602,
   "CGPDFTagTypeRubyBaseText": 601,
   "CGPDFTagTypeRubyPunctuation": 603,
   "CGPDFTagTypeSection": 103,
   "CGPDFTagTypeSpan": 500,
   "CGPDFTagTypeTOC": 107,
   "CGPDFTagTypeTOCI": 108,
   "CGPDFTagTypeTable": 400,
   "CGPDFTagTypeTableBody": 405,
   "CGPDFTagTypeTableDataCell": 403,
   "CGPDFTagTypeTableFooter": 406,
   "CGPDFTagTypeTableHeader": 404,
   "CGPDFTagTypeTableHeaderCell": 402,
   "CGPDFTagTypeTableRow": 401,
   "CGPDFTagTypeWarichu": 604,
   "CGPDFTagTypeWarichuPunctiation": 606,
   "CGPDFTagTypeWarichuText": 605,
   "CG_HDR_BT_2100": 1,
   "kCGAnnotatedSessionEventTap": 2,
   "kCGAssistiveTechHighWindowLevel": 1500,
   "kCGAssistiveTechHighWindowLevelKey": 20,
   "kCGBackingStoreBuffered": 2,
   "kCGBackingStoreNonretained": 1,
   "kCGBackingStoreRetained": 0,
   "kCGBackstopMenuLevel": -20,
   "kCGBackstopMenuLevelKey": 3,
   "kCGBaseWindowLevelKey": 0,
   "kCGBitmapAlphaInfoMask": 31,
   "kCGBitmapByteOrder16Big": 12288,
   "kCGBitmapByteOrder16Little": 4096,
   "kCGBitmapByteOrder32Big": 16384,
   "kCGBitmapByteOrder32Little": 8192,
   "kCGBitmapByteOrderDefault": 0,
   "kCGBitmapByteOrderMask": 28672,
   "kCGBitmapFloatComponents": 256,
   "kCGBitmapFloatInfoMask": 3840,
   "kCGBlendModeClear": 16,
   "kCGBlendModeColor": 14,
   "kCGBlendModeColorBurn": 7,
   "kCGBlendModeColorDodge": 6,
   "kCGBlendModeCopy": 17,
   "kCGBlendModeDarken": 4,
   "kCGBlendModeDestinationAtop": 24,
   "kCGBlendModeDestinationIn": 22,
   "kCGBlendModeDestinationOut": 23,
   "kCGBlendModeDestinationOver": 21,
   "kCGBlendModeDifference": 10,
   "kCGBlendModeExclusion": 11,
   "kCGBlendModeHardLight": 9,
   "kCGBlendModeHue": 12,
   "kCGBlendModeLighten": 5,
   "kCGBlendModeLuminosity": 15,
   "kCGBlendModeMultiply": 1,
   "kCGBlendModeNormal": 0,
   "kCGBlendModeOverlay": 3,
   "kCGBlendModePlusDarker": 26,
   "kCGBlendModePlusLighter": 27,
   "kCGBlendModeSaturation": 13,
   "kCGBlendModeScreen": 2,
   "kCGBlendModeSoftLight": 8,
   "kCGBlendModeSourceAtop": 20,
   "kCGBlendModeSourceIn": 18,
   "kCGBlendModeSourceOut": 19,
   "kCGBlendModeXOR": 25,
   "kCGCaptureNoFill": 1,
   "kCGCaptureNoOptions": 0,
   "kCGColorConversionTransformApplySpace": 2,
   "kCGColorConversionTransformFromSpace": 0,
   "kCGColorConversionTransformToSpace": 1,
   "kCGColorSpaceModelCMYK": 2,
   "kCGColorSpaceModelDeviceN": 4,
   "kCGColorSpaceModelIndexed": 5,
   "kCGColorSpaceModelLab": 3,
   "kCGColorSpaceModelMonochrome": 0,
   "kCGColorSpaceModelPattern": 6,
   "kCGColorSpaceModelRGB": 1,
   "kCGColorSpaceModelUnknown": -1,
   "kCGColorSpaceModelXYZ": 7,
   "kCGConfigureForAppOnly": 0,
   "kCGConfigureForSession": 1,
   "kCGConfigurePermanently": 2,
   "kCGCursorWindowLevelKey": 19,
   "kCGDesktopIconWindowLevelKey": 18,
   "kCGDesktopWindowLevelKey": 2,
   "kCGDisplayAddFlag": 16,
   "kCGDisplayBeginConfigurationFlag": 1,
   "kCGDisplayDesktopShapeChangedFlag": 4096,
   "kCGDisplayDisabledFlag": 512,
   "kCGDisplayEnabledFlag": 256,
   "kCGDisplayFadeReservationInvalidToken": 0,
   "kCGDisplayMirrorFlag": 1024,
   "kCGDisplayMovedFlag": 2,
   "kCGDisplayRemoveFlag": 32,
   "kCGDisplaySetMainFlag": 4,
   "kCGDisplaySetModeFlag": 8,
   "kCGDisplayStreamFrameStatusFrameBlank": 2,
   "kCGDisplayStreamFrameStatusFrameComplete": 0,
   "kCGDisplayStreamFrameStatusFrameIdle": 1,
   "kCGDisplayStreamFrameStatusStopped": 3,
   "kCGDisplayStreamUpdateDirtyRects": 2,
   "kCGDisplayStreamUpdateMovedRects": 1,
   "kCGDisplayStreamUpdateReducedDirtyRects": 3,
   "kCGDisplayStreamUpdateRefreshedRects": 0,
   "kCGDisplayUnMirrorFlag": 2048,
   "kCGDockWindowLevel": 20,
   "kCGDockWindowLevelKey": 7,
   "kCGDraggingWindowLevel": 500,
   "kCGDraggingWindowLevelKey": 12,
   "kCGEncodingFontSpecific": 0,
   "kCGEncodingMacRoman": 1,
   "kCGErrorCannotComplete": 1004,
   "kCGErrorFailure": 1000,
   "kCGErrorIllegalArgument": 1001,
   "kCGErrorInvalidConnection": 1002,
   "kCGErrorInvalidContext": 1003,
   "kCGErrorInvalidOperation": 1010,
   "kCGErrorNoneAvailable": 1011,
   "kCGErrorNotImplemented": 1006,
   "kCGErrorRangeCheck": 1007,
   "kCGErrorSuccess": 0,
   "kCGErrorTypeCheck": 1008,
   "kCGEventFilterMaskPermitLocalKeyboardEvents": 2,
   "kCGEventFilterMaskPermitLocalMouseEvents": 1,
   "kCGEventFilterMaskPermitSystemDefinedEvents": 4,
   "kCGEventFlagMaskAlphaShift": 65536,
   "kCGEventFlagMaskAlternate": 524288,
   "kCGEventFlagMaskCommand": 1048576,
   "kCGEventFlagMaskControl": 262144,
   "kCGEventFlagMaskHelp": 4194304,
   "kCGEventFlagMaskNonCoalesced": 256,
   "kCGEventFlagMaskNumericPad": 2097152,
   "kCGEventFlagMaskSecondaryFn": 8388608,
   "kCGEventFlagMaskShift": 131072,
   "kCGEventFlagsChanged": 12,
   "kCGEventKeyDown": 10,
   "kCGEventKeyUp": 11,
   "kCGEventLeftMouseDown": 1,
   "kCGEventLeftMouseDragged": 6,
   "kCGEventLeftMouseUp": 2,
   "kCGEventMouseMoved": 5,
   "kCGEventMouseSubtypeDefault": 0,
   "kCGEventMouseSubtypeTabletPoint": 1,
   "kCGEventMouseSubtypeTabletProximity": 2,
   "kCGEventNull": 0,
   "kCGEventOtherMouseDown": 25,
   "kCGEventOtherMouseDragged": 27,
   "kCGEventOtherMouseUp": 26,
   "kCGEventRightMouseDown": 3,
   "kCGEventRightMouseDragged": 7,
   "kCGEventRightMouseUp": 4,
   "kCGEventScrollWheel": 22,
   "kCGEventSourceGroupID": 44,
   "kCGEventSourceStateCombinedSessionState": 0,
   "kCGEventSourceStateHIDSystemState": 1,
   "kCGEventSourceStateID": 45,
   "kCGEventSourceStatePrivate": -1,
   "kCGEventSourceUnixProcessID": 41,
   "kCGEventSourceUserData": 42,
   "kCGEventSourceUserID": 43,
   "kCGEventSuppressionStateRemoteMouseDrag": 1,
   "kCGEventSuppressionStateSuppressionInterval": 0,
   "kCGEventTabletPointer": 23,
   "kCGEventTabletProximity": 24,
   "kCGEventTapDisabledByTimeout": 4294967294,
   "kCGEventTapDisabledByUserInput": 4294967295,
   "kCGEventTapOptionDefault": 0,
   "kCGEventTapOptionListenOnly": 1,
   "kCGEventTargetProcessSerialNumber": 39,
   "kCGEventTargetUnixProcessID": 40,
   "kCGEventUnacceleratedPointerMovementX": 170,
   "kCGEventUnacceleratedPointerMovementY": 171,
   "kCGFloatingWindowLevel": 3,
   "kCGFloatingWindowLevelKey": 5,
   "kCGFontPostScriptFormatType1": 1,
   "kCGFontPostScriptFormatType3": 3,
   "kCGFontPostScriptFormatType42": 42,
   "kCGGesturePhaseBegan": 1,
   "kCGGesturePhaseCancelled": 8,
   "kCGGesturePhaseChanged": 2,
   "kCGGesturePhaseEnded": 4,
   "kCGGesturePhaseMayBegin": 128,
   "kCGGesturePhaseNone": 0,
   "kCGGradientDrawsAfterEndLocation": 2,
   "kCGGradientDrawsBeforeStartLocation": 1,
   "kCGHIDEventTap": 0,
   "kCGHeadInsertEventTap": 0,
   "kCGHelpWindowLevel": 200,
   "kCGHelpWindowLevelKey": 16,
   "kCGImageAlphaFirst": 4,
   "kCGImageAlphaLast": 3,
   "kCGImageAlphaNone": 0,
   "kCGImageAlphaNoneSkipFirst": 6,
   "kCGImageAlphaNoneSkipLast": 5,
   "kCGImageAlphaOnly": 7,
   "kCGImageAlphaPremultipliedFirst": 2,
   "kCGImageAlphaPremultipliedLast": 1,
   "kCGImageByteOrder16Big": 12288,
   "kCGImageByteOrder16Little": 4096,
   "kCGImageByteOrder32Big": 16384,
   "kCGImageByteOrder32Little": 8192,
   "kCGImageByteOrderDefault": 0,
   "kCGImageByteOrderMask": 28672,
   "kCGImagePixelFormatMask": 983040,
   "kCGImagePixelFormatPacked": 0,
   "kCGImagePixelFormatRGB101010": 196608,
   "kCGImagePixelFormatRGB555": 65536,
   "kCGImagePixelFormatRGB565": 131072,
   "kCGImagePixelFormatRGBCIF10": 262144,
   "kCGInterpolationDefault": 0,
   "kCGInterpolationHigh": 3,
   "kCGInterpolationLow": 2,
   "kCGInterpolationMedium": 4,
   "kCGInterpolationNone": 1,
   "kCGKeyboardEventAutorepeat": 8,
   "kCGKeyboardEventKeyboardType": 10,
   "kCGKeyboardEventKeycode": 9,
   "kCGLineCapButt": 0,
   "kCGLineCapRound": 1,
   "kCGLineCapSquare": 2,
   "kCGLineJoinBevel": 2,
   "kCGLineJoinMiter": 0,
   "kCGLineJoinRound": 1,
   "kCGMainMenuWindowLevel": 24,
   "kCGMainMenuWindowLevelKey": 8,
   "kCGMaximumWindowLevelKey": 14,
   "kCGMinimumWindowLevelKey": 1,
   "kCGModalPanelWindowLevel": 8,
   "kCGModalPanelWindowLevelKey": 10,
   "kCGMomentumScrollPhaseBegin": 1,
   "kCGMomentumScrollPhaseContinue": 2,
   "kCGMomentumScrollPhaseEnd": 3,
   "kCGMomentumScrollPhaseNone": 0,
   "kCGMouseButtonCenter": 2,
   "kCGMouseButtonLeft": 0,
   "kCGMouseButtonRight": 1,
   "kCGMouseEventButtonNumber": 3,
   "kCGMouseEventClickState": 1,
   "kCGMouseEventDeltaX": 4,
   "kCGMouseEventDeltaY": 5,
   "kCGMouseEventInstantMouser": 6,
   "kCGMouseEventNumber": 0,
   "kCGMouseEventPressure": 2,
   "kCGMouseEventSubtype": 7,
   "kCGMouseEventWindowUnderMousePointer": 91,
   "kCGMouseEventWindowUnderMousePointerThatCanHandleThisEvent": 92,
   "kCGNormalWindowLevel": 0,
   "kCGNormalWindowLevelKey": 4,
   "kCGNullDirectDisplay": 0,
   "kCGNullWindowID": 0,
   "kCGNumReservedBaseWindowLevels": 5,
   "kCGNumReservedWindowLevels": 16,
   "kCGNumberOfEventSuppressionStates": 2,
   "kCGNumberOfWindowLevelKeys": 21,
   "kCGOverlayWindowLevel": 102,
   "kCGOverlayWindowLevelKey": 15,
   "kCGPDFAllowsCommenting": 64,
   "kCGPDFAllowsContentAccessibility": 32,
   "kCGPDFAllowsContentCopying": 16,
   "kCGPDFAllowsDocumentAssembly": 8,
   "kCGPDFAllowsDocumentChanges": 4,
   "kCGPDFAllowsFormFieldEntry": 128,
   "kCGPDFAllowsHighQualityPrinting": 2,
   "kCGPDFAllowsLowQualityPrinting": 1,
   "kCGPDFArtBox": 4,
   "kCGPDFBleedBox": 2,
   "kCGPDFCropBox": 1,
   "kCGPDFMediaBox": 0,
   "kCGPDFObjectTypeArray": 7,
   "kCGPDFObjectTypeBoolean": 2,
   "kCGPDFObjectTypeDictionary": 8,
   "kCGPDFObjectTypeInteger": 3,
   "kCGPDFObjectTypeName": 5,
   "kCGPDFObjectTypeNull": 1,
   "kCGPDFObjectTypeReal": 4,
   "kCGPDFObjectTypeStream": 9,
   "kCGPDFObjectTypeString": 6,
   "kCGPDFTrimBox": 3,
   "kCGPathEOFill": 1,
   "kCGPathEOFillStroke": 4,
   "kCGPathElementAddCurveToPoint": 3,
   "kCGPathElementAddLineToPoint": 1,
   "kCGPathElementAddQuadCurveToPoint": 2,
   "kCGPathElementCloseSubpath": 4,
   "kCGPathElementMoveToPoint": 0,
   "kCGPathFill": 0,
   "kCGPathFillStroke": 3,
   "kCGPathStroke": 2,
   "kCGPatternTilingConstantSpacing": 2,
   "kCGPatternTilingConstantSpacingMinimalDistortion": 1,
   "kCGPatternTilingNoDistortion": 0,
   "kCGPopUpMenuWindowLevel": 101,
   "kCGPopUpMenuWindowLevelKey": 11,
   "kCGRenderingIntentAbsoluteColorimetric": 1,
   "kCGRenderingIntentDefault": 0,
   "kCGRenderingIntentPerceptual": 3,
   "kCGRenderingIntentRelativeColorimetric": 2,
   "kCGRenderingIntentSaturation": 4,
   "kCGScreenSaverWindowLevel": 1000,
   "kCGScreenSaverWindowLevelKey": 13,
   "kCGScreenUpdateOperationMove": 1,
   "kCGScreenUpdateOperationReducedDirtyRectangleCount": 2147483648,
   "kCGScreenUpdateOperationRefresh": 0,
   "kCGScrollEventUnitLine": 1,
   "kCGScrollEventUnitPixel": 0,
   "kCGScrollPhaseBegan": 1,
   "kCGScrollPhaseCancelled": 8,
   "kCGScrollPhaseChanged": 2,
   "kCGScrollPhaseEnded": 4,
   "kCGScrollPhaseMayBegin": 128,
   "kCGScrollWheelEventAcceleratedDeltaAxis1": 176,
   "kCGScrollWheelEventAcceleratedDeltaAxis2": 175,
   "kCGScrollWheelEventDeltaAxis1": 11,
   "kCGScrollWheelEventDeltaAxis2": 12,
   "kCGScrollWheelEventDeltaAxis3": 13,
   "kCGScrollWheelEventFixedPtDeltaAxis1": 93,
   "kCGScrollWheelEventFixedPtDeltaAxis2": 94,
   "kCGScrollWheelEventFixedPtDeltaAxis3": 95,
   "kCGScrollWheelEventInstantMouser": 14,
   "kCGScrollWheelEventIsContinuous": 88,
   "kCGScrollWheelEventMomentumOptionPhase": 173,
   "kCGScrollWheelEventMomentumPhase": 123,
   "kCGScrollWheelEventPointDeltaAxis1": 96,
   "kCGScrollWheelEventPointDeltaAxis2": 97,
   "kCGScrollWheelEventPointDeltaAxis3": 98,
   "kCGScrollWheelEventRawDeltaAxis1": 178,
   "kCGScrollWheelEventRawDeltaAxis2": 177,
   "kCGScrollWheelEventScrollCount": 100,
   "kCGScrollWheelEventScrollPhase": 99,
   "kCGSessionEventTap": 1,
   "kCGStatusWindowLevel": 25,
   "kCGStatusWindowLevelKey": 9,
   "kCGTabletEventDeviceID": 24,
   "kCGTabletEventPointButtons": 18,
   "kCGTabletEventPointPressure": 19,
   "kCGTabletEventPointX": 15,
   "kCGTabletEventPointY": 16,
   "kCGTabletEventPointZ": 17,
   "kCGTabletEventRotation": 22,
   "kCGTabletEventTangentialPressure": 23,
   "kCGTabletEventTiltX": 20,
   "kCGTabletEventTiltY": 21,
   "kCGTabletEventVendor1": 25,
   "kCGTabletEventVendor2": 26,
   "kCGTabletEventVendor3": 27,
   "kCGTabletProximityEventCapabilityMask": 36,
   "kCGTabletProximityEventDeviceID": 31,
   "kCGTabletProximityEventEnterProximity": 38,
   "kCGTabletProximityEventPointerID": 30,
   "kCGTabletProximityEventPointerType": 37,
   "kCGTabletProximityEventSystemTabletID": 32,
   "kCGTabletProximityEventTabletID": 29,
   "kCGTabletProximityEventVendorID": 28,
   "kCGTabletProximityEventVendorPointerSerialNumber": 34,
   "kCGTabletProximityEventVendorPointerType": 33,
   "kCGTabletProximityEventVendorUniqueID": 35,
   "kCGTailAppendEventTap": 1,
   "kCGTextClip": 7,
   "kCGTextFill": 0,
   "kCGTextFillClip": 4,
   "kCGTextFillStroke": 2,
   "kCGTextFillStrokeClip": 6,
   "kCGTextInvisible": 3,
   "kCGTextStroke": 1,
   "kCGTextStrokeClip": 5,
   "kCGToneMappingDefault": 0,
   "kCGToneMappingEXRGamma": 4,
   "kCGToneMappingITURecommended": 3,
   "kCGToneMappingImageSpecificLumaScaling": 1,
   "kCGToneMappingNone": 5,
   "kCGToneMappingReferenceWhiteBased": 2,
   "kCGTornOffMenuWindowLevel": 3,
   "kCGTornOffMenuWindowLevelKey": 6,
   "kCGUtilityWindowLevel": 19,
   "kCGUtilityWindowLevelKey": 17,
   "kCGWindowImageBestResolution": 8,
   "kCGWindowImageBoundsIgnoreFraming": 1,
   "kCGWindowImageDefault": 0,
   "kCGWindowImageNominalResolution": 16,
   "kCGWindowImageOnlyShadows": 4,
   "kCGWindowImageShouldBeOpaque": 2,
   "kCGWindowListExcludeDesktopElements": 16,
   "kCGWindowListOptionAll": 0,
   "kCGWindowListOptionIncludingWindow": 8,
   "kCGWindowListOptionOnScreenAboveWindow": 2,
   "kCGWindowListOptionOnScreenBelowWindow": 4,
   "kCGWindowListOptionOnScreenOnly": 1,
   "kCGWindowSharingNone": 0,
   "kCGWindowSharingReadOnly": 1,
   "kCGWindowSharingReadWrite": 2
  },
  "enum_type": {
   "CGBitmapInfo": {
    "type": "I"
   },
   "CGBlendMode": {
    "type": "i"
   },
   "CGCaptureOptions": {
    "type": "I"
   },
   "CGColorConversionInfoTransformType": {
    "type": "I"
   },
   "CGColorRenderingIntent": {
    "type": "i"
   },
   "CGColorSpaceModel": {
    "type": "i"
   },
   "CGConfigureOption": {
    "type": "I"
   },
   "CGDisplayChangeSummaryFlags": {
    "type": "I"
   },
   "CGDisplayStreamFrameStatus": {
    "type": "i"
   },
   "CGDisplayStreamUpdateRectType": {
    "type": "i"
   },
   "CGError": {
    "type": "i"
   },
   "CGEventField": {
    "type": "I"
   },
   "CGEventFilterMask": {
    "type": "I"
   },
   "CGEventFlags": {
    "type": "Q"
   },
   "CGEventMouseSubtype": {
    "type": "I"
   },
   "CGEventSourceStateID": {
    "type": "i"
   },
   "CGEventSuppressionState": {
    "type": "I"
   },
   "CGEventTapLocation": {
    "type": "I"
   },
   "CGEventTapOptions": {
    "type": "I"
   },
   "CGEventTapPlacement": {
    "type": "I"
   },
   "CGEventType": {
    "type": "I"
   },
   "CGFontPostScriptFormat": {
    "type": "i"
   },
   "CGGesturePhase": {
    "type": "I"
   },
   "CGGlyphDeprecatedEnum": {
    "type": "i"
   },
   "CGGradientDrawingOptions": {
    "type": "I"
   },
   "CGImageAlphaInfo": {
    "type": "I"
   },
   "CGImageByteOrderInfo": {
    "type": "I"
   },
   "CGImagePixelFormatInfo": {
    "type": "I"
   },
   "CGInterpolationQuality": {
    "type": "i"
   },
   "CGLineCap": {
    "type": "i"
   },
   "CGLineJoin": {
    "type": "i"
   },
   "CGMomentumScrollPhase": {
    "type": "I"
   },
   "CGMouseButton": {
    "type": "I"
   },
   "CGPDFAccessPermissions": {
    "type": "I"
   },
   "CGPDFBox": {
    "type": "i"
   },
   "CGPDFDataFormat": {
    "type": "i"
   },
   "CGPDFObjectType": {
    "type": "i"
   },
   "CGPDFTagType": {
    "type": "i"
   },
   "CGPathDrawingMode": {
    "type": "i"
   },
   "CGPathElementType": {
    "type": "i"
   },
   "CGPatternTiling": {
    "type": "i"
   },
   "CGScreenUpdateOperation": {
    "type": "I"
   },
   "CGScrollEventUnit": {
    "type": "I"
   },
   "CGScrollPhase": {
    "type": "I"
   },
   "CGTextDrawingMode": {
    "type": "i"
   },
   "CGTextEncoding": {
    "type": "i"
   },
   "CGToneMapping": {
    "type": "I"
   },
   "CGWindowBackingType": {
    "type": "I"
   },
   "CGWindowImageOption": {
    "type": "I"
   },
   "CGWindowLevelKey": {
    "type": "i"
   },
   "CGWindowListOption": {
    "type": "I"
   },
   "CGWindowSharingType": {
    "type": "I"
   }
  },
  "expressions": {
   "kCGDirectMainDisplay": "CGMainDisplayID()",
   "kCGEventFilterMaskPermitAllEvents": "(kCGEventFilterMaskPermitLocalMouseEvents | kCGEventFilterMaskPermitLocalKeyboardEvents | kCGEventFilterMaskPermitSystemDefinedEvents)"
  },
  "externs": {
   "CGAffineTransformIdentity": {
    "typestr": "{CGAffineTransform=dddddd}"
   },
   "CGPointZero": {
    "typestr": "{CGPoint=dd}"
   },
   "CGRectInfinite": {
    "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
   },
   "CGRectNull": {
    "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
   },
   "CGRectZero": {
    "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
   },
   "CGSizeZero": {
    "typestr": "{CGSize=dd}"
   },
   "kCGColorBlack": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorClear": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorConversionBlackPointCompensation": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorConversionTRCSize": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceACESCGLinear": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceAdobeRGB1998": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceCoreMedia709": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceDCIP3": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceDisplayP3": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceDisplayP3_HLG": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceDisplayP3_PQ": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceDisplayP3_PQ_EOTF": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedDisplayP3": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedGray": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedITUR_2020": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedLinearDisplayP3": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedLinearGray": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedLinearITUR_2020": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedLinearSRGB": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedRange": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceExtendedSRGB": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceGenericCMYK": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceGenericGray": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceGenericGrayGamma2_2": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceGenericLab": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceGenericRGB": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceGenericRGBLinear": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceGenericXYZ": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_2020": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_2020_HLG": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_2020_PQ": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_2020_PQ_EOTF": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_2020_sRGBGamma": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_2100_HLG": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_2100_PQ": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_709": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_709_HLG": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceITUR_709_PQ": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceLinearDisplayP3": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceLinearGray": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceLinearITUR_2020": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceLinearSRGB": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceROMMRGB": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorSpaceSRGB": {
    "typestr": "^{__CFString=}"
   },
   "kCGColorWhite": {
    "typestr": "^{__CFString=}"
   },
   "kCGDefaultHDRImageContentHeadroom": {
    "typestr": "f"
   },
   "kCGDisplayShowDuplicateLowResolutionModes": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamColorSpace": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamDestinationRect": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamMinimumFrameTime": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamPreserveAspectRatio": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamQueueDepth": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamShowCursor": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamSourceRect": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamYCbCrMatrix": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamYCbCrMatrix_ITU_R_601_4": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamYCbCrMatrix_ITU_R_709_2": {
    "typestr": "^{__CFString=}"
   },
   "kCGDisplayStreamYCbCrMatrix_SMPTE_240M_1995": {
    "typestr": "^{__CFString=}"
   },
   "kCGEXRToneMappingGammaDefog": {
    "typestr": "^{__CFString=}"
   },
   "kCGEXRToneMappingGammaExposure": {
    "typestr": "^{__CFString=}"
   },
   "kCGEXRToneMappingGammaKneeHigh": {
    "typestr": "^{__CFString=}"
   },
   "kCGEXRToneMappingGammaKneeLow": {
    "typestr": "^{__CFString=}"
   },
   "kCGFontVariationAxisDefaultValue": {
    "typestr": "^{__CFString=}"
   },
   "kCGFontVariationAxisMaxValue": {
    "typestr": "^{__CFString=}"
   },
   "kCGFontVariationAxisMinValue": {
    "typestr": "^{__CFString=}"
   },
   "kCGFontVariationAxisName": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextAccessPermissions": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextAllowsCopying": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextAllowsPrinting": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextArtBox": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextAuthor": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextBleedBox": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextCreateLinearizedPDF": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextCreatePDFA": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextCreator": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextCropBox": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextEncryptionKeyLength": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextKeywords": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextMediaBox": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextOutputIntent": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextOutputIntents": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextOwnerPassword": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextSubject": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextTitle": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextTrimBox": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFContextUserPassword": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFOutlineChildren": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFOutlineDestination": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFOutlineDestinationRect": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFOutlineTitle": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFTagPropertyActualText": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFTagPropertyAlternativeText": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFTagPropertyLanguageText": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFTagPropertyTitleText": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFXDestinationOutputProfile": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFXInfo": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFXOutputCondition": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFXOutputConditionIdentifier": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFXOutputIntentSubtype": {
    "typestr": "^{__CFString=}"
   },
   "kCGPDFXRegistryName": {
    "typestr": "^{__CFString=}"
   },
   "kCGSkipBoostToHDR": {
    "typestr": "^{__CFString=}"
   },
   "kCGUse100nitsHLGOOTF": {
    "typestr": "^{__CFString=}"
   },
   "kCGUseBT1886ForCoreVideoGamma": {
    "typestr": "^{__CFString=}"
   },
   "kCGUseLegacyHDREcosystem": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowAlpha": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowBackingLocationVideoMemory": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowBounds": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowIsOnscreen": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowLayer": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowMemoryUsage": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowName": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowNumber": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowOwnerName": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowOwnerPID": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowSharingState": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowStoreType": {
    "typestr": "^{__CFString=}"
   },
   "kCGWindowWorkspace": {
    "typestr": "^{__CFString=}"
   }
  },
  "formal_protocols": {},
  "func_macros": {
   "CGSetLocalEventsFilterDuringSupressionState": "def CGSetLocalEventsFilterDuringSupressionState(filter, state): return CGSetLocalEventsFilterDuringSuppressionState(filter, state)",
   "CG_BRIDGE_VERSION": "def CG_BRIDGE_VERSION(v): return (0)",
   "CG_IOS_VERSION": "def CG_IOS_VERSION(v): return (0)",
   "CG_TV_VERSION": "def CG_TV_VERSION(v): return (0)",
   "CG_WATCH_VERSION": "def CG_WATCH_VERSION(v): return (0)",
   "SCREEN_CAPTURE_OBSOLETE": "def SCREEN_CAPTURE_OBSOLETE(x,y,z): return __attribute__((availability(macos,introduced=x,deprecated=y,obsoleted=z,message=\"Please use ScreenCaptureKit instead.\")));",
   "__CG_DEPRECATED_ENUMERATOR_WITH_MSG": "def __CG_DEPRECATED_ENUMERATOR_WITH_MSG(msg): return __attribute__((deprecated(msg)))",
   "__CG_DEPRECATED_WITH_MSG": "def __CG_DEPRECATED_WITH_MSG(msg): return __attribute__((deprecated(msg)))",
   "__CG_FORMAT_VPRINTF": "def __CG_FORMAT_VPRINTF(FORMAT_STRING): return __attribute__((format(printf, FORMAT_STRING, 0)))",
   "__CG_HAS_COMPILER_ATTRIBUTE": "def __CG_HAS_COMPILER_ATTRIBUTE(attribute): return __has_attribute(attribute)",
   "__CG_HAS_COMPILER_EXTENSION": "def __CG_HAS_COMPILER_EXTENSION(extension): return __has_extension(extension)"
  },
  "functions": {
   "CGAcquireDisplayFadeReservation": {
    "args": [
     {
      "name": "seconds",
      "typestr": "f"
     },
     {
      "name": "token",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGAffineTransformConcat": {
    "args": [
     {
      "name": "t1",
      "typestr": "{CGAffineTransform=dddddd}"
     },
     {
      "name": "t2",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformDecompose": {
    "args": [
     {
      "name": "transform",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransformComponents={CGSize=dd}dd{CGVector=dd}}"
    }
   },
   "CGAffineTransformEqualToTransform": {
    "args": [
     {
      "name": "t1",
      "typestr": "{CGAffineTransform=dddddd}"
     },
     {
      "name": "t2",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGAffineTransformInvert": {
    "args": [
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformIsIdentity": {
    "args": [
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGAffineTransformMake": {
    "args": [
     {
      "name": "a",
      "typestr": "d"
     },
     {
      "name": "b",
      "typestr": "d"
     },
     {
      "name": "c",
      "typestr": "d"
     },
     {
      "name": "d",
      "typestr": "d"
     },
     {
      "name": "tx",
      "typestr": "d"
     },
     {
      "name": "ty",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformMakeRotation": {
    "args": [
     {
      "name": "angle",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformMakeScale": {
    "args": [
     {
      "name": "sx",
      "typestr": "d"
     },
     {
      "name": "sy",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformMakeTranslation": {
    "args": [
     {
      "name": "tx",
      "typestr": "d"
     },
     {
      "name": "ty",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformMakeWithComponents": {
    "args": [
     {
      "name": "components",
      "typestr": "{CGAffineTransformComponents={CGSize=dd}dd{CGVector=dd}}"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformRotate": {
    "args": [
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     },
     {
      "name": "angle",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformScale": {
    "args": [
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     },
     {
      "name": "sx",
      "typestr": "d"
     },
     {
      "name": "sy",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAffineTransformTranslate": {
    "args": [
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     },
     {
      "name": "tx",
      "typestr": "d"
     },
     {
      "name": "ty",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGAssociateMouseAndMouseCursorPosition": {
    "args": [
     {
      "name": "connected",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGBeginDisplayConfiguration": {
    "args": [
     {
      "name": "config",
      "typestr": "^^{_CGDisplayConfigRef=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGBitmapContextCreate": {
    "args": [
     {
      "name": "data",
      "typestr": "^v"
     },
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "bitsPerComponent",
      "typestr": "Q"
     },
     {
      "name": "bytesPerRow",
      "typestr": "Q"
     },
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "bitmapInfo",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGContext=}"
    }
   },
   "CGBitmapContextCreateImage": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGBitmapContextCreateWithData": {
    "args": [
     {
      "name": "data",
      "typestr": "^v"
     },
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "bitsPerComponent",
      "typestr": "Q"
     },
     {
      "name": "bytesPerRow",
      "typestr": "Q"
     },
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "bitmapInfo",
      "typestr": "I"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "releaseCallback",
      "typestr": "^?"
     },
     {
      "name": "releaseInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGContext=}"
    }
   },
   "CGBitmapContextGetAlphaInfo": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGBitmapContextGetBitmapInfo": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGBitmapContextGetBitsPerComponent": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGBitmapContextGetBitsPerPixel": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGBitmapContextGetBytesPerRow": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGBitmapContextGetColorSpace": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGBitmapContextGetData": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CGBitmapContextGetHeight": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGBitmapContextGetWidth": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGCancelDisplayConfiguration": {
    "args": [
     {
      "name": "config",
      "typestr": "^{_CGDisplayConfigRef=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGCaptureAllDisplays": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGCaptureAllDisplaysWithOptions": {
    "args": [
     {
      "name": "options",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGColorConversionInfoConvertData": {
    "args": [
     {
      "name": "info",
      "typestr": "^{CGColorConversionInfo=}"
     },
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "dst_data",
      "typestr": "^v"
     },
     {
      "name": "dst_format",
      "typestr": "{CGColorBufferFormat=IIQQQ}"
     },
     {
      "name": "src_data",
      "typestr": "^v"
     },
     {
      "name": "src_format",
      "typestr": "{CGColorBufferFormat=IIQQQ}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGColorConversionInfoCreate": {
    "args": [
     {
      "name": "src",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "dst",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorConversionInfo=}"
    }
   },
   "CGColorConversionInfoCreateForToneMapping": {
    "args": [
     {
      "name": "from",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "source_headroom",
      "typestr": "f"
     },
     {
      "name": "to",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "target_headroom",
      "typestr": "f"
     },
     {
      "name": "method",
      "typestr": "I"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "already_cfretained": true,
      "name": "error",
      "null_accepted": true,
      "type_modifier": "o",
      "typestr": "^^{__CFError=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorConversionInfo=}"
    }
   },
   "CGColorConversionInfoCreateFromList": {
    "args": [
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "",
      "typestr": "I"
     },
     {
      "name": "",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorConversionInfo=}"
    },
    "variadic": true
   },
   "CGColorConversionInfoCreateFromListWithArguments": {
    "args": [
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "",
      "typestr": "I"
     },
     {
      "name": "",
      "typestr": "i"
     },
     {
      "name": "",
      "typestr": "[1{__va_list_tag=II^v^v}]"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorConversionInfo=}"
    }
   },
   "CGColorConversionInfoCreateWithOptions": {
    "args": [
     {
      "name": "src",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "dst",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorConversionInfo=}"
    }
   },
   "CGColorConversionInfoGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGColorCreate": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "components",
      "typestr": "^d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateCopy": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateCopyByMatchingToColorSpace": {
    "args": [
     {
      "name": "",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "intent",
      "typestr": "i"
     },
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateCopyWithAlpha": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateGenericCMYK": {
    "args": [
     {
      "name": "cyan",
      "typestr": "d"
     },
     {
      "name": "magenta",
      "typestr": "d"
     },
     {
      "name": "yellow",
      "typestr": "d"
     },
     {
      "name": "black",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateGenericGray": {
    "args": [
     {
      "name": "gray",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateGenericGrayGamma2_2": {
    "args": [
     {
      "name": "gray",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateGenericRGB": {
    "args": [
     {
      "name": "red",
      "typestr": "d"
     },
     {
      "name": "green",
      "typestr": "d"
     },
     {
      "name": "blue",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateSRGB": {
    "args": [
     {
      "name": "red",
      "typestr": "d"
     },
     {
      "name": "green",
      "typestr": "d"
     },
     {
      "name": "blue",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorCreateWithPattern": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "pattern",
      "typestr": "^{CGPattern=}"
     },
     {
      "name": "components",
      "typestr": "^d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorEqualToColor": {
    "args": [
     {
      "name": "color1",
      "typestr": "^{CGColor=}"
     },
     {
      "name": "color2",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGColorGetAlpha": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGColorGetColorSpace": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorGetComponents": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "^d"
    }
   },
   "CGColorGetConstantColor": {
    "args": [
     {
      "name": "colorName",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorGetNumberOfComponents": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGColorGetPattern": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPattern=}"
    }
   },
   "CGColorGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGColorRelease": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGColorRetain": {
    "args": [
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "^{CGColor=}"
    }
   },
   "CGColorSpaceCopyBaseColorSpace": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCopyICCData": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CGColorSpaceCopyICCProfile": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CGColorSpaceCopyName": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CGColorSpaceCopyPropertyList": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CGColorSpaceCreateCalibratedGray": {
    "args": [
     {
      "name": "whitePoint",
      "typestr": "^d"
     },
     {
      "name": "blackPoint",
      "typestr": "^d"
     },
     {
      "name": "gamma",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateCalibratedRGB": {
    "args": [
     {
      "name": "whitePoint",
      "typestr": "^d"
     },
     {
      "name": "blackPoint",
      "typestr": "^d"
     },
     {
      "name": "gamma",
      "typestr": "^d"
     },
     {
      "name": "matrix",
      "typestr": "^d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateCopyWithStandardRange": {
    "args": [
     {
      "name": "s",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateDeviceCMYK": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateDeviceGray": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateDeviceRGB": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateExtended": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateExtendedLinearized": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateICCBased": {
    "args": [
     {
      "name": "nComponents",
      "typestr": "Q"
     },
     {
      "name": "range",
      "typestr": "^d"
     },
     {
      "name": "profile",
      "typestr": "^{CGDataProvider=}"
     },
     {
      "name": "alternate",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateIndexed": {
    "args": [
     {
      "name": "baseSpace",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "lastIndex",
      "typestr": "Q"
     },
     {
      "name": "colorTable",
      "typestr": "^C"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateLab": {
    "args": [
     {
      "name": "whitePoint",
      "typestr": "^d"
     },
     {
      "name": "blackPoint",
      "typestr": "^d"
     },
     {
      "name": "range",
      "typestr": "^d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateLinearized": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreatePattern": {
    "args": [
     {
      "name": "baseSpace",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateWithColorSyncProfile": {
    "args": [
     {
      "name": "",
      "typestr": "^{ColorSyncProfile=}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateWithICCData": {
    "args": [
     {
      "name": "data",
      "typestr": "@"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateWithICCProfile": {
    "args": [
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateWithName": {
    "args": [
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateWithPlatformColorSpace": {
    "args": [
     {
      "name": "ref",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceCreateWithPropertyList": {
    "args": [
     {
      "name": "plist",
      "typestr": "@"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceGetBaseColorSpace": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceGetColorTable": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "table",
      "typestr": "^C"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGColorSpaceGetColorTableCount": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGColorSpaceGetModel": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGColorSpaceGetName": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CGColorSpaceGetNumberOfComponents": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGColorSpaceGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGColorSpaceIsHDR": {
    "args": [
     {
      "name": "",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGColorSpaceIsHLGBased": {
    "args": [
     {
      "name": "s",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGColorSpaceIsPQBased": {
    "args": [
     {
      "name": "s",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGColorSpaceIsWideGamutRGB": {
    "args": [
     {
      "name": "",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGColorSpaceRelease": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGColorSpaceRetain": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGColorSpaceSupportsOutput": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGColorSpaceUsesExtendedRange": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGColorSpaceUsesITUR_2100TF": {
    "args": [
     {
      "name": "",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGCompleteDisplayConfiguration": {
    "args": [
     {
      "name": "config",
      "typestr": "^{_CGDisplayConfigRef=}"
     },
     {
      "name": "option",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGConfigureDisplayFadeEffect": {
    "args": [
     {
      "name": "config",
      "typestr": "^{_CGDisplayConfigRef=}"
     },
     {
      "name": "fadeOutSeconds",
      "typestr": "f"
     },
     {
      "name": "fadeInSeconds",
      "typestr": "f"
     },
     {
      "name": "fadeRed",
      "typestr": "f"
     },
     {
      "name": "fadeGreen",
      "typestr": "f"
     },
     {
      "name": "fadeBlue",
      "typestr": "f"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGConfigureDisplayMirrorOfDisplay": {
    "args": [
     {
      "name": "config",
      "typestr": "^{_CGDisplayConfigRef=}"
     },
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "master",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGConfigureDisplayMode": {
    "args": [
     {
      "name": "config",
      "typestr": "^{_CGDisplayConfigRef=}"
     },
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "mode",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGConfigureDisplayOrigin": {
    "args": [
     {
      "name": "config",
      "typestr": "^{_CGDisplayConfigRef=}"
     },
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "x",
      "typestr": "i"
     },
     {
      "name": "y",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGConfigureDisplayStereoOperation": {
    "args": [
     {
      "name": "config",
      "typestr": "^{_CGDisplayConfigRef=}"
     },
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "stereo",
      "typestr": "I"
     },
     {
      "name": "forceBlueLine",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGConfigureDisplayWithDisplayMode": {
    "args": [
     {
      "name": "config",
      "typestr": "^{_CGDisplayConfigRef=}"
     },
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGContextAddArc": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     },
     {
      "name": "radius",
      "typestr": "d"
     },
     {
      "name": "startAngle",
      "typestr": "d"
     },
     {
      "name": "endAngle",
      "typestr": "d"
     },
     {
      "name": "clockwise",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddArcToPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "x1",
      "typestr": "d"
     },
     {
      "name": "y1",
      "typestr": "d"
     },
     {
      "name": "x2",
      "typestr": "d"
     },
     {
      "name": "y2",
      "typestr": "d"
     },
     {
      "name": "radius",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddCurveToPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "cp1x",
      "typestr": "d"
     },
     {
      "name": "cp1y",
      "typestr": "d"
     },
     {
      "name": "cp2x",
      "typestr": "d"
     },
     {
      "name": "cp2y",
      "typestr": "d"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddEllipseInRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddLineToPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddLines": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "points",
      "typestr": "^{CGPoint=dd}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddPath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddQuadCurveToPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "cpx",
      "typestr": "d"
     },
     {
      "name": "cpy",
      "typestr": "d"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextAddRects": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rects",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextBeginPage": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "mediaBox",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextBeginPath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextBeginTransparencyLayer": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "auxiliaryInfo",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextBeginTransparencyLayerWithRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "auxInfo",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextClearRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextClip": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextClipToMask": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "mask",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextClipToRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextClipToRects": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rects",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextClosePath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextConcatCTM": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "transform",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextConvertPointToDeviceSpace": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGContextConvertPointToUserSpace": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGContextConvertRectToDeviceSpace": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGContextConvertRectToUserSpace": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGContextConvertSizeToDeviceSpace": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "size",
      "typestr": "{CGSize=dd}"
     }
    ],
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   },
   "CGContextConvertSizeToUserSpace": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "size",
      "typestr": "{CGSize=dd}"
     }
    ],
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   },
   "CGContextCopyPath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGContextDrawConicGradient": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "gradient",
      "typestr": "^{CGGradient=}"
     },
     {
      "name": "center",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "angle",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawImage": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawImageApplyingToneMapping": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "r",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     },
     {
      "name": "method",
      "typestr": "I"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGContextDrawLayerAtPoint": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "layer",
      "typestr": "^{CGLayer=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawLayerInRect": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "layer",
      "typestr": "^{CGLayer=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawLinearGradient": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "gradient",
      "typestr": "^{CGGradient=}"
     },
     {
      "name": "startPoint",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "endPoint",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "options",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawPDFDocument": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "page",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawPDFPage": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawPath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "mode",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawRadialGradient": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "gradient",
      "typestr": "^{CGGradient=}"
     },
     {
      "name": "startCenter",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "startRadius",
      "typestr": "d"
     },
     {
      "name": "endCenter",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "endRadius",
      "typestr": "d"
     },
     {
      "name": "options",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawShading": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "shading",
      "typestr": "^{CGShading=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextDrawTiledImage": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextEOClip": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextEOFillPath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextEndPage": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextEndTransparencyLayer": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextFillEllipseInRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextFillPath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextFillRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextFillRects": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rects",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextFlush": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextGetCTM": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGContextGetClipBoundingBox": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGContextGetEDRTargetHeadroom": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "f"
    }
   },
   "CGContextGetInterpolationQuality": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGContextGetPathBoundingBox": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGContextGetPathCurrentPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGContextGetTextMatrix": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGContextGetTextPosition": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGContextGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGContextGetUserSpaceToDeviceSpaceTransform": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGContextIsPathEmpty": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGContextMoveToPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextPathContainsPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "mode",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGContextRelease": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextReplacePathWithStrokedPath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextResetClip": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextRestoreGState": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextRetain": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "^{CGContext=}"
    }
   },
   "CGContextRotateCTM": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "angle",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSaveGState": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextScaleCTM": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "sx",
      "typestr": "d"
     },
     {
      "name": "sy",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSelectFont": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "name",
      "typestr": "^c"
     },
     {
      "name": "size",
      "typestr": "d"
     },
     {
      "name": "textEncoding",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetAllowsAntialiasing": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "allowsAntialiasing",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetAllowsFontSmoothing": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "allowsFontSmoothing",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetAllowsFontSubpixelPositioning": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "allowsFontSubpixelPositioning",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetAllowsFontSubpixelQuantization": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "allowsFontSubpixelQuantization",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetAlpha": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetBlendMode": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "mode",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetCMYKFillColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "cyan",
      "typestr": "d"
     },
     {
      "name": "magenta",
      "typestr": "d"
     },
     {
      "name": "yellow",
      "typestr": "d"
     },
     {
      "name": "black",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetCMYKStrokeColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "cyan",
      "typestr": "d"
     },
     {
      "name": "magenta",
      "typestr": "d"
     },
     {
      "name": "yellow",
      "typestr": "d"
     },
     {
      "name": "black",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetCharacterSpacing": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "spacing",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetEDRTargetHeadroom": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "headroom",
      "typestr": "f"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGContextSetFillColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "components",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetFillColorSpace": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetFillColorWithColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetFillPattern": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "pattern",
      "typestr": "^{CGPattern=}"
     },
     {
      "name": "components",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetFlatness": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "flatness",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetFont": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetFontSize": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "size",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetGrayFillColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "gray",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetGrayStrokeColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "gray",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetInterpolationQuality": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "quality",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetLineCap": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "cap",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetLineDash": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "phase",
      "typestr": "d"
     },
     {
      "name": "lengths",
      "typestr": "^d"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetLineJoin": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "join",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetLineWidth": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "width",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetMiterLimit": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "limit",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetPatternPhase": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "phase",
      "typestr": "{CGSize=dd}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetRGBFillColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "red",
      "typestr": "d"
     },
     {
      "name": "green",
      "typestr": "d"
     },
     {
      "name": "blue",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetRGBStrokeColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "red",
      "typestr": "d"
     },
     {
      "name": "green",
      "typestr": "d"
     },
     {
      "name": "blue",
      "typestr": "d"
     },
     {
      "name": "alpha",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetRenderingIntent": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "intent",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetShadow": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "offset",
      "typestr": "{CGSize=dd}"
     },
     {
      "name": "blur",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetShadowWithColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "offset",
      "typestr": "{CGSize=dd}"
     },
     {
      "name": "blur",
      "typestr": "d"
     },
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetShouldAntialias": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "shouldAntialias",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetShouldSmoothFonts": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "shouldSmoothFonts",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetShouldSubpixelPositionFonts": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "shouldSubpixelPositionFonts",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetShouldSubpixelQuantizeFonts": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "shouldSubpixelQuantizeFonts",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetStrokeColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "components",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetStrokeColorSpace": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetStrokeColorWithColor": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "color",
      "typestr": "^{CGColor=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetStrokePattern": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "pattern",
      "typestr": "^{CGPattern=}"
     },
     {
      "name": "components",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetTextDrawingMode": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "mode",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetTextMatrix": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSetTextPosition": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextShowGlyphs": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "g",
      "typestr": "^S"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextShowGlyphsAtPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     },
     {
      "name": "glyphs",
      "typestr": "^S"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextShowGlyphsAtPositions": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "glyphs",
      "typestr": "^S"
     },
     {
      "name": "Lpositions",
      "typestr": "^{CGPoint=dd}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextShowGlyphsWithAdvances": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "glyphs",
      "typestr": "^S"
     },
     {
      "name": "advances",
      "typestr": "^{CGSize=dd}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextShowText": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "string",
      "typestr": "^c"
     },
     {
      "name": "length",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextShowTextAtPoint": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     },
     {
      "name": "string",
      "typestr": "^c"
     },
     {
      "name": "length",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextStrokeEllipseInRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextStrokeLineSegments": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "points",
      "typestr": "^{CGPoint=dd}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextStrokePath": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextStrokeRect": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextStrokeRectWithWidth": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "width",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextSynchronize": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGContextTranslateCTM": {
    "args": [
     {
      "name": "c",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "tx",
      "typestr": "d"
     },
     {
      "name": "ty",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGConvertColorDataWithFormat": {
    "args": [
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "dst_data",
      "typestr": "^v"
     },
     {
      "name": "dst_format",
      "typestr": "{CGColorDataFormat=I@IQQi^d}"
     },
     {
      "name": "src_data",
      "typestr": "^v"
     },
     {
      "name": "src_format",
      "typestr": "{CGColorDataFormat=I@IQQi^d}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGCursorIsDrawnInFramebuffer": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGCursorIsVisible": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDataConsumerCreate": {
    "args": [
     {
      "name": "info",
      "typestr": "^v"
     },
     {
      "name": "cbks",
      "typestr": "^{CGDataConsumerCallbacks=^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataConsumer=}"
    }
   },
   "CGDataConsumerCreateWithCFData": {
    "args": [
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataConsumer=}"
    }
   },
   "CGDataConsumerCreateWithURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataConsumer=}"
    }
   },
   "CGDataConsumerGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDataConsumerRelease": {
    "args": [
     {
      "name": "consumer",
      "typestr": "^{CGDataConsumer=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGDataConsumerRetain": {
    "args": [
     {
      "name": "consumer",
      "typestr": "^{CGDataConsumer=}"
     }
    ],
    "retval": {
     "typestr": "^{CGDataConsumer=}"
    }
   },
   "CGDataProviderCopyData": {
    "args": [
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CGDataProviderCreateDirect": {
    "args": [
     {
      "name": "info",
      "typestr": "^v"
     },
     {
      "name": "size",
      "typestr": "q"
     },
     {
      "name": "callbacks",
      "typestr": "^{CGDataProviderDirectCallbacks=I^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataProvider=}"
    }
   },
   "CGDataProviderCreateSequential": {
    "args": [
     {
      "name": "info",
      "typestr": "^v"
     },
     {
      "name": "callbacks",
      "typestr": "^{CGDataProviderSequentialCallbacks=I^?^?^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataProvider=}"
    }
   },
   "CGDataProviderCreateWithCFData": {
    "args": [
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataProvider=}"
    }
   },
   "CGDataProviderCreateWithData": {
    "args": [
     {
      "name": "info",
      "typestr": "^v"
     },
     {
      "name": "data",
      "typestr": "^v"
     },
     {
      "name": "size",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^v"
        },
        {
         "typestr": "Q"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "releaseData",
      "typestr": "^?"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataProvider=}"
    }
   },
   "CGDataProviderCreateWithFilename": {
    "args": [
     {
      "name": "filename",
      "typestr": "^c"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataProvider=}"
    }
   },
   "CGDataProviderCreateWithURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDataProvider=}"
    }
   },
   "CGDataProviderGetInfo": {
    "args": [
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     }
    ],
    "retval": {
     "typestr": "^v"
    }
   },
   "CGDataProviderGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDataProviderRelease": {
    "args": [
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGDataProviderRetain": {
    "args": [
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     }
    ],
    "retval": {
     "typestr": "^{CGDataProvider=}"
    }
   },
   "CGDirectDisplayCopyCurrentMetalDevice": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "@"
    }
   },
   "CGDisplayAvailableModes": {
    "args": [
     {
      "name": "dsp",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   },
   "CGDisplayBestModeForParameters": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "bitsPerPixel",
      "typestr": "Q"
     },
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "exactMatch",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGDisplayBestModeForParametersAndRefreshRate": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "bitsPerPixel",
      "typestr": "Q"
     },
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "refreshRate",
      "typestr": "d"
     },
     {
      "name": "exactMatch",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGDisplayBounds": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGDisplayCapture": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayCaptureWithOptions": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "options",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayCopyAllDisplayModes": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CGDisplayCopyColorSpace": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGDisplayCopyDisplayMode": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDisplayMode=}"
    }
   },
   "CGDisplayCreateImage": {
    "args": [
     {
      "name": "displayID",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGDisplayCreateImageForRect": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGDisplayCurrentMode": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGDisplayFade": {
    "args": [
     {
      "name": "token",
      "typestr": "I"
     },
     {
      "name": "duration",
      "typestr": "f"
     },
     {
      "name": "startBlend",
      "typestr": "f"
     },
     {
      "name": "endBlend",
      "typestr": "f"
     },
     {
      "name": "redBlend",
      "typestr": "f"
     },
     {
      "name": "greenBlend",
      "typestr": "f"
     },
     {
      "name": "blueBlend",
      "typestr": "f"
     },
     {
      "name": "synchronous",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayFadeOperationInProgress": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayGammaTableCapacity": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayGetDrawingContext": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "^{CGContext=}"
    }
   },
   "CGDisplayHideCursor": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayIDToOpenGLDisplayMask": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIOServicePort": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsActive": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsAlwaysInMirrorSet": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsAsleep": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsBuiltin": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsCaptured": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsInHWMirrorSet": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsInMirrorSet": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsMain": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsOnline": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayIsStereo": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayMirrorsDisplay": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayModeCopyPixelEncoding": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CGDisplayModeGetHeight": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayModeGetIODisplayModeID": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayModeGetIOFlags": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayModeGetPixelHeight": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayModeGetPixelWidth": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayModeGetRefreshRate": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGDisplayModeGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayModeGetWidth": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayModeIsUsableForDesktopGUI": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGDisplayModeRelease": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGDisplayModeRetain": {
    "args": [
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     }
    ],
    "retval": {
     "typestr": "^{CGDisplayMode=}"
    }
   },
   "CGDisplayModelNumber": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayMoveCursorToPoint": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayPixelsHigh": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayPixelsWide": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayPrimaryDisplay": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayRegisterReconfigurationCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": "I"
        },
        {
         "typestr": "I"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayRelease": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayRemoveReconfigurationCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": "I"
        },
        {
         "typestr": "I"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayRestoreColorSyncSettings": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGDisplayRotation": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGDisplayScreenSize": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   },
   "CGDisplaySerialNumber": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplaySetDisplayMode": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "mode",
      "typestr": "^{CGDisplayMode=}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplaySetStereoOperation": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "stereo",
      "typestr": "I"
     },
     {
      "name": "forceBlueLine",
      "typestr": "I"
     },
     {
      "name": "option",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayShowCursor": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayStreamCreate": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "outputWidth",
      "typestr": "Q"
     },
     {
      "name": "outputHeight",
      "typestr": "Q"
     },
     {
      "name": "pixelFormat",
      "typestr": "i"
     },
     {
      "name": "properties",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "handler",
      "typestr": "@?"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDisplayStream=}"
    }
   },
   "CGDisplayStreamCreateWithDispatchQueue": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "outputWidth",
      "typestr": "Q"
     },
     {
      "name": "outputHeight",
      "typestr": "Q"
     },
     {
      "name": "pixelFormat",
      "typestr": "i"
     },
     {
      "name": "properties",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "queue",
      "typestr": "@"
     },
     {
      "name": "handler",
      "typestr": "@?"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDisplayStream=}"
    }
   },
   "CGDisplayStreamGetRunLoopSource": {
    "args": [
     {
      "name": "displayStream",
      "typestr": "^{CGDisplayStream=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFRunLoopSource=}"
    }
   },
   "CGDisplayStreamGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayStreamStart": {
    "args": [
     {
      "name": "displayStream",
      "typestr": "^{CGDisplayStream=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayStreamStop": {
    "args": [
     {
      "name": "displayStream",
      "typestr": "^{CGDisplayStream=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayStreamUpdateCreateMergedUpdate": {
    "args": [
     {
      "name": "firstUpdate",
      "typestr": "^{CGDisplayStreamUpdate=}"
     },
     {
      "name": "secondUpdate",
      "typestr": "^{CGDisplayStreamUpdate=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGDisplayStreamUpdate=}"
    }
   },
   "CGDisplayStreamUpdateGetDropCount": {
    "args": [
     {
      "name": "updateRef",
      "typestr": "^{CGDisplayStreamUpdate=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplayStreamUpdateGetMovedRectsDelta": {
    "args": [
     {
      "name": "updateRef",
      "typestr": "^{CGDisplayStreamUpdate=}"
     },
     {
      "name": "dx",
      "typestr": "^d"
     },
     {
      "name": "dy",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGDisplayStreamUpdateGetRects": {
    "args": [
     {
      "name": "updateRef",
      "typestr": "^{CGDisplayStreamUpdate=}"
     },
     {
      "name": "rectType",
      "typestr": "i"
     },
     {
      "name": "rectCount",
      "typestr": "^Q"
     }
    ],
    "retval": {
     "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGDisplayStreamUpdateGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGDisplaySwitchToMode": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "mode",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGDisplayUnitNumber": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayUsesOpenGLAcceleration": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGDisplayVendorNumber": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGEnableEventStateCombining": {
    "args": [
     {
      "name": "combineState",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGErrorSetCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "name": null,
         "typestr": "v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callback",
      "typestr": "^?"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventCreate": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEvent=}"
    }
   },
   "CGEventCreateCopy": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEvent=}"
    }
   },
   "CGEventCreateData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CGEventCreateFromData": {
    "args": [
     {
      "name": "allocator",
      "typestr": "^{__CFAllocator=}"
     },
     {
      "name": "data",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEvent=}"
    }
   },
   "CGEventCreateKeyboardEvent": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "virtualKey",
      "typestr": "S"
     },
     {
      "name": "keyDown",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEvent=}"
    }
   },
   "CGEventCreateMouseEvent": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "mouseType",
      "typestr": "I"
     },
     {
      "name": "mouseCursorPosition",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "mouseButton",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEvent=}"
    }
   },
   "CGEventCreateScrollWheelEvent": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "units",
      "typestr": "I"
     },
     {
      "name": "wheelCount",
      "typestr": "I"
     },
     {
      "name": "wheel1",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEvent=}"
    },
    "variadic": true
   },
   "CGEventCreateScrollWheelEvent2": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "units",
      "typestr": "I"
     },
     {
      "name": "wheelCount",
      "typestr": "I"
     },
     {
      "name": "wheel1",
      "typestr": "i"
     },
     {
      "name": "wheel2",
      "typestr": "i"
     },
     {
      "name": "wheel3",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEvent=}"
    }
   },
   "CGEventCreateSourceFromEvent": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEventSource=}"
    }
   },
   "CGEventGetDoubleValueField": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "field",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGEventGetFlags": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGEventGetIntegerValueField": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "field",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CGEventGetLocation": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGEventGetTimestamp": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGEventGetType": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGEventGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGEventGetUnflippedLocation": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGEventKeyboardGetUnicodeString": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "maxStringLength",
      "typestr": "Q"
     },
     {
      "name": "actualStringLength",
      "typestr": "^Q"
     },
     {
      "name": "unicodeString",
      "typestr": "^T"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventKeyboardSetUnicodeString": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "stringLength",
      "typestr": "Q"
     },
     {
      "name": "unicodeString",
      "typestr": "^T"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventPost": {
    "args": [
     {
      "name": "tap",
      "typestr": "I"
     },
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventPostToPSN": {
    "args": [
     {
      "name": "processSerialNumber",
      "typestr": "^v"
     },
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventPostToPid": {
    "args": [
     {
      "name": "pid",
      "typestr": "i"
     },
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSetDoubleValueField": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "field",
      "typestr": "I"
     },
     {
      "name": "value",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSetFlags": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "flags",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSetIntegerValueField": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "field",
      "typestr": "I"
     },
     {
      "name": "value",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSetLocation": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "location",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSetSource": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSetTimestamp": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "timestamp",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSetType": {
    "args": [
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     },
     {
      "name": "type",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSourceButtonState": {
    "args": [
     {
      "name": "stateID",
      "typestr": "i"
     },
     {
      "name": "button",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGEventSourceCounterForEventType": {
    "args": [
     {
      "name": "stateID",
      "typestr": "i"
     },
     {
      "name": "eventType",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGEventSourceCreate": {
    "args": [
     {
      "name": "stateID",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CGEventSource=}"
    }
   },
   "CGEventSourceFlagsState": {
    "args": [
     {
      "name": "stateID",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGEventSourceGetKeyboardType": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGEventSourceGetLocalEventsFilterDuringSuppressionState": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "state",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGEventSourceGetLocalEventsSuppressionInterval": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGEventSourceGetPixelsPerLine": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGEventSourceGetSourceStateID": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGEventSourceGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGEventSourceGetUserData": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     }
    ],
    "retval": {
     "typestr": "q"
    }
   },
   "CGEventSourceKeyState": {
    "args": [
     {
      "name": "stateID",
      "typestr": "i"
     },
     {
      "name": "key",
      "typestr": "S"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGEventSourceSecondsSinceLastEventType": {
    "args": [
     {
      "name": "stateID",
      "typestr": "i"
     },
     {
      "name": "eventType",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGEventSourceSetKeyboardType": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "keyboardType",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSourceSetLocalEventsFilterDuringSuppressionState": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "filter",
      "typestr": "I"
     },
     {
      "name": "state",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSourceSetLocalEventsSuppressionInterval": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "seconds",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSourceSetPixelsPerLine": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "pixelsPerLine",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventSourceSetUserData": {
    "args": [
     {
      "name": "source",
      "typestr": "^{__CGEventSource=}"
     },
     {
      "name": "userData",
      "typestr": "q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventTapCreate": {
    "args": [
     {
      "name": "tap",
      "typestr": "I"
     },
     {
      "name": "place",
      "typestr": "I"
     },
     {
      "name": "options",
      "typestr": "I"
     },
     {
      "name": "eventsOfInterest",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CGEventTapProxy=}"
        },
        {
         "typestr": "I"
        },
        {
         "typestr": "^{__CGEvent=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "^{__CGEvent=}"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFMachPort=}"
    }
   },
   "CGEventTapCreateForPSN": {
    "args": [
     {
      "name": "processSerialNumber",
      "typestr": "^v"
     },
     {
      "name": "place",
      "typestr": "I"
     },
     {
      "name": "options",
      "typestr": "I"
     },
     {
      "name": "eventsOfInterest",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CGEventTapProxy=}"
        },
        {
         "typestr": "I"
        },
        {
         "typestr": "^{__CGEvent=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "^{__CGEvent=}"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFMachPort=}"
    }
   },
   "CGEventTapCreateForPid": {
    "args": [
     {
      "name": "pid",
      "typestr": "i"
     },
     {
      "name": "place",
      "typestr": "I"
     },
     {
      "name": "options",
      "typestr": "I"
     },
     {
      "name": "eventsOfInterest",
      "typestr": "Q"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{__CGEventTapProxy=}"
        },
        {
         "typestr": "I"
        },
        {
         "typestr": "^{__CGEvent=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "^{__CGEvent=}"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFMachPort=}"
    }
   },
   "CGEventTapEnable": {
    "args": [
     {
      "name": "tap",
      "typestr": "^{__CFMachPort=}"
     },
     {
      "name": "enable",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGEventTapIsEnabled": {
    "args": [
     {
      "name": "tap",
      "typestr": "^{__CFMachPort=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGEventTapPostEvent": {
    "args": [
     {
      "name": "proxy",
      "typestr": "^{__CGEventTapProxy=}"
     },
     {
      "name": "event",
      "typestr": "^{__CGEvent=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGFontCanCreatePostScriptSubset": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "format",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "B"
    }
   },
   "CGFontCopyFullName": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CGFontCopyGlyphNameForGlyph": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "glyph",
      "typestr": "S"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CGFontCopyPostScriptName": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CGFontCopyTableForTag": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "tag",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CGFontCopyTableTags": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CGFontCopyVariationAxes": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CGFontCopyVariations": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGFontCreateCopyWithVariations": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "variations",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGFont=}"
    }
   },
   "CGFontCreatePostScriptEncoding": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "encoding",
      "typestr": "^S"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CGFontCreatePostScriptSubset": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "subsetName",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "format",
      "typestr": "i"
     },
     {
      "name": "glyphs",
      "typestr": "^S"
     },
     {
      "name": "count",
      "typestr": "Q"
     },
     {
      "name": "encoding",
      "typestr": "^S"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CGFontCreateWithDataProvider": {
    "args": [
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGFont=}"
    }
   },
   "CGFontCreateWithFontName": {
    "args": [
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGFont=}"
    }
   },
   "CGFontCreateWithPlatformFont": {
    "args": [
     {
      "name": "platformFontReference",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGFont=}"
    }
   },
   "CGFontGetAscent": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGFontGetCapHeight": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGFontGetDescent": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGFontGetFontBBox": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGFontGetGlyphAdvances": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "glyphs",
      "typestr": "^S"
     },
     {
      "name": "count",
      "typestr": "Q"
     },
     {
      "name": "advances",
      "typestr": "^i"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGFontGetGlyphBBoxes": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "glyphs",
      "typestr": "^S"
     },
     {
      "name": "count",
      "typestr": "Q"
     },
     {
      "name": "bboxes",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGFontGetGlyphWithGlyphName": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     }
    ],
    "retval": {
     "typestr": "S"
    }
   },
   "CGFontGetItalicAngle": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGFontGetLeading": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGFontGetNumberOfGlyphs": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGFontGetStemV": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGFontGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGFontGetUnitsPerEm": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGFontGetXHeight": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGFontRelease": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGFontRetain": {
    "args": [
     {
      "name": "font",
      "typestr": "^{CGFont=}"
     }
    ],
    "retval": {
     "typestr": "^{CGFont=}"
    }
   },
   "CGFunctionCreate": {
    "args": [
     {
      "name": "info",
      "typestr": "^v"
     },
     {
      "name": "domainDimension",
      "typestr": "Q"
     },
     {
      "name": "domain",
      "typestr": "^d"
     },
     {
      "name": "rangeDimension",
      "typestr": "Q"
     },
     {
      "name": "range",
      "typestr": "^d"
     },
     {
      "name": "callbacks",
      "typestr": "^{CGFunctionCallbacks=I^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGFunction=}"
    }
   },
   "CGFunctionGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGFunctionRelease": {
    "args": [
     {
      "name": "function",
      "typestr": "^{CGFunction=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGFunctionRetain": {
    "args": [
     {
      "name": "function",
      "typestr": "^{CGFunction=}"
     }
    ],
    "retval": {
     "typestr": "^{CGFunction=}"
    }
   },
   "CGGetActiveDisplayList": {
    "args": [
     {
      "name": "maxDisplays",
      "typestr": "I"
     },
     {
      "name": "activeDisplays",
      "typestr": "^I"
     },
     {
      "name": "displayCount",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGGetDisplayTransferByFormula": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "redMin",
      "typestr": "^f"
     },
     {
      "name": "redMax",
      "typestr": "^f"
     },
     {
      "name": "redGamma",
      "typestr": "^f"
     },
     {
      "name": "greenMin",
      "typestr": "^f"
     },
     {
      "name": "greenMax",
      "typestr": "^f"
     },
     {
      "name": "greenGamma",
      "typestr": "^f"
     },
     {
      "name": "blueMin",
      "typestr": "^f"
     },
     {
      "name": "blueMax",
      "typestr": "^f"
     },
     {
      "name": "blueGamma",
      "typestr": "^f"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGGetDisplayTransferByTable": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "capacity",
      "typestr": "I"
     },
     {
      "name": "redTable",
      "typestr": "^f"
     },
     {
      "name": "greenTable",
      "typestr": "^f"
     },
     {
      "name": "blueTable",
      "typestr": "^f"
     },
     {
      "name": "sampleCount",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGGetDisplaysWithOpenGLDisplayMask": {
    "args": [
     {
      "name": "mask",
      "typestr": "I"
     },
     {
      "name": "maxDisplays",
      "typestr": "I"
     },
     {
      "name": "displays",
      "typestr": "^I"
     },
     {
      "name": "matchingDisplayCount",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGGetDisplaysWithPoint": {
    "args": [
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "maxDisplays",
      "typestr": "I"
     },
     {
      "name": "displays",
      "typestr": "^I"
     },
     {
      "name": "matchingDisplayCount",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGGetDisplaysWithRect": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "maxDisplays",
      "typestr": "I"
     },
     {
      "name": "displays",
      "typestr": "^I"
     },
     {
      "name": "matchingDisplayCount",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGGetEventTapList": {
    "args": [
     {
      "name": "maxNumberOfTaps",
      "typestr": "I"
     },
     {
      "name": "tapList",
      "typestr": "^{__CGEventTapInformation=IIIQiiBfff}"
     },
     {
      "name": "eventTapCount",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGGetLastMouseDelta": {
    "args": [
     {
      "name": "deltaX",
      "typestr": "^i"
     },
     {
      "name": "deltaY",
      "typestr": "^i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGGetOnlineDisplayList": {
    "args": [
     {
      "name": "maxDisplays",
      "typestr": "I"
     },
     {
      "name": "onlineDisplays",
      "typestr": "^I"
     },
     {
      "name": "displayCount",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGGradientCreateWithColorComponents": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "components",
      "typestr": "^d"
     },
     {
      "name": "locations",
      "typestr": "^d"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGGradient=}"
    }
   },
   "CGGradientCreateWithColors": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "colors",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "locations",
      "typestr": "^d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGGradient=}"
    }
   },
   "CGGradientGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGGradientRelease": {
    "args": [
     {
      "name": "gradient",
      "typestr": "^{CGGradient=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGGradientRetain": {
    "args": [
     {
      "name": "gradient",
      "typestr": "^{CGGradient=}"
     }
    ],
    "retval": {
     "typestr": "^{CGGradient=}"
    }
   },
   "CGImageContainsImageSpecificToneMappingMetadata": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGImageCreate": {
    "args": [
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "bitsPerComponent",
      "typestr": "Q"
     },
     {
      "name": "bitsPerPixel",
      "typestr": "Q"
     },
     {
      "name": "bytesPerRow",
      "typestr": "Q"
     },
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "bitmapInfo",
      "typestr": "I"
     },
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     },
     {
      "name": "decode",
      "typestr": "^d"
     },
     {
      "name": "shouldInterpolate",
      "typestr": "B"
     },
     {
      "name": "intent",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateCopy": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateCopyWithColorSpace": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     },
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateCopyWithContentHeadroom": {
    "args": [
     {
      "name": "headroom",
      "typestr": "f"
     },
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateWithContentHeadroom": {
    "args": [
     {
      "name": "headroom",
      "typestr": "f"
     },
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "bitsPerComponent",
      "typestr": "Q"
     },
     {
      "name": "bitsPerPixel",
      "typestr": "Q"
     },
     {
      "name": "bytesPerRow",
      "typestr": "Q"
     },
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "bitmapInfo",
      "typestr": "I"
     },
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     },
     {
      "name": "decode",
      "typestr": "^d"
     },
     {
      "name": "shouldInterpolate",
      "typestr": "B"
     },
     {
      "name": "intent",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateWithImageInRect": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateWithJPEGDataProvider": {
    "args": [
     {
      "name": "source",
      "typestr": "^{CGDataProvider=}"
     },
     {
      "name": "decode",
      "typestr": "^d"
     },
     {
      "name": "shouldInterpolate",
      "typestr": "B"
     },
     {
      "name": "intent",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateWithMask": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     },
     {
      "name": "mask",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateWithMaskingColors": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     },
     {
      "name": "components",
      "typestr": "^d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageCreateWithPNGDataProvider": {
    "args": [
     {
      "name": "source",
      "typestr": "^{CGDataProvider=}"
     },
     {
      "name": "decode",
      "typestr": "^d"
     },
     {
      "name": "shouldInterpolate",
      "typestr": "B"
     },
     {
      "name": "intent",
      "typestr": "i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageGetAlphaInfo": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGImageGetBitmapInfo": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGImageGetBitsPerComponent": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGImageGetBitsPerPixel": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGImageGetByteOrderInfo": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGImageGetBytesPerRow": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGImageGetColorSpace": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   },
   "CGImageGetContentHeadroom": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "f"
    }
   },
   "CGImageGetDataProvider": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "^{CGDataProvider=}"
    }
   },
   "CGImageGetDecode": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "^d"
    }
   },
   "CGImageGetHeight": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGImageGetPixelFormatInfo": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGImageGetRenderingIntent": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGImageGetShouldInterpolate": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGImageGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGImageGetUTType": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFString=}"
    }
   },
   "CGImageGetWidth": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGImageIsMask": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGImageMaskCreate": {
    "args": [
     {
      "name": "width",
      "typestr": "Q"
     },
     {
      "name": "height",
      "typestr": "Q"
     },
     {
      "name": "bitsPerComponent",
      "typestr": "Q"
     },
     {
      "name": "bitsPerPixel",
      "typestr": "Q"
     },
     {
      "name": "bytesPerRow",
      "typestr": "Q"
     },
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     },
     {
      "name": "decode",
      "typestr": "^d"
     },
     {
      "name": "shouldInterpolate",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageRelease": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGImageRetain": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "^{CGImage=}"
    }
   },
   "CGImageShouldToneMap": {
    "args": [
     {
      "name": "image",
      "typestr": "^{CGImage=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGInhibitLocalEvents": {
    "args": [
     {
      "name": "inhibit",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGLayerCreateWithContext": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "size",
      "typestr": "{CGSize=dd}"
     },
     {
      "name": "auxiliaryInfo",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGLayer=}"
    }
   },
   "CGLayerGetContext": {
    "args": [
     {
      "name": "layer",
      "typestr": "^{CGLayer=}"
     }
    ],
    "retval": {
     "typestr": "^{CGContext=}"
    }
   },
   "CGLayerGetSize": {
    "args": [
     {
      "name": "layer",
      "typestr": "^{CGLayer=}"
     }
    ],
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   },
   "CGLayerGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGLayerRelease": {
    "args": [
     {
      "name": "layer",
      "typestr": "^{CGLayer=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGLayerRetain": {
    "args": [
     {
      "name": "layer",
      "typestr": "^{CGLayer=}"
     }
    ],
    "retval": {
     "typestr": "^{CGLayer=}"
    }
   },
   "CGMainDisplayID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGOpenGLDisplayMaskToDisplayID": {
    "args": [
     {
      "name": "mask",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGPDFArrayApplyBlock": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "block",
      "typestr": "@?"
     },
     {
      "name": "info",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFArrayGetArray": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFArray=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetBoolean": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^C"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetCount": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPDFArrayGetDictionary": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetInteger": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^q"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetName": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^^c"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetNull": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetNumber": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetObject": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFObject=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetStream": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFStream=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFArrayGetString": {
    "args": [
     {
      "name": "array",
      "typestr": "^{CGPDFArray=}"
     },
     {
      "name": "index",
      "typestr": "Q"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFString=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFContentStreamCreateWithPage": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPDFContentStream=}"
    }
   },
   "CGPDFContentStreamCreateWithStream": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{CGPDFStream=}"
     },
     {
      "name": "streamResources",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "parent",
      "typestr": "^{CGPDFContentStream=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPDFContentStream=}"
    }
   },
   "CGPDFContentStreamGetResource": {
    "args": [
     {
      "name": "cs",
      "typestr": "^{CGPDFContentStream=}"
     },
     {
      "name": "category",
      "typestr": "^c"
     },
     {
      "name": "name",
      "typestr": "^c"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFObject=}"
    }
   },
   "CGPDFContentStreamGetStreams": {
    "args": [
     {
      "name": "cs",
      "typestr": "^{CGPDFContentStream=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   },
   "CGPDFContentStreamRelease": {
    "args": [
     {
      "name": "cs",
      "typestr": "^{CGPDFContentStream=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContentStreamRetain": {
    "args": [
     {
      "name": "cs",
      "typestr": "^{CGPDFContentStream=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFContentStream=}"
    }
   },
   "CGPDFContextAddDestinationAtPoint": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextAddDocumentMetadata": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "metadata",
      "typestr": "^{__CFData=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextBeginPage": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "pageInfo",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextBeginTag": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "tagType",
      "typestr": "i"
     },
     {
      "name": "tagProperties",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextClose": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextCreate": {
    "args": [
     {
      "name": "consumer",
      "typestr": "^{CGDataConsumer=}"
     },
     {
      "name": "mediaBox",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "auxiliaryInfo",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGContext=}"
    }
   },
   "CGPDFContextCreateWithURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "mediaBox",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "auxiliaryInfo",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGContext=}"
    }
   },
   "CGPDFContextEndPage": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextEndTag": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextSetDestinationForRect": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "name",
      "typestr": "^{__CFString=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextSetIDTree": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "IDTreeDictionary",
      "typestr": "^{CGPDFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextSetOutline": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "outline",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextSetPageTagStructureTree": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "pageTagStructureTreeDictionary",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextSetParentTree": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "parentTreeDictionary",
      "typestr": "^{CGPDFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFContextSetURLForRect": {
    "args": [
     {
      "name": "context",
      "typestr": "^{CGContext=}"
     },
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFDictionaryApplyBlock": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "block",
      "typestr": "@?"
     },
     {
      "name": "info",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFDictionaryApplyFunction": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^c"
        },
        {
         "typestr": "^{CGPDFObject=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "function",
      "typestr": "^?"
     },
     {
      "name": "info",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFDictionaryGetArray": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFArray=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDictionaryGetBoolean": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^C"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDictionaryGetCount": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPDFDictionaryGetDictionary": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDictionaryGetInteger": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^q"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDictionaryGetName": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^^c"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDictionaryGetNumber": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDictionaryGetObject": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFObject=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDictionaryGetStream": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFStream=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDictionaryGetString": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{CGPDFDictionary=}"
     },
     {
      "name": "key",
      "typestr": "^c"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFString=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDocumentAllowsCopying": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDocumentAllowsPrinting": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDocumentCreateWithProvider": {
    "args": [
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPDFDocument=}"
    }
   },
   "CGPDFDocumentCreateWithURL": {
    "args": [
     {
      "name": "url",
      "typestr": "^{__CFURL=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPDFDocument=}"
    }
   },
   "CGPDFDocumentGetAccessPermissions": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGPDFDocumentGetArtBox": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "page",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGPDFDocumentGetBleedBox": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "page",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGPDFDocumentGetCatalog": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFDictionary=}"
    }
   },
   "CGPDFDocumentGetCropBox": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "page",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGPDFDocumentGetID": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFArray=}"
    }
   },
   "CGPDFDocumentGetInfo": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFDictionary=}"
    }
   },
   "CGPDFDocumentGetMediaBox": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "page",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGPDFDocumentGetNumberOfPages": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPDFDocumentGetOutline": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGPDFDocumentGetPage": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "pageNumber",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFPage=}"
    }
   },
   "CGPDFDocumentGetRotationAngle": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "page",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGPDFDocumentGetTrimBox": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "page",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGPDFDocumentGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPDFDocumentGetVersion": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "majorVersion",
      "typestr": "^i"
     },
     {
      "name": "minorVersion",
      "typestr": "^i"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFDocumentIsEncrypted": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDocumentIsUnlocked": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFDocumentRelease": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFDocumentRetain": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFDocument=}"
    }
   },
   "CGPDFDocumentUnlockWithPassword": {
    "args": [
     {
      "name": "document",
      "typestr": "^{CGPDFDocument=}"
     },
     {
      "name": "password",
      "typestr": "^c"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFObjectGetType": {
    "args": [
     {
      "name": "object",
      "typestr": "^{CGPDFObject=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGPDFObjectGetValue": {
    "args": [
     {
      "name": "object",
      "typestr": "^{CGPDFObject=}"
     },
     {
      "name": "type",
      "typestr": "i"
     },
     {
      "name": "value",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFOperatorTableCreate": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPDFOperatorTable=}"
    }
   },
   "CGPDFOperatorTableRelease": {
    "args": [
     {
      "name": "table",
      "typestr": "^{CGPDFOperatorTable=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFOperatorTableRetain": {
    "args": [
     {
      "name": "table",
      "typestr": "^{CGPDFOperatorTable=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFOperatorTable=}"
    }
   },
   "CGPDFOperatorTableSetCallback": {
    "args": [
     {
      "name": "table",
      "typestr": "^{CGPDFOperatorTable=}"
     },
     {
      "name": "name",
      "typestr": "^c"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^{CGPDFScanner=}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callback",
      "typestr": "^?"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFPageGetBoxRect": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     },
     {
      "name": "box",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGPDFPageGetDictionary": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFDictionary=}"
    }
   },
   "CGPDFPageGetDocument": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFDocument=}"
    }
   },
   "CGPDFPageGetDrawingTransform": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     },
     {
      "name": "box",
      "typestr": "i"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "rotate",
      "typestr": "i"
     },
     {
      "name": "preserveAspectRatio",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   },
   "CGPDFPageGetPageNumber": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPDFPageGetRotationAngle": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGPDFPageGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPDFPageRelease": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFPageRetain": {
    "args": [
     {
      "name": "page",
      "typestr": "^{CGPDFPage=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFPage=}"
    }
   },
   "CGPDFScannerCreate": {
    "args": [
     {
      "name": "cs",
      "typestr": "^{CGPDFContentStream=}"
     },
     {
      "name": "table",
      "typestr": "^{CGPDFOperatorTable=}"
     },
     {
      "name": "info",
      "typestr": "^v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPDFScanner=}"
    }
   },
   "CGPDFScannerGetContentStream": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFContentStream=}"
    }
   },
   "CGPDFScannerPopArray": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFArray=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerPopBoolean": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^C"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerPopDictionary": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerPopInteger": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^q"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerPopName": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^^c"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerPopNumber": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^d"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerPopObject": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFObject=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerPopStream": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFStream=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerPopString": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     },
     {
      "name": "value",
      "typestr": "^^{CGPDFString=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerRelease": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFScannerRetain": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFScanner=}"
    }
   },
   "CGPDFScannerScan": {
    "args": [
     {
      "name": "scanner",
      "typestr": "^{CGPDFScanner=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPDFScannerStop": {
    "args": [
     {
      "name": "s",
      "typestr": "^{CGPDFScanner=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPDFStreamCopyData": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{CGPDFStream=}"
     },
     {
      "name": "format",
      "typestr": "^i"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFData=}"
    }
   },
   "CGPDFStreamGetDictionary": {
    "args": [
     {
      "name": "stream",
      "typestr": "^{CGPDFStream=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPDFDictionary=}"
    }
   },
   "CGPDFStringCopyDate": {
    "args": [
     {
      "name": "string",
      "typestr": "^{CGPDFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDate=}"
    }
   },
   "CGPDFStringCopyTextString": {
    "args": [
     {
      "name": "string",
      "typestr": "^{CGPDFString=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFString=}"
    }
   },
   "CGPDFStringGetBytePtr": {
    "args": [
     {
      "name": "string",
      "typestr": "^{CGPDFString=}"
     }
    ],
    "retval": {
     "typestr": "^C"
    }
   },
   "CGPDFStringGetLength": {
    "args": [
     {
      "name": "string",
      "typestr": "^{CGPDFString=}"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPDFTagTypeGetName": {
    "args": [
     {
      "name": "tagType",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "^c"
    }
   },
   "CGPSConverterAbort": {
    "args": [
     {
      "name": "converter",
      "typestr": "^{CGPSConverter=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPSConverterConvert": {
    "args": [
     {
      "name": "converter",
      "typestr": "^{CGPSConverter=}"
     },
     {
      "name": "provider",
      "typestr": "^{CGDataProvider=}"
     },
     {
      "name": "consumer",
      "typestr": "^{CGDataConsumer=}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPSConverterCreate": {
    "args": [
     {
      "name": "info",
      "typestr": "^v"
     },
     {
      "name": "callbacks",
      "typestr": "^{CGPSConverterCallbacks=I^?^?^?^?^?^?^?}"
     },
     {
      "name": "options",
      "typestr": "^{__CFDictionary=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPSConverter=}"
    }
   },
   "CGPSConverterGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPSConverterIsConverting": {
    "args": [
     {
      "name": "converter",
      "typestr": "^{CGPSConverter=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPathAddArc": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     },
     {
      "name": "radius",
      "typestr": "d"
     },
     {
      "name": "startAngle",
      "typestr": "d"
     },
     {
      "name": "endAngle",
      "typestr": "d"
     },
     {
      "name": "clockwise",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddArcToPoint": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "x1",
      "typestr": "d"
     },
     {
      "name": "y1",
      "typestr": "d"
     },
     {
      "name": "x2",
      "typestr": "d"
     },
     {
      "name": "y2",
      "typestr": "d"
     },
     {
      "name": "radius",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddCurveToPoint": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "cp1x",
      "typestr": "d"
     },
     {
      "name": "cp1y",
      "typestr": "d"
     },
     {
      "name": "cp2x",
      "typestr": "d"
     },
     {
      "name": "cp2y",
      "typestr": "d"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddEllipseInRect": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddLineToPoint": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddLines": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "points",
      "typestr": "^{CGPoint=dd}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddPath": {
    "args": [
     {
      "name": "path1",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "path2",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddQuadCurveToPoint": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "cpx",
      "typestr": "d"
     },
     {
      "name": "cpy",
      "typestr": "d"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddRect": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddRects": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "rects",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddRelativeArc": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "matrix",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     },
     {
      "name": "radius",
      "typestr": "d"
     },
     {
      "name": "startAngle",
      "typestr": "d"
     },
     {
      "name": "delta",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathAddRoundedRect": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "transform",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "cornerWidth",
      "typestr": "d"
     },
     {
      "name": "cornerHeight",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathApply": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "info",
      "typestr": "^v"
     },
     {
      "function": {
       "args": [
        {
         "typestr": "^v"
        },
        {
         "typestr": "^{CGPathElement=i^{CGPoint=dd}}"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "function",
      "typestr": "^?"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathApplyWithBlock": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "block",
      "typestr": "@?"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathCloseSubpath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathContainsPoint": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "eoFill",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPathCreateCopy": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyByDashingPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "transform",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "phase",
      "typestr": "d"
     },
     {
      "name": "lengths",
      "typestr": "^d"
     },
     {
      "name": "count",
      "typestr": "Q"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyByFlattening": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "flatteningThreshold",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyByIntersectingPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "maskPath",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyByNormalizing": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyByStrokingPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "transform",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "lineWidth",
      "typestr": "d"
     },
     {
      "name": "lineCap",
      "typestr": "i"
     },
     {
      "name": "lineJoin",
      "typestr": "i"
     },
     {
      "name": "miterLimit",
      "typestr": "d"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyBySubtractingPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "maskPath",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyBySymmetricDifferenceOfPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "maskPath",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyByTransformingPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "transform",
      "typestr": "^{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyByUnioningPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "maskPath",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyOfLineByIntersectingPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "maskPath",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateCopyOfLineBySubtractingPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "maskPath",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateMutable": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateMutableCopy": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateMutableCopyByTransformingPath": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "transform",
      "typestr": "^{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateSeparateComponents": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CGPathCreateWithEllipseInRect": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "transform",
      "typestr": "^{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateWithRect": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "transform",
      "typestr": "^{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathCreateWithRoundedRect": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "cornerWidth",
      "typestr": "d"
     },
     {
      "name": "cornerHeight",
      "typestr": "d"
     },
     {
      "name": "transform",
      "typestr": "^{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPath=}"
    }
   },
   "CGPathEqualToPath": {
    "args": [
     {
      "name": "path1",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "path2",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPathGetBoundingBox": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGPathGetCurrentPoint": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGPathGetPathBoundingBox": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGPathGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPathIntersectsPath": {
    "args": [
     {
      "name": "path1",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "path2",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "evenOddFillRule",
      "typestr": "B"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPathIsEmpty": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPathIsRect": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "rect",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPathMoveToPoint": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     },
     {
      "name": "m",
      "typestr": "^{CGAffineTransform=dddddd}"
     },
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathRelease": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPathRetain": {
    "args": [
     {
      "name": "path",
      "typestr": "^{CGPath=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPath=}"
    }
   },
   "CGPatternCreate": {
    "args": [
     {
      "name": "info",
      "typestr": "^v"
     },
     {
      "name": "bounds",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "matrix",
      "typestr": "{CGAffineTransform=dddddd}"
     },
     {
      "name": "xStep",
      "typestr": "d"
     },
     {
      "name": "yStep",
      "typestr": "d"
     },
     {
      "name": "tiling",
      "typestr": "i"
     },
     {
      "name": "isColored",
      "typestr": "B"
     },
     {
      "name": "callbacks",
      "typestr": "^{CGPatternCallbacks=I^?^?}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGPattern=}"
    }
   },
   "CGPatternGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGPatternRelease": {
    "args": [
     {
      "name": "pattern",
      "typestr": "^{CGPattern=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGPatternRetain": {
    "args": [
     {
      "name": "pattern",
      "typestr": "^{CGPattern=}"
     }
    ],
    "retval": {
     "typestr": "^{CGPattern=}"
    }
   },
   "CGPointApplyAffineTransform": {
    "args": [
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGPointCreateDictionaryRepresentation": {
    "args": [
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGPointEqualToPoint": {
    "args": [
     {
      "name": "point1",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "point2",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPointMake": {
    "args": [
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   },
   "CGPointMakeWithDictionaryRepresentation": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "point",
      "typestr": "^{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPostKeyboardEvent": {
    "args": [
     {
      "name": "keyChar",
      "typestr": "S"
     },
     {
      "name": "virtualKey",
      "typestr": "S"
     },
     {
      "name": "keyDown",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGPostMouseEvent": {
    "args": [
     {
      "name": "mouseCursorPosition",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "updateMouseCursorPosition",
      "typestr": "I"
     },
     {
      "name": "buttonCount",
      "typestr": "I"
     },
     {
      "name": "mouseButtonDown",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    },
    "variadic": true
   },
   "CGPostScrollWheelEvent": {
    "args": [
     {
      "name": "wheelCount",
      "typestr": "I"
     },
     {
      "name": "wheel1",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "i"
    },
    "variadic": true
   },
   "CGPreflightListenEventAccess": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPreflightPostEventAccess": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGPreflightScreenCaptureAccess": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectApplyAffineTransform": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGRectContainsPoint": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "point",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectContainsRect": {
    "args": [
     {
      "name": "rect1",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "rect2",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectCreateDictionaryRepresentation": {
    "args": [
     {
      "name": "",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGRectDivide": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "slice",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "remainder",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "amount",
      "typestr": "d"
     },
     {
      "name": "edge",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGRectEqualToRect": {
    "args": [
     {
      "name": "rect1",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "rect2",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectGetHeight": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGRectGetMaxX": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGRectGetMaxY": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGRectGetMidX": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGRectGetMidY": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGRectGetMinX": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGRectGetMinY": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGRectGetWidth": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "d"
    }
   },
   "CGRectInset": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "dx",
      "typestr": "d"
     },
     {
      "name": "dy",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGRectIntegral": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGRectIntersection": {
    "args": [
     {
      "name": "r1",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "r2",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGRectIntersectsRect": {
    "args": [
     {
      "name": "rect1",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "rect2",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectIsEmpty": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectIsInfinite": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectIsNull": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectMake": {
    "args": [
     {
      "name": "x",
      "typestr": "d"
     },
     {
      "name": "y",
      "typestr": "d"
     },
     {
      "name": "width",
      "typestr": "d"
     },
     {
      "name": "height",
      "typestr": "d"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGRectMakeWithDictionaryRepresentation": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "rect",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRectOffset": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "dx",
      "typestr": "d"
     },
     {
      "name": "dy",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGRectStandardize": {
    "args": [
     {
      "name": "rect",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGRectUnion": {
    "args": [
     {
      "name": "r1",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "r2",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   },
   "CGRegisterScreenRefreshCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": "I"
        },
        {
         "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGReleaseAllDisplays": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGReleaseDisplayFadeReservation": {
    "args": [
     {
      "name": "token",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGReleaseScreenRefreshRects": {
    "args": [
     {
      "name": "rects",
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGRequestListenEventAccess": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRequestPostEventAccess": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRequestScreenCaptureAccess": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGRestorePermanentDisplayConfiguration": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGScreenRegisterMoveCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": "{CGScreenUpdateMoveDelta=ii}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGScreenUnregisterMoveCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": "{CGScreenUpdateMoveDelta=ii}"
        },
        {
         "typestr": "Q"
        },
        {
         "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGSessionCopyCurrentDictionary": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGSetDisplayTransferByByteTable": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "tableSize",
      "typestr": "I"
     },
     {
      "name": "redTable",
      "typestr": "^C"
     },
     {
      "name": "greenTable",
      "typestr": "^C"
     },
     {
      "name": "blueTable",
      "typestr": "^C"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGSetDisplayTransferByFormula": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "redMin",
      "typestr": "f"
     },
     {
      "name": "redMax",
      "typestr": "f"
     },
     {
      "name": "redGamma",
      "typestr": "f"
     },
     {
      "name": "greenMin",
      "typestr": "f"
     },
     {
      "name": "greenMax",
      "typestr": "f"
     },
     {
      "name": "greenGamma",
      "typestr": "f"
     },
     {
      "name": "blueMin",
      "typestr": "f"
     },
     {
      "name": "blueMax",
      "typestr": "f"
     },
     {
      "name": "blueGamma",
      "typestr": "f"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGSetDisplayTransferByTable": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     },
     {
      "name": "tableSize",
      "typestr": "I"
     },
     {
      "name": "redTable",
      "typestr": "^f"
     },
     {
      "name": "greenTable",
      "typestr": "^f"
     },
     {
      "name": "blueTable",
      "typestr": "^f"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGSetLocalEventsFilterDuringSuppressionState": {
    "args": [
     {
      "name": "filter",
      "typestr": "I"
     },
     {
      "name": "state",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGSetLocalEventsSuppressionInterval": {
    "args": [
     {
      "name": "seconds",
      "typestr": "d"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGShadingCreateAxial": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "start",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "end",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "function",
      "typestr": "^{CGFunction=}"
     },
     {
      "name": "extendStart",
      "typestr": "B"
     },
     {
      "name": "extendEnd",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGShading=}"
    }
   },
   "CGShadingCreateRadial": {
    "args": [
     {
      "name": "space",
      "typestr": "^{CGColorSpace=}"
     },
     {
      "name": "start",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "startRadius",
      "typestr": "d"
     },
     {
      "name": "end",
      "typestr": "{CGPoint=dd}"
     },
     {
      "name": "endRadius",
      "typestr": "d"
     },
     {
      "name": "function",
      "typestr": "^{CGFunction=}"
     },
     {
      "name": "extendStart",
      "typestr": "B"
     },
     {
      "name": "extendEnd",
      "typestr": "B"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGShading=}"
    }
   },
   "CGShadingGetTypeID": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "Q"
    }
   },
   "CGShadingRelease": {
    "args": [
     {
      "name": "shading",
      "typestr": "^{CGShading=}"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGShadingRetain": {
    "args": [
     {
      "name": "shading",
      "typestr": "^{CGShading=}"
     }
    ],
    "retval": {
     "typestr": "^{CGShading=}"
    }
   },
   "CGShieldingWindowID": {
    "args": [
     {
      "name": "display",
      "typestr": "I"
     }
    ],
    "retval": {
     "typestr": "I"
    }
   },
   "CGShieldingWindowLevel": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGSizeApplyAffineTransform": {
    "args": [
     {
      "name": "size",
      "typestr": "{CGSize=dd}"
     },
     {
      "name": "t",
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ],
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   },
   "CGSizeCreateDictionaryRepresentation": {
    "args": [
     {
      "name": "size",
      "typestr": "{CGSize=dd}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFDictionary=}"
    }
   },
   "CGSizeEqualToSize": {
    "args": [
     {
      "name": "size1",
      "typestr": "{CGSize=dd}"
     },
     {
      "name": "size2",
      "typestr": "{CGSize=dd}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGSizeMake": {
    "args": [
     {
      "name": "width",
      "typestr": "d"
     },
     {
      "name": "height",
      "typestr": "d"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   },
   "CGSizeMakeWithDictionaryRepresentation": {
    "args": [
     {
      "name": "dict",
      "typestr": "^{__CFDictionary=}"
     },
     {
      "name": "size",
      "typestr": "^{CGSize=dd}"
     }
    ],
    "retval": {
     "typestr": "B"
    }
   },
   "CGUnregisterScreenRefreshCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": "I"
        },
        {
         "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
        },
        {
         "typestr": "^v"
        }
       ],
       "retval": {
        "typestr": "v"
       }
      },
      "name": "callback",
      "typestr": "^?"
     },
     {
      "name": "userInfo",
      "typestr": "^v"
     }
    ],
    "retval": {
     "typestr": "v"
    }
   },
   "CGVectorMake": {
    "args": [
     {
      "name": "dx",
      "typestr": "d"
     },
     {
      "name": "dy",
      "typestr": "d"
     }
    ],
    "inline": true,
    "retval": {
     "typestr": "{CGVector=dd}"
    }
   },
   "CGWaitForScreenRefreshRects": {
    "args": [
     {
      "name": "rects",
      "typestr": "^^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "count",
      "typestr": "^I"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGWaitForScreenUpdateRects": {
    "args": [
     {
      "name": "requestedOperations",
      "typestr": "I"
     },
     {
      "name": "currentOperation",
      "typestr": "^I"
     },
     {
      "name": "rects",
      "typestr": "^^{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "rectCount",
      "typestr": "^Q"
     },
     {
      "name": "delta",
      "typestr": "^{CGScreenUpdateMoveDelta=ii}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGWarpMouseCursorPosition": {
    "args": [
     {
      "name": "newCursorPosition",
      "typestr": "{CGPoint=dd}"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGWindowLevelForKey": {
    "args": [
     {
      "name": "key",
      "typestr": "i"
     }
    ],
    "retval": {
     "typestr": "i"
    }
   },
   "CGWindowListCopyWindowInfo": {
    "args": [
     {
      "name": "option",
      "typestr": "I"
     },
     {
      "name": "relativeToWindow",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CGWindowListCreate": {
    "args": [
     {
      "name": "option",
      "typestr": "I"
     },
     {
      "name": "relativeToWindow",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CGWindowListCreateDescriptionFromArray": {
    "args": [
     {
      "name": "windowArray",
      "typestr": "^{__CFArray=}"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFArray=}"
    }
   },
   "CGWindowListCreateImage": {
    "args": [
     {
      "name": "screenBounds",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "listOption",
      "typestr": "I"
     },
     {
      "name": "windowID",
      "typestr": "I"
     },
     {
      "name": "imageOption",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGWindowListCreateImageFromArray": {
    "args": [
     {
      "name": "screenBounds",
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     },
     {
      "name": "windowArray",
      "typestr": "^{__CFArray=}"
     },
     {
      "name": "imageOption",
      "typestr": "I"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{CGImage=}"
    }
   },
   "CGWindowServerCFMachPort": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "typestr": "^{__CFMachPort=}"
    }
   },
   "CGWindowServerCreateServerPort": {
    "args": [
     {
      "name": null,
      "typestr": "v"
     }
    ],
    "retval": {
     "already_cfretained": true,
     "typestr": "^{__CFMachPort=}"
    }
   }
  },
  "informal_protocols": {},
  "literals": {
   "kCGDisplayBitsPerPixel": {
    "unicode": true,
    "value": "BitsPerPixel"
   },
   "kCGDisplayBitsPerSample": {
    "unicode": true,
    "value": "BitsPerSample"
   },
   "kCGDisplayBlendNormal": 0.0,
   "kCGDisplayBlendSolidColor": 1.0,
   "kCGDisplayBytesPerRow": {
    "unicode": true,
    "value": "kCGDisplayBytesPerRow"
   },
   "kCGDisplayHeight": {
    "unicode": true,
    "value": "Height"
   },
   "kCGDisplayIOFlags": {
    "unicode": true,
    "value": "IOFlags"
   },
   "kCGDisplayMode": {
    "unicode": true,
    "value": "Mode"
   },
   "kCGDisplayModeIsInterlaced": {
    "unicode": true,
    "value": "kCGDisplayModeIsInterlaced"
   },
   "kCGDisplayModeIsSafeForHardware": {
    "unicode": true,
    "value": "kCGDisplayModeIsSafeForHardware"
   },
   "kCGDisplayModeIsStretched": {
    "unicode": true,
    "value": "kCGDisplayModeIsStretched"
   },
   "kCGDisplayModeIsTelevisionOutput": {
    "unicode": true,
    "value": "kCGDisplayModeIsTelevisionOutput"
   },
   "kCGDisplayModeUsableForDesktopGUI": {
    "unicode": true,
    "value": "UsableForDesktopGUI"
   },
   "kCGDisplayRefreshRate": {
    "unicode": true,
    "value": "RefreshRate"
   },
   "kCGDisplaySamplesPerPixel": {
    "unicode": true,
    "value": "SamplesPerPixel"
   },
   "kCGDisplayWidth": {
    "unicode": true,
    "value": "Width"
   },
   "kCGIODisplayModeID": {
    "unicode": true,
    "value": "IODisplayModeID"
   },
   "kCGMaxDisplayReservationInterval": 15.0,
   "kCGMouseDownEventMaskingDeadSwitchTimeout": 60.0,
   "kCGNotifyEventTapAdded": {
    "unicode": false,
    "value": "com.apple.coregraphics.eventTapAdded"
   },
   "kCGNotifyEventTapRemoved": {
    "unicode": false,
    "value": "com.apple.coregraphics.eventTapRemoved"
   },
   "kCGNotifyGUIConsoleSessionChanged": {
    "unicode": false,
    "value": "com.apple.coregraphics.GUIConsoleSessionChanged"
   },
   "kCGNotifyGUISessionUserChanged": {
    "unicode": false,
    "value": "com.apple.coregraphics.GUISessionUserChanged"
   },
   "kCGSessionConsoleSetKey": {
    "unicode": true,
    "value": "kCGSSessionConsoleSetKey"
   },
   "kCGSessionLoginDoneKey": {
    "unicode": true,
    "value": "kCGSessionLoginDoneKey"
   },
   "kCGSessionOnConsoleKey": {
    "unicode": true,
    "value": "kCGSSessionOnConsoleKey"
   },
   "kCGSessionUserIDKey": {
    "unicode": true,
    "value": "kCGSSessionUserIDKey"
   },
   "kCGSessionUserNameKey": {
    "unicode": true,
    "value": "kCGSSessionUserNameKey"
   }
  },
  "structs": {
   "CGColorBufferFormat": {
    "fieldnames": [
     "version",
     "bitmapInfo",
     "bitsPerComponent",
     "bitsPerPixel",
     "bytesPerRow"
    ],
    "special": false,
    "typestr": "{CGColorBufferFormat=IIQQQ}"
   },
   "CGColorDataFormat": {
    "fieldnames": [
     "version",
     "colorspace_info",
     "bitmap_info",
     "bits_per_component",
     "bytes_per_row",
     "intent",
     "decode"
    ],
    "special": true,
    "typestr": "{CGColorDataFormat=I@IQQi^d}"
   },
   "CGDeviceColor": {
    "fieldnames": [
     "red",
     "green",
     "blue"
    ],
    "special": false,
    "typestr": "{CGDeviceColor=fff}"
   },
   "CGEventTapInformation": {
    "fieldnames": [
     "eventTapID",
     "tapPoint",
     "options",
     "eventsOfInterest",
     "tappingProcess",
     "processBeingTapped",
     "enabled",
     "minUsecLatency",
     "avgUsecLatency",
     "maxUsecLatency"
    ],
    "special": false,
    "typestr": "{__CGEventTapInformation=IIIQiiBfff}"
   },
   "CGPathElement": {
    "fieldnames": [
     "type",
     "points"
    ],
    "special": false,
    "typestr": "{CGPathElement=i^{CGPoint=dd}}"
   },
   "CGScreenUpdateMoveDelta": {
    "fieldnames": [
     "dX",
     "dY"
    ],
    "special": false,
    "typestr": "{CGScreenUpdateMoveDelta=ii}"
   }
  },
  "typedefs": {
   "CGBitmapContextReleaseDataCallback": "void (*)(void * _Nullable, void * _Nullable)",
   "CGBitmapInfo": "enum CGBitmapInfo",
   "CGBlendMode": "enum CGBlendMode",
   "CGButtonCount": "uint32_t",
   "CGCaptureOptions": "enum CGCaptureOptions",
   "CGCharCode": "uint16_t",
   "CGColorBufferFormat": "struct CGColorBufferFormat",
   "CGColorConversionInfoRef": "const struct CGColorConversionInfo *",
   "CGColorConversionInfoTransformType": "enum CGColorConversionInfoTransformType",
   "CGColorDataFormat": "struct CGColorDataFormat",
   "CGColorRef": "struct CGColor *",
   "CGColorRenderingIntent": "enum CGColorRenderingIntent",
   "CGColorSpaceModel": "enum CGColorSpaceModel",
   "CGColorSpaceRef": "struct CGColorSpace *",
   "CGConfigureOption": "enum CGConfigureOption",
   "CGContextRef": "struct CGContext *",
   "CGDataConsumerCallbacks": "struct CGDataConsumerCallbacks",
   "CGDataConsumerPutBytesCallback": "size_t (*)(void * _Nullable, const void * _Nonnull, size_t)",
   "CGDataConsumerRef": "struct CGDataConsumer *",
   "CGDataConsumerReleaseInfoCallback": "void (*)(void * _Nullable)",
   "CGDataProviderDirectCallbacks": "struct CGDataProviderDirectCallbacks",
   "CGDataProviderGetBytePointerCallback": "const void * _Nullable (*)(void * _Nullable)",
   "CGDataProviderGetBytesAtPositionCallback": "size_t (*)(void * _Nullable, void * _Nonnull, off_t, size_t)",
   "CGDataProviderGetBytesCallback": "size_t (*)(void * _Nullable, void * _Nonnull, size_t)",
   "CGDataProviderRef": "struct CGDataProvider *",
   "CGDataProviderReleaseBytePointerCallback": "void (*)(void * _Nullable, const void * _Nonnull)",
   "CGDataProviderReleaseDataCallback": "void (*)(void * _Nullable, const void * _Nonnull, size_t)",
   "CGDataProviderReleaseInfoCallback": "void (*)(void * _Nullable)",
   "CGDataProviderRewindCallback": "void (*)(void * _Nullable)",
   "CGDataProviderSequentialCallbacks": "struct CGDataProviderSequentialCallbacks",
   "CGDataProviderSkipForwardCallback": "off_t (*)(void * _Nullable, off_t)",
   "CGDeviceColor": "struct CGDeviceColor",
   "CGDirectDisplayID": "uint32_t",
   "CGDisplayBlendFraction": "float",
   "CGDisplayChangeSummaryFlags": "enum CGDisplayChangeSummaryFlags",
   "CGDisplayConfigRef": "struct _CGDisplayConfigRef *",
   "CGDisplayCount": "uint32_t",
   "CGDisplayErr": "CGError",
   "CGDisplayFadeInterval": "float",
   "CGDisplayFadeReservationToken": "uint32_t",
   "CGDisplayModeRef": "struct CGDisplayMode *",
   "CGDisplayReconfigurationCallBack": "void (*)(CGDirectDisplayID, CGDisplayChangeSummaryFlags, void * _Nullable)",
   "CGDisplayReservationInterval": "float",
   "CGDisplayStreamFrameAvailableHandler": "void (^)(CGDisplayStreamFrameStatus, uint64_t, IOSurfaceRef _Nullable, CGDisplayStreamUpdateRef _Nullable)",
   "CGDisplayStreamFrameStatus": "enum CGDisplayStreamFrameStatus",
   "CGDisplayStreamRef": "struct CGDisplayStream *",
   "CGDisplayStreamUpdateRectType": "enum CGDisplayStreamUpdateRectType",
   "CGDisplayStreamUpdateRef": "const struct CGDisplayStreamUpdate *",
   "CGError": "enum CGError",
   "CGErrorCallback": "void (*)(void)",
   "CGEventErr": "CGError",
   "CGEventField": "enum CGEventField",
   "CGEventFilterMask": "enum CGEventFilterMask",
   "CGEventFlags": "enum CGEventFlags",
   "CGEventMask": "uint64_t",
   "CGEventMouseSubtype": "enum CGEventMouseSubtype",
   "CGEventRef": "struct __CGEvent *",
   "CGEventSourceKeyboardType": "uint32_t",
   "CGEventSourceRef": "struct __CGEventSource *",
   "CGEventSourceStateID": "enum CGEventSourceStateID",
   "CGEventSuppressionState": "enum CGEventSuppressionState",
   "CGEventTapCallBack": "CGEventRef  _Nullable (*)(CGEventTapProxy _Nonnull, CGEventType, CGEventRef _Nonnull, void * _Nullable)",
   "CGEventTapInformation": "struct __CGEventTapInformation",
   "CGEventTapLocation": "enum CGEventTapLocation",
   "CGEventTapOptions": "enum CGEventTapOptions",
   "CGEventTapPlacement": "enum CGEventTapPlacement",
   "CGEventTapProxy": "struct __CGEventTapProxy *",
   "CGEventTimestamp": "uint64_t",
   "CGEventType": "enum CGEventType",
   "CGFontIndex": "unsigned short",
   "CGFontPostScriptFormat": "enum CGFontPostScriptFormat",
   "CGFontRef": "struct CGFont *",
   "CGFunctionCallbacks": "struct CGFunctionCallbacks",
   "CGFunctionEvaluateCallback": "void (*)(void * _Nullable, const CGFloat * _Nonnull, CGFloat * _Nonnull)",
   "CGFunctionRef": "struct CGFunction *",
   "CGFunctionReleaseInfoCallback": "void (*)(void * _Nullable)",
   "CGGammaValue": "float",
   "CGGesturePhase": "enum CGGesturePhase",
   "CGGlyph": "CGFontIndex",
   "CGGlyphDeprecatedEnum": "enum CGGlyphDeprecatedEnum",
   "CGGradientDrawingOptions": "enum CGGradientDrawingOptions",
   "CGGradientRef": "struct CGGradient *",
   "CGImageAlphaInfo": "enum CGImageAlphaInfo",
   "CGImageByteOrderInfo": "enum CGImageByteOrderInfo",
   "CGImagePixelFormatInfo": "enum CGImagePixelFormatInfo",
   "CGImageRef": "struct CGImage *",
   "CGInterpolationQuality": "enum CGInterpolationQuality",
   "CGKeyCode": "uint16_t",
   "CGLayerRef": "struct CGLayer *",
   "CGLineCap": "enum CGLineCap",
   "CGLineJoin": "enum CGLineJoin",
   "CGMomentumScrollPhase": "enum CGMomentumScrollPhase",
   "CGMouseButton": "enum CGMouseButton",
   "CGMutablePathRef": "struct CGPath *",
   "CGOpenGLDisplayMask": "uint32_t",
   "CGPDFAccessPermissions": "enum CGPDFAccessPermissions",
   "CGPDFArrayApplierBlock": "_Bool (^)(size_t, CGPDFObjectRef _Nonnull, void * _Nullable)",
   "CGPDFArrayRef": "struct CGPDFArray *",
   "CGPDFBoolean": "unsigned char",
   "CGPDFBox": "enum CGPDFBox",
   "CGPDFContentStreamRef": "struct CGPDFContentStream *",
   "CGPDFDataFormat": "enum CGPDFDataFormat",
   "CGPDFDictionaryApplierBlock": "_Bool (^)(const char * _Nonnull, CGPDFObjectRef _Nonnull, void * _Nullable)",
   "CGPDFDictionaryApplierFunction": "void (*)(const char * _Nonnull, CGPDFObjectRef _Nonnull, void * _Nullable)",
   "CGPDFDictionaryRef": "struct CGPDFDictionary *",
   "CGPDFDocumentRef": "struct CGPDFDocument *",
   "CGPDFInteger": "long",
   "CGPDFObjectRef": "struct CGPDFObject *",
   "CGPDFObjectType": "enum CGPDFObjectType",
   "CGPDFOperatorCallback": "void (*)(CGPDFScannerRef _Nonnull, void * _Nullable)",
   "CGPDFOperatorTableRef": "struct CGPDFOperatorTable *",
   "CGPDFPageRef": "struct CGPDFPage *",
   "CGPDFReal": "CGFloat",
   "CGPDFScannerRef": "struct CGPDFScanner *",
   "CGPDFStreamRef": "struct CGPDFStream *",
   "CGPDFStringRef": "struct CGPDFString *",
   "CGPDFTagProperty": "CFStringRef",
   "CGPDFTagType": "enum CGPDFTagType",
   "CGPSConverterBeginDocumentCallback": "void (*)(void * _Nullable)",
   "CGPSConverterBeginPageCallback": "void (*)(void * _Nullable, size_t, CFDictionaryRef _Nonnull)",
   "CGPSConverterCallbacks": "struct CGPSConverterCallbacks",
   "CGPSConverterEndDocumentCallback": "void (*)(void * _Nullable, _Bool)",
   "CGPSConverterEndPageCallback": "void (*)(void * _Nullable, size_t, CFDictionaryRef _Nonnull)",
   "CGPSConverterMessageCallback": "void (*)(void * _Nullable, CFStringRef _Nonnull)",
   "CGPSConverterProgressCallback": "void (*)(void * _Nullable)",
   "CGPSConverterRef": "struct CGPSConverter *",
   "CGPSConverterReleaseInfoCallback": "void (*)(void * _Nullable)",
   "CGPathApplierFunction": "void (*)(void * _Nullable, const CGPathElement * _Nonnull)",
   "CGPathApplyBlock": "void (^)(const CGPathElement * _Nonnull)",
   "CGPathDrawingMode": "enum CGPathDrawingMode",
   "CGPathElement": "struct CGPathElement",
   "CGPathElementType": "enum CGPathElementType",
   "CGPathRef": "const struct CGPath *",
   "CGPatternCallbacks": "struct CGPatternCallbacks",
   "CGPatternDrawPatternCallback": "void (*)(void * _Nullable, CGContextRef _Nullable)",
   "CGPatternRef": "struct CGPattern *",
   "CGPatternReleaseInfoCallback": "void (*)(void * _Nullable)",
   "CGPatternTiling": "enum CGPatternTiling",
   "CGRectCount": "uint32_t",
   "CGRefreshRate": "double",
   "CGScreenRefreshCallback": "void (*)(uint32_t, const CGRect * _Nonnull, void * _Nullable)",
   "CGScreenUpdateMoveCallback": "void (*)(CGScreenUpdateMoveDelta, size_t, const CGRect * _Nonnull, void * _Nullable)",
   "CGScreenUpdateMoveDelta": "struct CGScreenUpdateMoveDelta",
   "CGScreenUpdateOperation": "enum CGScreenUpdateOperation",
   "CGScrollEventUnit": "enum CGScrollEventUnit",
   "CGScrollPhase": "enum CGScrollPhase",
   "CGShadingRef": "struct CGShading *",
   "CGTextDrawingMode": "enum CGTextDrawingMode",
   "CGTextEncoding": "enum CGTextEncoding",
   "CGToneMapping": "enum CGToneMapping",
   "CGWheelCount": "uint32_t",
   "CGWindowBackingType": "enum CGWindowBackingType",
   "CGWindowID": "uint32_t",
   "CGWindowImageOption": "enum CGWindowImageOption",
   "CGWindowLevel": "int32_t",
   "CGWindowLevelKey": "enum CGWindowLevelKey",
   "CGWindowListOption": "enum CGWindowListOption",
   "CGWindowSharingType": "enum CGWindowSharingType",
   "ColorSyncProfileRef": "const struct ColorSyncProfile *",
   "IOSurfaceRef": "struct __IOSurface *"
  }
 },
 "framework": "CoreGraphics",
 "headers": [
  "CGAffineTransform.h",
  "CGBase.h",
  "CGBitmapContext.h",
  "CGColor.h",
  "CGColorConversionInfo.h",
  "CGColorSpace.h",
  "CGContext.h",
  "CGConvertColorDataWithFormat.h",
  "CGDataConsumer.h",
  "CGDataProvider.h",
  "CGDirectDisplay.h",
  "CGDirectDisplayMetal.h",
  "CGDirectPalette.h",
  "CGDisplayConfiguration.h",
  "CGDisplayFade.h",
  "CGDisplayStream.h",
  "CGEXRToneMappingGamma.h",
  "CGError.h",
  "CGEvent.h",
  "CGEventSource.h",
  "CGEventTypes.h",
  "CGFont.h",
  "CGFunction.h",
  "CGGeometry.h",
  "CGGradient.h",
  "CGITUToneMapping.h",
  "CGImage.h",
  "CGLayer.h",
  "CGPDFArray.h",
  "CGPDFContentStream.h",
  "CGPDFContext.h",
  "CGPDFDictionary.h",
  "CGPDFDocument.h",
  "CGPDFObject.h",
  "CGPDFOperatorTable.h",
  "CGPDFPage.h",
  "CGPDFScanner.h",
  "CGPDFStream.h",
  "CGPDFString.h",
  "CGPSConverter.h",
  "CGPath.h",
  "CGPattern.h",
  "CGRemoteOperation.h",
  "CGSession.h",
  "CGShading.h",
  "CGToneMapping.h",
  "CGWindow.h",
  "CGWindowLevel.h"
 ],
 "release": "10.16",
 "sdk": "/Users/ronald/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.2.sdk"
}
