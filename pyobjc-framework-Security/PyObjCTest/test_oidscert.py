import Security
from PyObjCTools.TestSupport import TestCase


class Testoidscert(TestCase):
    def test_unsuppported(self):
        self.assertFalse(hasattr(Security, "INTEL_X509V3_CERT_R08"))
        self.assertFalse(hasattr(Security, "INTEL_X509V3_CERT_R08_LENGTH"))
        self.assertFalse(hasattr(Security, "INTEL_X509V3_CERT_PRIVATE_EXTENSIONS"))
        self.assertFalse(hasattr(Security, "INTEL_X509V3_CERT_PRIVATE_EXTENSIONS_LENGTH"))
        self.assertFalse(hasattr(Security, "INTEL_X509V3_SIGN_R08"))
        self.assertFalse(hasattr(Security, "INTEL_X509V3_SIGN_R08_LENGTH"))
        self.assertFalse(hasattr(Security, "INTEL_X509_C_DATATYPE"))
        self.assertFalse(hasattr(Security, "INTEL_X509_LDAPSTRING_DATATYPE"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3SignedCertificate"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3SignedCertificateCStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3Certificate"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateCStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1Version"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SerialNumber"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1IssuerName"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1IssuerNameStd"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1IssuerNameCStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1IssuerNameLDAP"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1ValidityNotBefore"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1ValidityNotAfter"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SubjectName"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SubjectNameStd"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SubjectNameCStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SubjectNameLDAP"))
        self.assertFalse(hasattr(Security, "CSSMOID_CSSMKeyStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SubjectPublicKeyCStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SubjectPublicKeyAlgorithm"))
        self.assertFalse(
            hasattr(Security, "CSSMOID_X509V1SubjectPublicKeyAlgorithmParameters")
        )
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SubjectPublicKey"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1CertificateIssuerUniqueId"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1CertificateSubjectUniqueId"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateExtensionsStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateExtensionsCStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateNumberOfExtensions"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateExtensionStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateExtensionCStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateExtensionId"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateExtensionCritical"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateExtensionType"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V3CertificateExtensionValue"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SignatureStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SignatureCStruct"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SignatureAlgorithm"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SignatureAlgorithmTBS"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1SignatureAlgorithmParameters"))
        self.assertFalse(hasattr(Security, "CSSMOID_X509V1Signature"))
        self.assertFalse(hasattr(Security, "CSSMOID_SubjectSignatureBitmap"))
        self.assertFalse(hasattr(Security, "CSSMOID_SubjectPicture"))
        self.assertFalse(hasattr(Security, "CSSMOID_SubjectEmailAddress"))
        self.assertFalse(hasattr(Security, "CSSMOID_UseExemptions"))
        self.assertFalse(hasattr(Security, "CSSMOID_SubjectDirectoryAttributes"))
        self.assertFalse(hasattr(Security, "CSSMOID_SubjectKeyIdentifier"))
        self.assertFalse(hasattr(Security, "CSSMOID_KeyUsage"))
        self.assertFalse(hasattr(Security, "CSSMOID_PrivateKeyUsagePeriod"))
        self.assertFalse(hasattr(Security, "CSSMOID_SubjectAltName"))
        self.assertFalse(hasattr(Security, "CSSMOID_IssuerAltName"))
        self.assertFalse(hasattr(Security, "CSSMOID_BasicConstraints"))
        self.assertFalse(hasattr(Security, "CSSMOID_CrlNumber"))
        self.assertFalse(hasattr(Security, "CSSMOID_CrlReason"))
        self.assertFalse(hasattr(Security, "CSSMOID_HoldInstructionCode"))
        self.assertFalse(hasattr(Security, "CSSMOID_InvalidityDate"))
        self.assertFalse(hasattr(Security, "CSSMOID_DeltaCrlIndicator"))
        self.assertFalse(hasattr(Security, "CSSMOID_IssuingDistributionPoint"))
        self.assertFalse(hasattr(Security, "CSSMOID_IssuingDistributionPoints"))
        self.assertFalse(hasattr(Security, "CSSMOID_CertIssuer"))
        self.assertFalse(hasattr(Security, "CSSMOID_NameConstraints"))
        self.assertFalse(hasattr(Security, "CSSMOID_CrlDistributionPoints"))
        self.assertFalse(hasattr(Security, "CSSMOID_CertificatePolicies"))
        self.assertFalse(hasattr(Security, "CSSMOID_PolicyMappings"))
        self.assertFalse(hasattr(Security, "CSSMOID_PolicyConstraints"))
        self.assertFalse(hasattr(Security, "CSSMOID_AuthorityKeyIdentifier"))
        self.assertFalse(hasattr(Security, "CSSMOID_ExtendedKeyUsage"))
        self.assertFalse(hasattr(Security, "CSSMOID_InhibitAnyPolicy"))
        self.assertFalse(hasattr(Security, "CSSMOID_AuthorityInfoAccess"))
        self.assertFalse(hasattr(Security, "CSSMOID_BiometricInfo"))
        self.assertFalse(hasattr(Security, "CSSMOID_QC_Statements"))
        self.assertFalse(hasattr(Security, "CSSMOID_SubjectInfoAccess"))
        self.assertFalse(hasattr(Security, "CSSMOID_ExtendedKeyUsageAny"))
        self.assertFalse(hasattr(Security, "CSSMOID_ServerAuth"))
        self.assertFalse(hasattr(Security, "CSSMOID_ClientAuth"))
        self.assertFalse(hasattr(Security, "CSSMOID_ExtendedUseCodeSigning"))
        self.assertFalse(hasattr(Security, "CSSMOID_EmailProtection"))
        self.assertFalse(hasattr(Security, "CSSMOID_TimeStamping"))
        self.assertFalse(hasattr(Security, "CSSMOID_OCSPSigning"))
        self.assertFalse(hasattr(Security, "CSSMOID_KERBv5_PKINIT_KP_CLIENT_AUTH"))
        self.assertFalse(hasattr(Security, "CSSMOID_KERBv5_PKINIT_KP_KDC"))
        self.assertFalse(hasattr(Security, "CSSMOID_EKU_IPSec"))
        self.assertFalse(hasattr(Security, "CSSMOID_DOTMAC_CERT_EXTENSION"))
        self.assertFalse(hasattr(Security, "CSSMOID_DOTMAC_CERT_IDENTITY"))
        self.assertFalse(hasattr(Security, "CSSMOID_DOTMAC_CERT_EMAIL_SIGN"))
        self.assertFalse(hasattr(Security, "CSSMOID_DOTMAC_CERT_EMAIL_ENCRYPT"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_CERT_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_DOTMAC_CERT_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_ADC_CERT_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_MACAPPSTORE_CERT_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_MACAPPSTORE_RECEIPT_CERT_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLEID_CERT_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLEID_SHARING_CERT_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_MOBILE_STORE_SIGNING_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_TEST_MOBILE_STORE_SIGNING_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_CODE_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_CODE_SIGNING_DEV"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_RESOURCE_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_ICHAT_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_ICHAT_ENCRYPTION"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_SYSTEM_IDENTITY"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_PASSBOOK_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_PROFILE_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EKU_QA_PROFILE_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_CODE_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_APPLE_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_ADC_DEV_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_ADC_APPLE_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_PASSBOOK_SIGNING"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_MACAPPSTORE_RECEIPT"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_INTERMEDIATE_MARKER"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_WWDR_INTERMEDIATE"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_ITMS_INTERMEDIATE"))
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_AAI_INTERMEDIATE"))
        self.assertFalse(
            hasattr(Security, "CSSMOID_APPLE_EXTENSION_APPLEID_INTERMEDIATE")
        )
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_APPLEID_SHARING"))
        self.assertFalse(
            hasattr(Security, "CSSMOID_APPLE_EXTENSION_SYSINT2_INTERMEDIATE")
        )
        self.assertFalse(
            hasattr(Security, "CSSMOID_APPLE_EXTENSION_DEVELOPER_AUTHENTICATION")
        )
        self.assertFalse(
            hasattr(Security, "CSSMOID_APPLE_EXTENSION_SERVER_AUTHENTICATION")
        )
        self.assertFalse(hasattr(Security, "CSSMOID_APPLE_EXTENSION_ESCROW_SERVICE"))
        self.assertFalse(
            hasattr(Security, "CSSMOID_APPLE_EXTENSION_PROVISIONING_PROFILE_SIGNING")
        )
        self.assertFalse(hasattr(Security, "CSSMOID_NetscapeCertType"))
        self.assertFalse(hasattr(Security, "CSSMOID_NetscapeCertSequence"))
        self.assertFalse(hasattr(Security, "CSSMOID_NetscapeSGC"))
        self.assertFalse(hasattr(Security, "CSSMOID_MicrosoftSGC"))
        self.assertFalse(hasattr(Security, "CE_NCT_SSL_Client"))
        self.assertFalse(hasattr(Security, "CE_NCT_SSL_Server"))
        self.assertFalse(hasattr(Security, "CE_NCT_SMIME"))
        self.assertFalse(hasattr(Security, "CE_NCT_ObjSign"))
        self.assertFalse(hasattr(Security, "CE_NCT_Reserved"))
        self.assertFalse(hasattr(Security, "CE_NCT_SSL_CA"))
        self.assertFalse(hasattr(Security, "CE_NCT_SMIME_CA"))
        self.assertFalse(hasattr(Security, "CE_NCT_ObjSignCA"))
