import Security
from PyObjCTools.TestSupport import TestCase


class Testcssmerr(TestCase):
    def test_unsuppported(self):
        self.assertFalse(hasattr(Security, "CSSM_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_ERRORCODE_MODULE_EXTENT"))
        self.assertFalse(hasattr(Security, "CSSM_ERRORCODE_CUSTOM_OFFSET"))
        self.assertFalse(hasattr(Security, "CSSM_ERRORCODE_COMMON_EXTENT"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRBASE"))
        self.assertFalse(hasattr(Security, "CSSM_ERR_IS_CONVERTIBLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERR_TAG"))
        self.assertFalse(hasattr(Security, "CSSM_CSSM_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_CSSM_PRIVATE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_CSP_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_CSP_PRIVATE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_DL_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_DL_PRIVATE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_CL_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_CL_PRIVATE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_TP_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_TP_PRIVATE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_KR_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_KR_PRIVATE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_AC_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_AC_PRIVATE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_MDS_BASE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_MDS_PRIVATE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_ADDIN_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_NOT_INITIALIZED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_HANDLE_USAGE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_PVC_REFERENT_NOT_FOUND"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_FUNCTION_INTEGRITY_FAIL"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INTERNAL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_MEMORY_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_MDS_ERROR"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_INPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_OUTPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_FUNCTION_NOT_IMPLEMENTED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_SELF_CHECK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_OS_ACCESS_DENIED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_FUNCTION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_MODULE_MANIFEST_VERIFY_FAILED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_GUID"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_OPERATION_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_OBJECT_USE_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_OBJECT_MANIP_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_OBJECT_ACL_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_OBJECT_ACL_REQUIRED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_ACCESS_CREDENTIALS"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_ACL_BASE_CERTS"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_ACL_BASE_CERTS_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_SAMPLE_VALUE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_SAMPLE_VALUE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_ACL_SUBJECT_VALUE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_ACL_SUBJECT_TYPE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_ACL_CHALLENGE_CALLBACK"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_ACL_CHALLENGE_CALLBACK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_ACL_ENTRY_TAG"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_ACL_ENTRY_TAG_NOT_FOUND"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_ACL_EDIT_MODE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_ACL_CHANGE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_NEW_ACL_ENTRY"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_NEW_ACL_OWNER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_ACL_DELETE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_ACL_REPLACE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_ACL_ADD_FAILED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_CONTEXT_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INCOMPATIBLE_VERSION"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_CERTGROUP_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_CERT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_CRL_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_FIELD_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_DATA"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_CRL_ALREADY_SIGNED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_NUMBER_OF_FIELDS"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_VERIFICATION_FAILURE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_DB_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_PRIVILEGE_NOT_GRANTED"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_DB_LIST"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_DB_LIST_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_UNKNOWN_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_UNKNOWN_TAG"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_CSP_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_DL_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_CL_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_TP_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_KR_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_AC_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_PASSTHROUGH_ID"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_NETWORK_ADDR"))
        self.assertFalse(hasattr(Security, "CSSM_ERRCODE_INVALID_CRYPTO_DATA"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INTERNAL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_MEMORY_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_MDS_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_INPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_OUTPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_FUNCTION_NOT_IMPLEMENTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_SELF_CHECK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_OS_ACCESS_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_FUNCTION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_MODULE_MANIFEST_VERIFY_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_GUID"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_CONTEXT_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INCOMPATIBLE_VERSION"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_PRIVILEGE_NOT_GRANTED"))
        self.assertFalse(hasattr(Security, "CSSM_CSSM_BASE_CSSM_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_SCOPE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_PVC_ALREADY_CONFIGURED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_PVC"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_EMM_LOAD_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_EMM_UNLOAD_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_ADDIN_LOAD_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_KEY_HIERARCHY"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_ADDIN_UNLOAD_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_LIB_REF_NOT_FOUND"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_ADDIN_FUNCTION_TABLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_EMM_AUTHENTICATE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_ADDIN_AUTHENTICATE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_SERVICE_MASK"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_MODULE_NOT_LOADED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_SUBSERVICEID"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_BUFFER_TOO_SMALL"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_INVALID_ATTRIBUTE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_ATTRIBUTE_NOT_IN_CONTEXT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_MODULE_MANAGER_INITIALIZE_FAIL"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSSM_MODULE_MANAGER_NOT_FOUND"))
        self.assertFalse(
            hasattr(Security, "CSSMERR_CSSM_EVENT_NOTIFICATION_CALLBACK_NOT_FOUND")
        )
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INTERNAL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MEMORY_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MDS_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_INPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_OUTPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_FUNCTION_NOT_IMPLEMENTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_SELF_CHECK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_OS_ACCESS_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_FUNCTION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_OPERATION_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_OBJECT_USE_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_OBJECT_MANIP_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_OBJECT_ACL_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_OBJECT_ACL_REQUIRED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ACCESS_CREDENTIALS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ACL_BASE_CERTS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ACL_BASE_CERTS_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_SAMPLE_VALUE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_SAMPLE_VALUE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ACL_SUBJECT_VALUE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ACL_SUBJECT_TYPE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ACL_CHALLENGE_CALLBACK"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ACL_CHALLENGE_CALLBACK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ACL_ENTRY_TAG"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ACL_ENTRY_TAG_NOT_FOUND"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ACL_EDIT_MODE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ACL_CHANGE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_NEW_ACL_ENTRY"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_NEW_ACL_OWNER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ACL_DELETE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ACL_REPLACE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ACL_ADD_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_CONTEXT_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_PRIVILEGE_NOT_GRANTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_DATA"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_PASSTHROUGH_ID"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_CRYPTO_DATA"))
        self.assertFalse(hasattr(Security, "CSSM_CSP_BASE_CSP_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INPUT_LENGTH_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_OUTPUT_LENGTH_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_PRIVILEGE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_DEVICE_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_DEVICE_MEMORY_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ATTACH_HANDLE_BUSY"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_NOT_LOGGED_IN"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_KEY"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_KEY_REFERENCE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_KEY_CLASS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ALGID_MISMATCH"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_KEY_USAGE_INCORRECT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_KEY_BLOB_TYPE_INCORRECT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_KEY_HEADER_INCONSISTENT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_UNSUPPORTED_KEY_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_UNSUPPORTED_KEY_SIZE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_KEY_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_KEYUSAGE_MASK"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_UNSUPPORTED_KEYUSAGE_MASK"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_KEYATTR_MASK"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_UNSUPPORTED_KEYATTR_MASK"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_KEY_LABEL"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_UNSUPPORTED_KEY_LABEL"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_KEY_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_DATA_COUNT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_VECTOR_OF_BUFS_UNSUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_INPUT_VECTOR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_OUTPUT_VECTOR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_CONTEXT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ALGORITHM"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_KEY"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_KEY"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_INIT_VECTOR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_INIT_VECTOR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_SALT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_SALT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_PADDING"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_PADDING"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_RANDOM"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_RANDOM"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_SEED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_SEED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_PASSPHRASE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_PASSPHRASE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_KEY_LENGTH"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_KEY_LENGTH"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_BLOCK_SIZE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_BLOCK_SIZE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_OUTPUT_SIZE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_OUTPUT_SIZE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_ROUNDS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_ROUNDS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_ALG_PARAMS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_ALG_PARAMS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_LABEL"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_LABEL"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_KEY_TYPE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_KEY_TYPE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_MODE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_MODE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_EFFECTIVE_BITS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_EFFECTIVE_BITS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_START_DATE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_START_DATE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_END_DATE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_END_DATE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_VERSION"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_VERSION"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_PRIME"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_PRIME"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_BASE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_BASE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_SUBPRIME"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_SUBPRIME"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_ITERATION_COUNT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_ITERATION_COUNT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_DL_DB_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_DL_DB_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_ACCESS_CREDENTIALS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_ACCESS_CREDENTIALS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_PUBLIC_KEY_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_PUBLIC_KEY_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_PRIVATE_KEY_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_PRIVATE_KEY_FORMAT"))
        self.assertFalse(
            hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_SYMMETRIC_KEY_FORMAT")
        )
        self.assertFalse(
            hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_SYMMETRIC_KEY_FORMAT")
        )
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_ATTR_WRAPPED_KEY_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_MISSING_ATTR_WRAPPED_KEY_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_STAGED_OPERATION_IN_PROGRESS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_STAGED_OPERATION_NOT_STARTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_VERIFY_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_SIGNATURE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_QUERY_SIZE_UNKNOWN"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_BLOCK_SIZE_MISMATCH"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_PRIVATE_KEY_NOT_FOUND"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_PUBLIC_KEY_INCONSISTENT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_DEVICE_VERIFY_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_LOGIN_NAME"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_ALREADY_LOGGED_IN"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_PRIVATE_KEY_ALREADY_EXISTS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_KEY_LABEL_ALREADY_EXISTS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_INVALID_DIGEST_ALGORITHM"))
        self.assertFalse(hasattr(Security, "CSSMERR_CSP_CRYPTO_DATA_CALLBACK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INTERNAL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_MEMORY_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_MDS_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_INPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_OUTPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_FUNCTION_NOT_IMPLEMENTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_SELF_CHECK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_OS_ACCESS_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_FUNCTION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CONTEXT_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_DATA"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_DB_LIST"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CERTGROUP_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CERT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CRL_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_FIELD_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_NETWORK_ADDR"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_CRL_ALREADY_SIGNED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_NUMBER_OF_FIELDS"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_VERIFICATION_FAILURE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_DB_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_UNKNOWN_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_UNKNOWN_TAG"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_PASSTHROUGH_ID"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CSP_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_DL_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CL_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_DB_LIST_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_TP_BASE_TP_ERROR"))
        self.assertFalse(
            hasattr(Security, "CSSMERR_TP_INVALID_CALLERAUTH_CONTEXT_POINTER")
        )
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_IDENTIFIER_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_KEYCACHE_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CERTGROUP"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CRLGROUP"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CRLGROUP_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_AUTHENTICATION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_CERTGROUP_INCOMPLETE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_CERTIFICATE_CANT_OPERATE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_CERT_EXPIRED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_CERT_NOT_VALID_YET"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_CERT_REVOKED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_CERT_SUSPENDED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INSUFFICIENT_CREDENTIALS"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_ACTION"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_ACTION_DATA"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_ANCHOR_CERT"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_AUTHORITY"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_VERIFY_ACTION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CERTIFICATE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CERT_AUTHORITY"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CRL_AUTHORITY"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CRL_ENCODING"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CRL_TYPE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CRL"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_FORM_TYPE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_ID"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_IDENTIFIER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_INDEX"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_NAME"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_POLICY_IDENTIFIERS"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_TIMESTRING"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_REASON"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_REQUEST_INPUTS"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_RESPONSE_VECTOR"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_SIGNATURE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_STOP_ON_POLICY"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_CALLBACK"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_TUPLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_NOT_SIGNER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_NOT_TRUSTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_NO_DEFAULT_AUTHORITY"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_REJECTED_FORM"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_REQUEST_LOST"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_REQUEST_REJECTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_UNSUPPORTED_ADDR_TYPE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_UNSUPPORTED_SERVICE"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_TUPLEGROUP_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_TP_INVALID_TUPLEGROUP"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INTERNAL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_MEMORY_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_MDS_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_INPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_OUTPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_FUNCTION_NOT_IMPLEMENTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_SELF_CHECK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_OS_ACCESS_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_FUNCTION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_CONTEXT_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_DATA"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_DB_LIST"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_PASSTHROUGH_ID"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_DL_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_CL_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_TP_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_DB_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_DB_LIST_POINTER"))
        self.assertFalse(hasattr(Security, "CSSM_AC_BASE_AC_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_BASE_ACLS"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_TUPLE_CREDENTIALS"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_ENCODING"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_VALIDITY_PERIOD"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_REQUESTOR"))
        self.assertFalse(hasattr(Security, "CSSMERR_AC_INVALID_REQUEST_DESCRIPTOR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INTERNAL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_MEMORY_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_MDS_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_INPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_OUTPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_FUNCTION_NOT_IMPLEMENTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_SELF_CHECK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_OS_ACCESS_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_FUNCTION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_CONTEXT_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_CERTGROUP_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_CERT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_CRL_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_FIELD_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_DATA"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_CRL_ALREADY_SIGNED"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_NUMBER_OF_FIELDS"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_VERIFICATION_FAILURE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_UNKNOWN_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_UNKNOWN_TAG"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_PASSTHROUGH_ID"))
        self.assertFalse(hasattr(Security, "CSSM_CL_BASE_CL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_BUNDLE_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_CACHE_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_RESULTS_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_BUNDLE_INFO"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_CRL_INDEX"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_INVALID_SCOPE"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_NO_FIELD_VALUES"))
        self.assertFalse(hasattr(Security, "CSSMERR_CL_SCOPE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INTERNAL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_MEMORY_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_MDS_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_INPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_OUTPUT_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_FUNCTION_NOT_IMPLEMENTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_SELF_CHECK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_OS_ACCESS_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_FUNCTION_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_CSP_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_DL_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_CL_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_DB_LIST_POINTER"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_OPERATION_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_OBJECT_USE_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_OBJECT_MANIP_AUTH_DENIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_OBJECT_ACL_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_OBJECT_ACL_REQUIRED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_ACCESS_CREDENTIALS"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_ACL_BASE_CERTS"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ACL_BASE_CERTS_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_SAMPLE_VALUE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_SAMPLE_VALUE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_ACL_SUBJECT_VALUE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ACL_SUBJECT_TYPE_NOT_SUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_ACL_CHALLENGE_CALLBACK"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ACL_CHALLENGE_CALLBACK_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_ACL_ENTRY_TAG"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ACL_ENTRY_TAG_NOT_FOUND"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_ACL_EDIT_MODE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ACL_CHANGE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_NEW_ACL_ENTRY"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_NEW_ACL_OWNER"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ACL_DELETE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ACL_REPLACE_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ACL_ADD_FAILED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_DB_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_PASSTHROUGH_ID"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_NETWORK_ADDR"))
        self.assertFalse(hasattr(Security, "CSSM_DL_BASE_DL_ERROR"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_DATABASE_CORRUPT"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_RECORD_INDEX"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_RECORDTYPE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_FIELD_NAME"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_FIELD_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_INDEX_INFO"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_LOCALITY"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_NUM_ATTRIBUTES"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_NUM_INDEXES"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_NUM_RECORDTYPES"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_RECORDTYPE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_FIELD_SPECIFIED_MULTIPLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INCOMPATIBLE_FIELD_FORMAT"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_PARSING_MODULE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_DB_NAME"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_DATASTORE_DOESNOT_EXIST"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_DATASTORE_ALREADY_EXISTS"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_DB_LOCKED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_DATASTORE_IS_OPEN"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_RECORD_NOT_FOUND"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_MISSING_VALUE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_QUERY"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_QUERY_LIMITS"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_NUM_SELECTION_PREDS"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_UNSUPPORTED_OPERATOR"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_RESULTS_HANDLE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_DB_LOCATION"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_ACCESS_REQUEST"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_INDEX_INFO"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_SELECTION_TAG"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_NEW_OWNER"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_RECORD_UID"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_UNIQUE_INDEX_DATA"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_MODIFY_MODE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_OPEN_PARAMETERS"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_RECORD_MODIFIED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_ENDOFDATA"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_QUERY"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_INVALID_VALUE"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_MULTIPLE_VALUES_UNSUPPORTED"))
        self.assertFalse(hasattr(Security, "CSSMERR_DL_STALE_UNIQUE_RECORD"))
